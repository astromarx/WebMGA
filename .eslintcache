[{"/home/padrino-eduardo/Desktop/webmga/src/index.js":"1","/home/padrino-eduardo/Desktop/webmga/src/App.js":"2","/home/padrino-eduardo/Desktop/webmga/src/Controller.js":"3","/home/padrino-eduardo/Desktop/webmga/src/View/Top.js":"4","/home/padrino-eduardo/Desktop/webmga/src/View/Side.js":"5","/home/padrino-eduardo/Desktop/webmga/src/Model/Model.js":"6","/home/padrino-eduardo/Desktop/webmga/src/Model/Light.js":"7","/home/padrino-eduardo/Desktop/webmga/src/View/SubMenus.js":"8","/home/padrino-eduardo/Desktop/webmga/src/Model/Shapes.js":"9","/home/padrino-eduardo/Desktop/webmga/src/View/Tools.js":"10","/home/padrino-eduardo/Desktop/webmga/src/View/View.js":"11","/home/padrino-eduardo/Desktop/webmga/src/Model/Set.js":"12","/home/padrino-eduardo/Desktop/webmga/src/Model/Parameters.js":"13","/home/padrino-eduardo/Desktop/webmga/src/Model/Tools.js":"14"},{"size":198,"mtime":1609107771761,"results":"15","hashOfConfig":"16"},{"size":929,"mtime":1609596111151,"results":"17","hashOfConfig":"16"},{"size":2496,"mtime":1611602818114,"results":"18","hashOfConfig":"16"},{"size":2995,"mtime":1609536671580,"results":"19","hashOfConfig":"16"},{"size":5739,"mtime":1611784517637,"results":"20","hashOfConfig":"16"},{"size":9350,"mtime":1611786192640,"results":"21","hashOfConfig":"16"},{"size":979,"mtime":1609970158993,"results":"22","hashOfConfig":"16"},{"size":24102,"mtime":1611782273339,"results":"23","hashOfConfig":"16"},{"size":23989,"mtime":1611771380330,"results":"24","hashOfConfig":"16"},{"size":7158,"mtime":1611688894224,"results":"25","hashOfConfig":"16"},{"size":3116,"mtime":1611754623769,"results":"26","hashOfConfig":"16"},{"size":5916,"mtime":1611783219922,"results":"27","hashOfConfig":"16"},{"size":977,"mtime":1611769071440,"results":"28","hashOfConfig":"16"},{"size":2753,"mtime":1611786665199,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1fh0xym",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/padrino-eduardo/Desktop/webmga/src/index.js",[],["63","64"],"/home/padrino-eduardo/Desktop/webmga/src/App.js",[],"/home/padrino-eduardo/Desktop/webmga/src/Controller.js",["65","66"],"import Model  from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport sample from './Samples/sample1.txt';\n\nclass Controller {\n    model;\n    view;\n\n    constructor() {\n        this.model = new Model();\n        this.view = new View(this.model);\n        //this.stats = new Stats();\n    }\n\n    start = () => {\n        this.addListeners();\n        this.loadSample();\n        this.render();\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSiderbar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    render = () => {\n        //this.stats.begin();\n        this.model.update();\n        //this.stats.end();\n        //this.updateFPS();\n        requestAnimationFrame(this.render);\n    }\n\n    loadSample = () => {\n        fetch(sample)\n            .then(res => res.text())\n            .then(configData => {\n                this.model.load(configData);\n            });\n    }\n\n    addListeners = () => {\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            // //spacebar\n            // if (key == 32) {\n            //     this.model.toggleCameraRotation();\n            // }\n            // //a\n            // if (key == 65) {\n            //     this.model.toggleAxes();\n            // }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n\nvar Stats = function () {\n\n    var fps = 10;\n    var frames = 0;\n    var prevTime;\n  \n    return {\n      getFPS: function () {\n        return fps;\n      },\n      begin: function () {\n        prevTime = Date.now();\n      },\n      end: function () {\n        frames++;\n        var time = Date.now();\n  \n        if (time > prevTime + 1000) {\n          fps = (frames * 1000) / (time - prevTime);\n          prevTime = time;\n          frames = 0;\n          console.log(fps);\n        }\n      },\n  \n    };\n  \n  };\n  \n  ","/home/padrino-eduardo/Desktop/webmga/src/View/Top.js",[],"/home/padrino-eduardo/Desktop/webmga/src/View/Side.js",["67","68","69","70","71","72"],"/home/padrino-eduardo/Desktop/webmga/src/Model/Model.js",["73","74","75","76","77","78"],"/home/padrino-eduardo/Desktop/webmga/src/Model/Light.js",["79"],"import {\n    AmbientLight,\n    DirectionalLight,\n    PointLight\n} from 'three';\n\nexport class Light {\n    light;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#0ff0ff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffff00\", 0.5);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 2);\n                break;\n        }\n    }\n}\n\nexport default Light;","/home/padrino-eduardo/Desktop/webmga/src/View/SubMenus.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"\nimport { Dropdown, Sidebar, Sidenav, Nav, Icon, Navbar, ButtonGroup, Tooltip, Whisper, Divider, Container, Checkbox, InputNumber, Content, Panel, HelpBlock, FormGroup, RadioGroup, Radio, Grid, Row, Col, Header, Footer, Button, FlexboxGrid, Form, ControlLabel, FormControl, Slider, IconButton } from 'rsuite';\nimport React, { Component, useState } from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\n\nconst LODToolTip = (\n    <Tooltip>\n        Decreasing LOD will increase rendering speed.\n    </Tooltip>\n);\n\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.ModelState;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateShininess = this.updateShininess.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n    updateShininess(val){\n        this.setState({\n            shininess : val\n        });\n        View.ModelState.configurations[this.state.active].shininess = val;\n        this.model.updateShininess(this.state.active, val)\n    }\n\n    updateUserColour(value, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        View.ModelState.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour(){\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector : toggle\n        });\n        View.ModelState.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n    }\n\n    toggleWireframe(){\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe : toggle\n        });\n        View.ModelState.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n    }\n\n    updateParameter(val, index){\n        this.state.configurations[this.state.active].parameters.vals[index] = parseFloat(val);\n        this.reset();\n        View.ModelState.configurations[this.state.active].parameters.vals[index] = parseFloat(val);\n        this.model.updateShape(this.state.shape, this.state.active, this.state.configurations[this.state.active].parameters);\n    }\n\n    reset(){\n        let i;\n        if(this.state.reset > 50){\n            i = 0;\n        }else{\n            i = ++this.state.reset;\n        }\n        this.setState(\n            {\n                reset: i\n            }\n        );\n    }\n\n    selectSet(val){\n        for(let i = 0; i < this.state.sets.length; i++){\n            if(this.state.sets[i].localeCompare(val) == 0){\n                this.setState({\n                    active: i\n                })\n                View.ModelState.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val){\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n\n        this.reset();\n        View.ModelState.configurations[this.state.active].shape = val;\n        View.ModelState.configurations[this.state.active].parameters = parameters;\n        \n\n        this.model.updateShape(val, this.state.active, parameters);\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cone\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} />\n                <br/>\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br/>\n                    </Col>\n                </Row>\n                \n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Shininess </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={configState.shininess} f={this.updateShininess}/>\n\n            </div>\n        );\n    }\n}\n\nexport class ViewOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.ViewOptionsState;\n\n        this.model = props.model;\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.selectCameraType = this.selectCameraType.bind(this);\n        this.updateLOD = this.updateLOD.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n\n    }\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        View.ViewOptionsState.rotating = !View.ViewOptionsState.rotating;\n        this.model.toggleCameraRotation();\n    }\n    selectCameraType(value) {\n        this.setState({\n            type: value\n        });\n        View.ViewOptionsState.cameraType = value;\n        this.model.setCamera(value);\n    }\n    updateLOD(value) {\n        this.setState({\n            LOD: value\n        });\n        View.ViewOptionsState.LOD = value;\n        this.model.updateLOD(value - 1);\n    }\n\n    updateLookat(value, type) {\n        let lookAt = this.state.lookAt;\n\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(value);\n                break;\n            case 1:\n                lookAt.y = parseFloat(value);\n                break;\n            case 2:\n                lookAt.z = parseFloat(value);\n                break;\n        }\n\n        console.log(lookAt)\n        this.model.updateLookAt(lookAt);\n        View.ViewOptionsState.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const rotating = this.state.rotating;\n\n        return (\n            <div >\n\n                <Divider><strong style={dividerStyle}> Camera </strong></Divider>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox checked={rotating} onClick={this.toggleAutorotate}> AutoRotate</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n\n\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectCameraType}>\n                                    <br />\n                                    <p>Type</p>\n                                    <Radio defaultChecked value=\"perspective\">Perspective </Radio>\n                                    <Radio value=\"orthographic\">Orthographic </Radio>\n                                </RadioGroup>\n                            </FormGroup>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p> Look at</p>\n                        </Col>\n                    </Row>\n                </Grid>\n\n                <ParameterSet titles={[\"X position\", \"Y position\", \"Z position\"]} values={[0.0,0.0,0.0]} f={this.updateLookat} />\n                <br />\n\n\n\n                <Divider><strong style={dividerStyle}> Perfomance Tuning </strong></Divider>\n\n                <Form style={{ marginLeft: TITLE_LEFT_MARGIN }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Level of Detail</ControlLabel>\n                        <Whisper placement=\"top\" trigger=\"hover\" speaker={LODToolTip}>\n                            <Icon icon=\"question-circle\" size=\"lg\" style={{ marginTop: 12 }} />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n\n                    min={1}\n                    step={1}\n                    max={5}\n                    defaultValue={4}\n                    graduated\n                    progress\n                    style={{ width: 220, marginLeft: 40 }}\n                    onChange={this.updateLOD}\n                    renderMark={mark => {\n                        return mark;\n                    }}\n                />\n\n            </div>);\n    }\n}\n\nexport const SlicingOptions = ({ ...props }) => {\n\n    return (\n        <div>\n            <SliceSlider title=\"X : \" />\n            <SliceSlider title=\"Y : \" />\n            <SliceSlider title=\"Z : \" />\n        </div>\n    );\n\n}\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.PointLightState;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') == 0) {\n            this.setState(View.DirectionalLightState);\n        } else {\n            this.setState(View.PointLightState);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') == 0) {\n            View.PointLightState.enabled = enabled;\n            intensity = View.PointLightState.colour.i;\n        } else {\n            View.DirectionalLightState.enabled = enabled;\n            intensity = View.DirectionalLightState.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n    }\n    updateColour(value, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                break;\n        }\n\n        if (this.state.active.localeCompare('point') == 0) {\n            this.model.updateLight(2, colour);\n            View.PointLightState.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.DirectionalLightState.colour = colour;\n        }\n    }\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = value;\n                break;\n            case 'y':\n                position.y = value;\n                break;\n            case 'z':\n                position.z = value;\n                break;\n        }\n\n        if (this.state.active.localeCompare('point') == 0) {\n            this.model.updateLightPosition(2, position);\n            View.PointLightState.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.DirectionalLightState.position = position;\n        }\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.AmbientLightState;\n\n        this.model = props.model;\n\n        this.updateAmbientLightColour = this.updateAmbientLightColour.bind(this);\n        this.updateBackgroundColour = this.updateBackgroundColour.bind(this);\n    }\n    updateAmbientLightColour(value, type) {\n        let colour = this.state.ambientLightColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n        }\n        this.model.updateLight(0, colour);\n        View.AmbientLightState.ambientLightColour = colour;\n    }\n    updateBackgroundColour(value, type) {\n        let colour = this.state.backgroundColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n        }\n        this.model.updateBg(colour);\n        View.AmbientLightState.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateAmbientLightColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateAmbientLightColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateAmbientLightColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateAmbientLightColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBackgroundColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBackgroundColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBackgroundColour} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class VisualElementsOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.VisualElementsState;\n\n        this.model = props.model;\n        this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateGridColour = this.updateGridColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n\n    }\n    updateGridColour(value, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = value;\n                break;\n            case 'g':\n                rgb.g = value;\n                break;\n            case 'b':\n                rgb.b = value;\n                break;\n        }\n        this.model.updateGridColour(rgb);\n        View.VisualElementsState.gridColour = rgb;\n    }\n    updateGridSize(value) {\n        this.model.updateGridSize(value);\n        View.VisualElementsState.size = value;\n    }\n    toggleBoundingShapeEnabled() {\n        let toggle = !View.VisualElementsState.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        View.VisualElementsState.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(this.state.activeShape, toggle);\n    }\n    selectShape(value) {\n        this.setState({\n            activeShape: value\n        });\n        View.VisualElementsState.activeShape = value;\n        this.model.updateBoundingShape(value, this.state.boundingShapeEnabled);\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        View.VisualElementsState.showAxes = !View.VisualElementsState.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        View.VisualElementsState.showGrid = !View.VisualElementsState.showGrid;\n    }\n\n    render() {\n        const enabled = this.state.boundingShapeEnabled;\n        const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Bounding Shape </strong></Divider>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={enabled} onClick={this.toggleBoundingShapeEnabled}> Enabled </Checkbox>\n                            <br />\n\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <p>Shapes</p>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    <Radio disabled={!enabled} value=\"sphere\" >Sphere </Radio>\n                                    <Radio disabled={!enabled} value=\"cylinder\" >Cylinder </Radio>\n                                </RadioGroup>\n                            </FormGroup>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> PRINT SHAPE INFO HERE</p>\n\n                <Divider><strong style={dividerStyle}> Grid </strong></Divider>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={showAxes} onClick={this.toggleAxes}> Show Axes</Checkbox>\n                            <Checkbox checked={showGrid} onClick={this.toggleGrid}> Show Grid</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n\n                <br />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateGridColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateGridColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateGridColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n\n                <br />\n            </div>\n        );\n    }\n}","/home/padrino-eduardo/Desktop/webmga/src/Model/Shapes.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"/home/padrino-eduardo/Desktop/webmga/src/View/Tools.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"/home/padrino-eduardo/Desktop/webmga/src/View/View.js",["181"],"/home/padrino-eduardo/Desktop/webmga/src/Model/Set.js",["182","183","184"],"import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color\n} from 'three';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\n\nexport class Set {\n    name;\n    type;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    shininess;\n    userColour;\n    colourByDirector;\n    lod;\n\n    elements = []\n    meshes = [];\n\n    constructor(n, ot, d) {\n        this.name = n;\n        this.orientationType = ot;\n        this.setDefaults();\n        this.genElements(d);\n        this.setElements();\n        this.genMeshes();\n    }\n\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                c = new Color(elem.getColour());\n            } else {\n                c = this.userColour;\n            }\n            mat = new MeshPhongMaterial({ color: c });\n            mat.wireframe = this.wireframe;\n            mat.shininess = this.shininess;\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n            }\n        }\n    }\n\n    setUserColour(hex){\n        this.userColour = new Color(hex);\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.translate(elem.position, geoms);\n            this.rotate(elem.euler, geoms);\n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements(elements) {\n        let position, orientation, attributes, euler, nP;\n        let temp = [], colour = [];\n\n        for (let elem of elements) {\n            attributes = elem.split(\" \");\n\n            for (let a of attributes) {\n                temp.push(parseFloat(a));\n            }\n\n            attributes = temp;\n            temp = [];\n            console.log(attributes.length);\n\n            if (attributes.length != 7) { break; }\n\n            position = attributes.slice(0, 3);\n            orientation = attributes.slice(3);\n\n            euler = this.getRotations(this.orientationType, orientation);\n            colour = this.colourFromOrientation(euler);\n\n            nP = new this.Element(colour, position, euler);\n            this.elements.push(nP);\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FF55FF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.shininess = 30;\n        this.lod = 4;\n        this.type = 'Ellipsoid'\n        this.parameters = Parameters.Ellipsoid.vals\n        this.genGeometries();\n    }\n\n    genGeometries() {\n        switch (this.type) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cone':\n                this.shape = new SHAPE.Preset('Cone', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateX(e.x);\n            g.rotateY(e.y);\n            g.rotateZ(e.z);\n        }\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n        return colour;\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        let e = new Euler();\n\n        switch (type) {\n            case 'v':\n                let defaultVector = new Vector3(0, 0, 1);\n                q.setFromUnitVectors(defaultVector, new Vector3(rot[0], rot[1], rot[2]));\n                e.setFromQuaternion(q);\n                break;\n            case 'q':\n                q.fromArray(rot);\n                e.setFromQuaternion(q);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                e.setFromQuaternion(q);\n                break;\n            case 'e':\n                e.fromArray(rot);\n                break;\n        }\n\n        return e;\n\n    }\n\n    Element = class Element {\n        geometries;\n        colour;\n        position;\n        euler;\n\n        constructor(c, p, e) {\n            this.colour = c;\n            this.position = p;\n            this.euler = e;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","/home/padrino-eduardo/Desktop/webmga/src/Model/Parameters.js",[],"/home/padrino-eduardo/Desktop/webmga/src/Model/Tools.js",["185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":66,"column":17,"nodeType":"193","messageId":"194","endLine":66,"endColumn":20},{"ruleId":"191","severity":1,"message":"195","line":93,"column":5,"nodeType":"193","messageId":"194","endLine":93,"endColumn":10},{"ruleId":"191","severity":1,"message":"196","line":2,"column":19,"nodeType":"193","messageId":"194","endLine":2,"endColumn":26},{"ruleId":"191","severity":1,"message":"197","line":2,"column":28,"nodeType":"193","messageId":"194","endLine":2,"endColumn":35},{"ruleId":"191","severity":1,"message":"198","line":2,"column":48,"nodeType":"193","messageId":"194","endLine":2,"endColumn":51},{"ruleId":"191","severity":1,"message":"199","line":2,"column":53,"nodeType":"193","messageId":"194","endLine":2,"endColumn":56},{"ruleId":"191","severity":1,"message":"200","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":81,"column":9,"nodeType":"203","messageId":"204","endLine":100,"endColumn":10},{"ruleId":"191","severity":1,"message":"205","line":7,"column":5,"nodeType":"193","messageId":"194","endLine":7,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":92,"column":18,"nodeType":"208","messageId":"209","endLine":92,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":107,"column":29,"nodeType":"208","messageId":"209","endLine":107,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":224,"column":31,"nodeType":"208","messageId":"209","endLine":224,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":243,"column":9,"nodeType":"203","messageId":"204","endLine":269,"endColumn":10},{"ruleId":"206","severity":1,"message":"207","line":343,"column":21,"nodeType":"208","messageId":"209","endLine":343,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":28,"column":9,"nodeType":"203","messageId":"204","endLine":39,"endColumn":10},{"ruleId":"191","severity":1,"message":"210","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"191","severity":1,"message":"211","line":2,"column":20,"nodeType":"193","messageId":"194","endLine":2,"endColumn":27},{"ruleId":"191","severity":1,"message":"212","line":2,"column":29,"nodeType":"193","messageId":"194","endLine":2,"endColumn":36},{"ruleId":"191","severity":1,"message":"213","line":2,"column":49,"nodeType":"193","messageId":"194","endLine":2,"endColumn":55},{"ruleId":"191","severity":1,"message":"214","line":2,"column":57,"nodeType":"193","messageId":"194","endLine":2,"endColumn":68},{"ruleId":"191","severity":1,"message":"215","line":2,"column":97,"nodeType":"193","messageId":"194","endLine":2,"endColumn":106},{"ruleId":"191","severity":1,"message":"216","line":2,"column":118,"nodeType":"193","messageId":"194","endLine":2,"endColumn":129},{"ruleId":"191","severity":1,"message":"217","line":2,"column":131,"nodeType":"193","messageId":"194","endLine":2,"endColumn":138},{"ruleId":"191","severity":1,"message":"218","line":2,"column":140,"nodeType":"193","messageId":"194","endLine":2,"endColumn":145},{"ruleId":"191","severity":1,"message":"219","line":2,"column":147,"nodeType":"193","messageId":"194","endLine":2,"endColumn":156},{"ruleId":"191","severity":1,"message":"220","line":2,"column":204,"nodeType":"193","messageId":"194","endLine":2,"endColumn":210},{"ruleId":"191","severity":1,"message":"221","line":2,"column":212,"nodeType":"193","messageId":"194","endLine":2,"endColumn":218},{"ruleId":"191","severity":1,"message":"222","line":2,"column":220,"nodeType":"193","messageId":"194","endLine":2,"endColumn":226},{"ruleId":"191","severity":1,"message":"223","line":2,"column":228,"nodeType":"193","messageId":"194","endLine":2,"endColumn":239},{"ruleId":"191","severity":1,"message":"224","line":2,"column":261,"nodeType":"193","messageId":"194","endLine":2,"endColumn":272},{"ruleId":"191","severity":1,"message":"225","line":2,"column":282,"nodeType":"193","messageId":"194","endLine":2,"endColumn":292},{"ruleId":"191","severity":1,"message":"226","line":3,"column":17,"nodeType":"193","messageId":"194","endLine":3,"endColumn":26},{"ruleId":"191","severity":1,"message":"227","line":3,"column":28,"nodeType":"193","messageId":"194","endLine":3,"endColumn":36},{"ruleId":"201","severity":1,"message":"202","line":45,"column":9,"nodeType":"203","messageId":"204","endLine":55,"endColumn":10},{"ruleId":"228","severity":1,"message":"229","line":79,"column":9,"nodeType":"230","endLine":79,"endColumn":69},{"ruleId":"228","severity":1,"message":"229","line":90,"column":19,"nodeType":"230","endLine":90,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":101,"column":54,"nodeType":"208","messageId":"209","endLine":101,"endColumn":56},{"ruleId":"201","severity":1,"message":"202","line":206,"column":9,"nodeType":"203","messageId":"204","endLine":216,"endColumn":10},{"ruleId":"206","severity":1,"message":"207","line":336,"column":54,"nodeType":"208","messageId":"209","endLine":336,"endColumn":56},{"ruleId":"206","severity":1,"message":"207","line":353,"column":54,"nodeType":"208","messageId":"209","endLine":353,"endColumn":56},{"ruleId":"206","severity":1,"message":"207","line":388,"column":54,"nodeType":"208","messageId":"209","endLine":388,"endColumn":56},{"ruleId":"201","severity":1,"message":"202","line":399,"column":9,"nodeType":"203","messageId":"204","endLine":409,"endColumn":10},{"ruleId":"206","severity":1,"message":"207","line":411,"column":54,"nodeType":"208","messageId":"209","endLine":411,"endColumn":56},{"ruleId":"201","severity":1,"message":"202","line":467,"column":9,"nodeType":"203","messageId":"204","endLine":480,"endColumn":10},{"ruleId":"201","severity":1,"message":"202","line":487,"column":9,"nodeType":"203","messageId":"204","endLine":497,"endColumn":10},{"ruleId":"201","severity":1,"message":"202","line":540,"column":9,"nodeType":"203","messageId":"204","endLine":550,"endColumn":10},{"ruleId":"206","severity":1,"message":"231","line":46,"column":19,"nodeType":"208","messageId":"209","endLine":46,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":66,"column":41,"nodeType":"208","messageId":"209","endLine":66,"endColumn":43},{"ruleId":"201","severity":1,"message":"202","line":94,"column":9,"nodeType":"203","messageId":"204","endLine":107,"endColumn":10},{"ruleId":"206","severity":1,"message":"207","line":142,"column":27,"nodeType":"208","messageId":"209","endLine":142,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":142,"column":37,"nodeType":"208","messageId":"209","endLine":142,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":157,"column":27,"nodeType":"208","messageId":"209","endLine":157,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":157,"column":37,"nodeType":"208","messageId":"209","endLine":157,"endColumn":39},{"ruleId":"232","severity":1,"message":"233","line":191,"column":18,"nodeType":"193","messageId":"234","endLine":191,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":192,"column":19,"nodeType":"208","messageId":"209","endLine":192,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":192,"column":29,"nodeType":"208","messageId":"209","endLine":192,"endColumn":31},{"ruleId":"232","severity":1,"message":"233","line":220,"column":18,"nodeType":"193","messageId":"234","endLine":220,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":221,"column":19,"nodeType":"208","messageId":"209","endLine":221,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":221,"column":29,"nodeType":"208","messageId":"209","endLine":221,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":277,"column":27,"nodeType":"208","messageId":"209","endLine":277,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":277,"column":37,"nodeType":"208","messageId":"209","endLine":277,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":292,"column":27,"nodeType":"208","messageId":"209","endLine":292,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":292,"column":37,"nodeType":"208","messageId":"209","endLine":292,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":317,"column":27,"nodeType":"208","messageId":"209","endLine":317,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":317,"column":37,"nodeType":"208","messageId":"209","endLine":317,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":332,"column":27,"nodeType":"208","messageId":"209","endLine":332,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":332,"column":37,"nodeType":"208","messageId":"209","endLine":332,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":356,"column":23,"nodeType":"208","messageId":"209","endLine":356,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":356,"column":33,"nodeType":"208","messageId":"209","endLine":356,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":391,"column":23,"nodeType":"208","messageId":"209","endLine":391,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":391,"column":33,"nodeType":"208","messageId":"209","endLine":391,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":421,"column":23,"nodeType":"208","messageId":"209","endLine":421,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":421,"column":33,"nodeType":"208","messageId":"209","endLine":421,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":483,"column":27,"nodeType":"208","messageId":"209","endLine":483,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":483,"column":37,"nodeType":"208","messageId":"209","endLine":483,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":495,"column":27,"nodeType":"208","messageId":"209","endLine":495,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":495,"column":37,"nodeType":"208","messageId":"209","endLine":495,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":507,"column":27,"nodeType":"208","messageId":"209","endLine":507,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":507,"column":37,"nodeType":"208","messageId":"209","endLine":507,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":519,"column":27,"nodeType":"208","messageId":"209","endLine":519,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":519,"column":37,"nodeType":"208","messageId":"209","endLine":519,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":549,"column":23,"nodeType":"208","messageId":"209","endLine":549,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":549,"column":33,"nodeType":"208","messageId":"209","endLine":549,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":578,"column":23,"nodeType":"208","messageId":"209","endLine":578,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":578,"column":33,"nodeType":"208","messageId":"209","endLine":578,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":637,"column":27,"nodeType":"208","messageId":"209","endLine":637,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":637,"column":37,"nodeType":"208","messageId":"209","endLine":637,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":652,"column":27,"nodeType":"208","messageId":"209","endLine":652,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":652,"column":37,"nodeType":"208","messageId":"209","endLine":652,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":684,"column":23,"nodeType":"208","messageId":"209","endLine":684,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":684,"column":33,"nodeType":"208","messageId":"209","endLine":684,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":715,"column":23,"nodeType":"208","messageId":"209","endLine":715,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":715,"column":33,"nodeType":"208","messageId":"209","endLine":715,"endColumn":35},{"ruleId":"191","severity":1,"message":"211","line":3,"column":45,"nodeType":"193","messageId":"194","endLine":3,"endColumn":52},{"ruleId":"191","severity":1,"message":"212","line":3,"column":54,"nodeType":"193","messageId":"194","endLine":3,"endColumn":61},{"ruleId":"191","severity":1,"message":"235","line":3,"column":63,"nodeType":"193","messageId":"194","endLine":3,"endColumn":66},{"ruleId":"191","severity":1,"message":"236","line":3,"column":68,"nodeType":"193","messageId":"194","endLine":3,"endColumn":72},{"ruleId":"191","severity":1,"message":"213","line":3,"column":74,"nodeType":"193","messageId":"194","endLine":3,"endColumn":80},{"ruleId":"191","severity":1,"message":"215","line":3,"column":82,"nodeType":"193","messageId":"194","endLine":3,"endColumn":91},{"ruleId":"191","severity":1,"message":"237","line":3,"column":93,"nodeType":"193","messageId":"194","endLine":3,"endColumn":101},{"ruleId":"191","severity":1,"message":"217","line":3,"column":116,"nodeType":"193","messageId":"194","endLine":3,"endColumn":123},{"ruleId":"191","severity":1,"message":"219","line":3,"column":132,"nodeType":"193","messageId":"194","endLine":3,"endColumn":141},{"ruleId":"191","severity":1,"message":"238","line":3,"column":154,"nodeType":"193","messageId":"194","endLine":3,"endColumn":164},{"ruleId":"191","severity":1,"message":"239","line":3,"column":166,"nodeType":"193","messageId":"194","endLine":3,"endColumn":171},{"ruleId":"191","severity":1,"message":"240","line":3,"column":173,"nodeType":"193","messageId":"194","endLine":3,"endColumn":177},{"ruleId":"191","severity":1,"message":"220","line":3,"column":189,"nodeType":"193","messageId":"194","endLine":3,"endColumn":195},{"ruleId":"191","severity":1,"message":"221","line":3,"column":197,"nodeType":"193","messageId":"194","endLine":3,"endColumn":203},{"ruleId":"191","severity":1,"message":"222","line":3,"column":205,"nodeType":"193","messageId":"194","endLine":3,"endColumn":211},{"ruleId":"191","severity":1,"message":"241","line":3,"column":282,"nodeType":"193","messageId":"194","endLine":3,"endColumn":287},{"ruleId":"191","severity":1,"message":"226","line":4,"column":17,"nodeType":"193","messageId":"194","endLine":4,"endColumn":26},{"ruleId":"191","severity":1,"message":"242","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":12},{"ruleId":"191","severity":1,"message":"243","line":110,"column":40,"nodeType":"193","messageId":"194","endLine":110,"endColumn":45},{"ruleId":"191","severity":1,"message":"244","line":123,"column":47,"nodeType":"193","messageId":"194","endLine":123,"endColumn":50},{"ruleId":"191","severity":1,"message":"245","line":156,"column":20,"nodeType":"193","messageId":"194","endLine":156,"endColumn":27},{"ruleId":"191","severity":1,"message":"246","line":158,"column":15,"nodeType":"193","messageId":"194","endLine":158,"endColumn":24},{"ruleId":"191","severity":1,"message":"247","line":158,"column":26,"nodeType":"193","messageId":"194","endLine":158,"endColumn":34},{"ruleId":"191","severity":1,"message":"226","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"231","line":99,"column":35,"nodeType":"208","messageId":"209","endLine":99,"endColumn":37},{"ruleId":"201","severity":1,"message":"202","line":124,"column":9,"nodeType":"203","messageId":"204","endLine":149,"endColumn":10},{"ruleId":"201","severity":1,"message":"202","line":182,"column":9,"nodeType":"203","messageId":"204","endLine":199,"endColumn":10},{"ruleId":"201","severity":1,"message":"202","line":50,"column":9,"nodeType":"203","messageId":"204","endLine":61,"endColumn":10},{"ruleId":"191","severity":1,"message":"248","line":66,"column":15,"nodeType":"193","messageId":"194","endLine":66,"endColumn":19},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","'Stats' is assigned a value but never used.","'Whisper' is defined but never used.","'Tooltip' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CatmullRomCurve3' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'BufferGeometry' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dropdown' is defined but never used.","'Sidebar' is defined but never used.","'Sidenav' is defined but never used.","'Navbar' is defined but never used.","'ButtonGroup' is defined but never used.","'Container' is defined but never used.","'InputNumber' is defined but never used.","'Content' is defined but never used.","'Panel' is defined but never used.","'HelpBlock' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'Button' is defined but never used.","'FlexboxGrid' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Expected '!==' and instead saw '!='.","no-redeclare","'j' is already defined.","redeclared","'Nav' is defined but never used.","'Icon' is defined but never used.","'Checkbox' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Grid' is defined but never used.","'Input' is defined but never used.","'View' is defined but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","'disable' is assigned a value but never used.","'graduated' is defined but never used.","'progress' is defined but never used.","'line' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
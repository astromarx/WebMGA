{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/ReferenceTools.js","Model/Model.js","View/Tools.js","View/GeneralMenu.js","View/AboutFiles/WebMGAUserManual.txt","View/SubMenus.js","View/VisualisationMenu.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","parameters","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","clippingPlanes","clipIntersection","setDefaults","shapeType","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","lod","constant","toggle","material","m","c","mat","elem","rgb","colourMap","values","MeshPhongMaterial","color","shininess","Mesh","shape","clone","rotate","translate","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","pos","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","round","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","NaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","ReferenceTools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","computeBoundingSphere","sphere","boundingSphere","geom","center","MeshBasicMaterial","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","gridEnabled","axesEnabled","boundingShapeEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","powerPreference","setPixelRatio","window","devicePixelRatio","localClippingEnabled","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","initClippers","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","render","click","model","updateCamera","controls","autoRotate","setData","ps","particleSets","split","particleSet","slice","clippingIntersections","id","params","f","remove","updateSets","setUserColour","r","b","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","OrbitControls","domElement","target","update","aspect","left","right","top","bottom","updateProjectionMatrix","zoom","enabled","visible","warning","updatePosition","a","passGrid","passAxes","passShape","toggleGrid","toggleAxes","updateBoundingShape","toggleMulticolour","updateSize","genBoundingShape","Plane","clippingHelpers","PlaneHelper","toggleClipIntersection","updateSlicers","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","MeshLambertMaterial","testShape","testTotal","testLimit","style","console","log","children","random","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","min","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","max","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","setDimensions","export","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","LibraryDropdown","state","updateKey","key","setState","Menu","padding","PerformanceDropdown","updateVal","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","GeneralMenu","continuousRender","requestAnimationFrame","functions","toggler","fps","showDrawer","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","info","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","for","pullLeft","Drawer","show","onHide","backdrop","Title","href","download","rel","margin","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","CameraOptions","selectType","updateLookat","updateZoom","updateState","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","Grid","fluid","JSON","stringify","SlicingOptions","slicing","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","helpers","toggleHelper","AdditionalLightsNav","activeKey","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateBg","ambientLightColour","backgroundColour","ReferenceOptions","reference","toggleBoundingShapeEnabled","updateGridSize","gridColour","updateReferenceColour","activeShape","toggleAxesMulticolour","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","tooltip","MenuContent","menuContent","VisualisationMenu","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","parse","pointLightColour","init","loadState","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","body","appendChild","setTimeout","removeChild","revokeObjectURL","save","getData","view","starting","genSets","setDefaultState","load","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","sample15","sample16","convertQMGA","dataURL","toDataURL","replace","link","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e002c0f7.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    parameters;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.parameters = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2*this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.parameters,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.parameters[0],\n            length = this.parameters[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.parameters[0],\n            radCircle = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.parameters[0],\n            zCut = this.parameters[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","\nexport var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color\n\n} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n\n    positions = [];\n    orientations = [];\n    elements = []\n    meshes = [];\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null) {\n            this.name = this.shapeType;\n        }\n\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n\n            mat = new MeshPhongMaterial({\n                color: c,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: this.clipIntersection,\n                shininess: 40\n            });\n            mat.wireframe = this.wireframe;\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.rotate(elem.euler, geoms);\n            this.translate(elem.position, geoms);\n            \n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        for (let i = 0; i < this.positions.length; i++) {\n            this.elements.push(new this.Element(this.positions[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(2*pos[0], 2*pos[1], 2*pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n            \n            \n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length == 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm == 0 || norm == NaN || norm == undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class ReferenceTools {\n    subGrid;\n    axes = [];\n    boundingShape;\n    boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n\n        this.boundingShape = null;\n\n        if (this.setsGeometry == null) {\n            let geometries = [];\n            for (let set of sets) {\n                for (let elem of set.elements) {\n                    geometries.push(BufferGeometryUtils.mergeBufferGeometries(elem.geometries));\n                }\n            }\n            this.setsGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n        }\n\n\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                this.setsGeometry.computeBoundingBox()\n                box.copy(this.setsGeometry.boundingBox);\n                this.boundingShape = new Box3Helper(box, this.colour);\n                break;\n            case 'sphere':\n                this.setsGeometry.computeBoundingSphere();\n                let sphere = this.setsGeometry.boundingSphere;\n                let geom = new SphereBufferGeometry(sphere.radius, 10, 10);\n                geom.translate(sphere.center.x, sphere.center.y, sphere.center.z);\n                let material = new MeshBasicMaterial({ color: this.colour });\n                material.wireframe = true;\n                this.boundingShape = new Mesh(geom, material);\n                break;\n            case 'cylinder':\n                // this.boundingShape.copy(this.setsGeometry.computeBoundingBox());\n                 break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n        }\n\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n\n}\n\nexport default ReferenceTools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n    MeshStandardMaterial,\n    Mesh\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport ReferenceTools from './ReferenceTools.js'\nimport { Alert } from 'rsuite'\nimport * as SHAPE from './Shapes.js';\nimport Parameters from './Parameters';\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    boundingShapeEnabled = false;\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n    }\n\n    /* GENERAL FUNCTIONS */\n\n    setDefault() {\n        \n        this.renderer = new WebGLRenderer({ antialias: false, preserveDrawingBuffer: false, powerPreference: \"high-performance\" });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.initClippers();\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new ReferenceTools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 2;\n    }\n\n    update() {\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n\n    getData() {\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    loadDeprecated(data) {\n        // placeholder FILE IO used for initial development\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* UPDATING SETS FUNCTIONS */\n\n    updateSets(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateSets(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateSets(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateSets(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    /* LOD FUNCTIONS */\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateSets(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n\n    /* CAMERA AND PROJECTION FUNCTIONS */\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        this.update();\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n\n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    /* AMBIENT AND LIGHT FUNCTIONS */\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour == '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n\n    /* REFERENCE TOOLS FUNCTIONS */\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    /* SLICING FUNCTIONS */\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 50),\n            new Plane(new Vector3(-1, 0, 0), 50),\n            new Plane(new Vector3(0, 1, 0), 50),\n            new Plane(new Vector3(0, -1, 0), 50),\n            new Plane(new Vector3(0, 0, 1), 50),\n            new Plane(new Vector3(0, 0, -1), 50)\n        ];\n\n        this.clippingHelpers = [\n            new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n            new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)\n        ];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n    }\n\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n\n    /* PERFORMANCE TEST SUITE */\n\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic');\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, { x: 50, y: 0, z: 50 });\n\n        this.deleteAllMeshes();\n\n        this.testMaterial = new MeshLambertMaterial();\n        this.testShape = new SHAPE.Preset('Torus', Parameters.Torus.vals);\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 3001;\n\n\n        this.notify('info', 'Initialising Performance Test',\n            (<p style={{ width: 320 }} >\n                Test Size: {this.testLimit.toString()} <br />\n            Step: {step.toString()} <br />\n            Shape: Ellipsoid (Default Parameters) <br />\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br />\n            Material: MeshLambertMaterial\n            </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Ellipsoid (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: ' + this.testLimit.toString)\n        console.log('Test Step: ' + step.toString());\n    }\n\n    deleteAllMeshes() {\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            if (this.scene.children[i].type === \"Mesh\")\n                this.scene.remove(this.scene.children[i]);\n        }\n    }\n\n    addRandomParticles(n) {\n\n        this.testTotal += n;\n\n        if (this.testTotal >= this.testLimit) {\n            return true;\n        }\n\n        let geoms = [];\n        let m;\n        for (let i = 0; i < n; i++) {\n\n            if (this.testShape.isPreset) {\n                geoms.push(this.testShape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.testShape.stripGeometry.clone());\n                geoms.push(this.testShape.fanGeometries[0].clone());\n                geoms.push(this.testShape.fanGeometries[1].clone());\n            }\n\n\n            this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n            for (let g of geoms) {\n                m = new Mesh(g, this.testMaterial);\n                this.scene.add(m);\n            }\n\n            geoms = [];\n        }\n\n\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-50.0}\n                        max={50.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip, Divider, Alert } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\nimport manual from './AboutFiles/WebMGAUserManual.txt'\nimport fs from 'fs';\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.f = props.f;\n        this.setDimensions = this.setDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    setDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions);\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.setDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass LibraryDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n\n        this.updateKey = this.updateKey.bind(this);\n    }\n\n    updateKey(key) {\n        this.setState({\n            active: key\n        });\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <Dropdown\n                title=\"Library\"\n                trigger='click'\n                placement=\"bottomEnd\"\n                icon={<Icon icon=\"database\" />}\n                appearance='subtle'\n                onSelect={(eventKey) => {\n                    this.f(eventKey);\n\n                }}>\n\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                    <Dropdown.Item eventKey={15}>QMGA Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={16}>Threejs Geometries</Dropdown.Item>\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Crystal Packings\">\n                    <Dropdown.Item eventKey={10}>Biaxial Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Biaxial Crystal (Large)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Other\">\n                    <Dropdown.Item eventKey={12}>Fig1</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC</Dropdown.Item>\n                </Dropdown.Menu>\n\n                <Dropdown.Item panel style={{ padding: 5, width: 120 }}></Dropdown.Item>\n\n\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Adjust LOD</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\n\nclass GeneralMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false };\n\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest() {\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if (!this.state.rotating) {\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2)\n        });\n    }\n\n    render() {\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" spin={rotating} />}>Autorotate</Nav.Item>\n                                    <Nav.Item onClick={this.runPerformanceTest} appearance=\"subtle\" icon={<Icon icon=\"dashboard\" />}>Run Performance Test</Nav.Item>\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"question-circle\" />}>About</Nav.Item>\n                                    <PerformanceDropdown model={this.model} />\n                                    <LibraryDropdown f={this.functions[3]} />\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label for=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav pullLeft>\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'sm'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>About</Drawer.Title>\n                        <br />\n                        <ButtonToolbar >\n                        <Button color=\"cyan\" >\n                                <Icon icon=\"mortar-board\" /> Liquid Crystals Info\n                        </Button>\n                        <Button key=\"man\" color=\"cyan\" href=\"WebMGA/src/View/AboutFiles/WebMGAUserManual.txt\" download=\"hello.txt\">\n                                <Icon icon=\"info-circle\" /> User Manual\n                        </Button>\n                        <Button color=\"cyan\">\n                                <Icon icon=\"book\" /> Dissertation\n                        </Button>\n                            <Button color=\"cyan\" href=\"https://github.com/astromarx/WebMGA\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <Icon icon=\"github\" /> Github\n                        </Button>\n                        </ButtonToolbar>\n            \n                    </Drawer.Header>\n\n                    <div style={{ margin: 25 }}>\n                        <h3>WebMGA </h3>\n                        <br />\n                        WebMGA was developed by Eduardo Battistini in 2020-21 for his final project within the BSc Computer Science at University College London, supervised by Guido Germano, Michael P. Allen, and Tobias Ritschel.\n                        <br /><br />\n                        The WebGL Molecular Graphics Application, or WebMGA, is a web-based visualisation tool for coarse-grained molecular models that utilises prolated and elongated convex bodies as the elementary units of simulation.\n                        <br /><br />\n                        Given the prevalence of said geometries in the modelling of liquid crystal systems and the lack of available visualisation platforms suitable for this niche, WebMGA provides a unique, out-of-the-box solution for researchers and educators to generate, stylise, and interact with three-dimensional renders of molecular simulations.\n                        <br /><br />\n                        WebMGA is written in Javascript, and implements the graphics library <a href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Threejs</a> for rendering images and the <a href=\"https://rsuitejs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">rSuite</a> library to provide a sleek user interface that is intuitively compartmentalised and easy to learn.\n                        <br /><br />\n                        WebMGA is an evolution of <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA</a>, an OpenGL and Qt3 based application written in C++, that filled this gap in molecular graphics in 2008.\n                        <br /><br />\n                        For information on how to upload a custom configuration or how to cite WebMGA in a scientific publication, see the user manual. For information about the liquid crystal models in the library, see 'Liquid Crystals Info'.\n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default GeneralMenu;","export default __webpack_public_path__ + \"static/media/WebMGAUserManual.31d6cfe0.txt\";","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\nimport { json } from 'mathjs';\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(val, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, i) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[i] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[i] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggler = props.toggler;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n        this.updateState = this.updateState.bind(this);\n        \n        this.toggler.updateCamera = () => {\n            this.updateState()\n        }\n    }\n\n    updateState(){\n        this.setState(View.state.camera);\n    }\n\n    updateZoom(val) {\n        this.setState({\n            zoom: val\n        });\n        this.model.updateCameraZoom(val);\n        this.model.update();\n        View.state.camera.zoom = val;\n    }\n\n    selectType(val) {\n        this.setState({\n            type: val\n        });\n        View.state.camera.type = val;\n        this.model.setCamera(val);\n        if (val == \"orthographic\") {\n            this.updateZoom(50);\n\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 'x':\n                    position.x = val;\n                    break;\n                case 'y':\n                    position.y = val;\n                    break;\n                case 'z':\n                    position.z = val;\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(val, type) {\n        let lookAt = this.state.lookAt;\n\n        if (val != NaN && val != null) {\n            switch (type) {\n                case 0:\n                    lookAt.x = parseFloat(val);\n                    break;\n                case 1:\n                    lookAt.y = parseFloat(val);\n                    break;\n                case 2:\n                    lookAt.z = parseFloat(val);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Look At Input');\n                    return;\n            }\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div key={JSON.stringify(this.state)}>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing;\n        this.model = props.model;\n\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n        this.model.update();\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, val) {\n        switch (i) {\n            case 0:\n                View.state.slicing.x = val;\n                break;\n            case 1:\n                View.state.slicing.y = val;\n                break;\n            case 2:\n                View.state.slicing.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, val);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                {/* <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={true} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid> */}\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(val, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(val, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = val;\n                break;\n            case 'y':\n                position.y = val;\n                break;\n            case 'z':\n                position.z = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateColour = this.updateColour.bind(this);\n        this.updateBg = this.updateBg.bind(this);\n    }\n    updateColour(val, i) {\n        let colour = this.state.ambientLightColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            case 'i':\n                colour.i = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBg(val, i) {\n        let colour = this.state.backgroundColour;\n\n        switch (i) {\n            case 'r':\n                colour.r = val;\n                break;\n            case 'g':\n                colour.g = val;\n                break;\n            case 'b':\n                colour.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        this.model.update();\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBg} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBg} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBg} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n    updateColour(val, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = val;\n                break;\n            case 'g':\n                rgb.g = val;\n                break;\n            case 'b':\n                rgb.b = val;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        this.model.update();\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(val) {\n        this.model.updateGridSize(val);\n        this.model.update();\n        View.state.reference.size = val;\n    }\n    toggleBoundingShapeEnabled() {\n        let toggle = !View.state.reference.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        View.state.reference.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(this.state.activeShape, toggle);\n        this.model.update();\n    }\n    selectShape(val) {\n        this.setState({\n            activeShape: val\n        });\n        View.state.reference.activeShape = val;\n        this.model.updateBoundingShape(val, this.state.boundingShapeEnabled);\n        this.model.update();\n    }\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        this.model.update();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        const enabled = this.state.boundingShapeEnabled;\n        const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Shape </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled} onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    {/* <Radio disabled={true} value=\"sphere\" >Sphere </Radio>\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio> */}\n\n                                </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n\n\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Grid </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showGrid} onClick={this.toggleGrid}> Show</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <br />\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\" tooltip eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item title=\"Camera\" tooltip eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item title=\"Ambient\" tooltip eventKey=\"Ambient\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item title=\"Lighting\" tooltip eventKey=\"Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item title=\"Slicing\" tooltip eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item title=\"Reference\" tooltip eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model, toggler }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav pullLeft>\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions model={model} toggler={toggler} />);\n                break;\n            case \"Ambient\":\n                menuContent.push(<AmbientLightOptions model={model} />);\n                break;\n            case \"Lighting\":\n                menuContent.push(<AdditionalLightOptions model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions model={model} />);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass VisualisationMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent active={active} expand={expand} onChange={this.handleToggle} model={this.model} toggler={this.toggler}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default VisualisationMenu;","import React from \"react\";\nimport GeneralMenu from './GeneralMenu';\nimport VisualisationMenu from './VisualisationMenu';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {\n        }\n        this.expanded = false;\n        this.model = m;\n        this.header = <GeneralMenu chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <VisualisationMenu model={this.model} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    loadState(state){\n        this.loadReferenceAndSlicing(state);\n        this.loadLightingAndCamera(state);\n    }\n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        this.model.setCamera(state.camera.type);\n\n        this.model.updateCameraPosition(state.camera.position);\n        this.model.updateLookAt(state.camera.lookAt);\n        \n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n\n    setDefaultState(init) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadState(View.state)\n\n        if (!init) {\n            this.loadModel(View.state);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: []\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-50, 50],\n        y: [-50, 50],\n        z: [-50, 50]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.2, 0.4, 0.8]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: true\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            x: 0,\n            y: 0,\n            z: -15\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        multicolour: true,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { std, mean } from 'mathjs';\n\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\nimport sample15 from './Samples/qmga-shapes.json'\nimport sample16 from './Samples/threejs-shapes.json'\n\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n    }\n\n    ExternalToggle = class ExternalToggle {\n        // these functions are defined within their respective React components\n\n        closeSidemenu = () => { }\n        autorotate = () => { }\n        updateCamera = () => { }\n\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 200;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter == this.tick) {\n\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update (' + this.model.testTotal.toString() + ' Molecules)',\n                    (<p style={{ width: 320 }} >\n                        <b>FPS</b> <br />\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br />\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()} <br />\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()\n                    + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n\n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n\n                    this.externalToggle.autorotate();\n\n                    this.notify('success', 'Test Completed Succesfully',\n                        (<p style={{ width: 320 }} >\n                            All molecules deleted. Please see console output for a list of average FPS and standard deviations.\n                        </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime == null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n\n    start = () => {\n        this.chronometer.model = this.model;\n\n        this.generate(sample2, true);\n        this.addListeners();\n        this.render();\n        this.notify('info', 'Welcome!',\n            (<p style={{ width: 320 }} >\n                This application works best on the Chrome browser. Check out Liquid Crystal configurations in the Library!\n            </p>)\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 15000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            Alert.info(\"Setting default viewing state.\");\n            this.view.setDefaultState(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data, false);\n                Alert.success('File loaded successfully.');\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n\n        console.log('test')\n\n    }\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            case 15:\n                sample = sample15;\n                break;\n            case 16:\n                sample = sample16;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false);\n        Alert.success('File loaded successfully.');\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/png\", 1.0).replace(\"image/png\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.png\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                Image exported successfully.\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    updateCamera = () => {\n        View.state.camera.position.x = Math.round(this.model.camera.position.x * 100) / 100;\n        View.state.camera.position.y = Math.round(this.model.camera.position.y * 100) / 100;\n        View.state.camera.position.z = Math.round(this.model.camera.position.z * 100) / 100;\n\n        View.state.camera.lookAt.x = Math.round(this.model.controls.target.x * 100) / 100;\n        View.state.camera.lookAt.y = Math.round(this.model.controls.target.y * 100) / 100;\n        View.state.camera.lookAt.z = Math.round(this.model.controls.target.z * 100) / 100;\n\n        View.state.camera.zoom = this.model.camera.zoom;\n\n\n        this.externalToggle.updateCamera();\n    }\n\n    render = () => {\n        this.model.update();\n        this.updateCamera();\n    }\n\n    addListeners = () => {\n\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key == 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
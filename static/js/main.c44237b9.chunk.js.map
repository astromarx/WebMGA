{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/Tools.js","Model/Model.js","View/Tools.js","View/Top.js","View/SubMenus.js","View/Side.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","args","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","parameters","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","clippingPlanes","clipIntersection","setDefaults","shapeType","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","lod","constant","toggle","material","m","c","mat","elem","rgb","colourMap","values","MeshLambertMaterial","color","Mesh","shape","clone","rotate","translate","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","attributes","nP","split","a","parseFloat","slice","console","log","colourFromOrientation","SHAPE","generate","pos","e","rotateX","rotateY","rotateZ","rot","Quaternion","defaultVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","round","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","NaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","Tools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","computeBoundingSphere","sphere","boundingSphere","geom","center","MeshBasicMaterial","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","gridEnabled","axesEnabled","boundingShapeEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","initClippers","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","powerPreference","setPixelRatio","window","devicePixelRatio","localClippingEnabled","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","model","render","click","clippingIntersections","Plane","clippingHelpers","PlaneHelper","visible","toggleClipIntersection","updateSlicers","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","controls","OrbitControls","domElement","target","update","aspect","left","right","top","bottom","updateProjectionMatrix","zoom","r","psi","theta","updateCamera","b","enabled","warning","remove","updatePosition","passGrid","passAxes","passShape","toggleGrid","toggleAxes","updateBoundingShape","toggleMulticolour","updateSize","autoRotate","genBoundingShape","id","params","f","updateModel","setUserColour","setData","ps","particleSets","particleSet","componentToHex","ParameterSet","props","titles","title","numerical","step","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","min","value","InputBox","defaultVal","style","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","max","nextValue","end","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","export","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","SamplesDropdown","state","updateKey","setState","Menu","padding","PerformanceDropdown","updateVal","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","Top","continuousRender","requestAnimationFrame","functions","toggler","fps","showDrawer","updateFPS","toggleDrawer","toggleAutorotate","autorotate","closeSidemenu","toFixed","Header","Navbar","Body","Nav","pullRight","display","className","accept","files","for","pullLeft","Drawer","show","onHide","backdrop","Title","href","rel","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","CameraOptions","selectType","updateLookat","updateZoom","updateCameraZoom","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","Grid","fluid","SlicingOptions","slicing","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","helpers","toggleHelper","AdditionalLightsNav","activeKey","margin","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","updateLightPosition","lightState","AmbientLightOptions","ambientLight","updateAmbientLightColour","updateBackgroundColour","ambientLightColour","backgroundColour","updateBg","ReferenceOptions","reference","toggleBoundingShapeEnabled","updateGridSize","gridColour","updateReferenceColour","activeShape","toggleAxesMulticolour","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","tooltip","MenuContent","menuContent","Side","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","JSON","parse","stringify","pointLightColour","starting","Controller","ExternalToggle","Chronometer","begin","prevTime","Date","now","frames","time","sample2","addListeners","notify","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","body","appendChild","setTimeout","removeChild","revokeObjectURL","save","getData","view","genSets","info","setDefaultStates","externalToggle","load","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","convertQMGA","dataURL","toDataURL","replace","link","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"43hWAYaA,EAAb,WAkBI,aAAe,yBAffC,OAAS,EAeK,KAPdC,gBAAkB,GAOJ,KANdC,cAAgB,GAOZC,KAAKC,KAAOC,UAAU,GACtBF,KAAKG,UAAW,EAChBH,KAAKI,IAAM,EACXJ,KAAKK,WAAa,CAAC,EAAE,GAAG,GAAG,GAAG,IAtBtC,oDA0BQL,KAAKM,eAAiB,GACtBN,KAAKF,gBAAkB,GACvBE,KAAKD,cAAgB,KA5B7B,kCA8CgBQ,EAAUC,EAASC,GAC3B,IAAIC,EAAI,IAAIC,IAEZD,EAAEE,aAAa,WAAY,IAAIC,IAAgBC,aAAaC,KAAKR,GAAW,IAC5EG,EAAEE,aAAa,SAAU,IAAIC,IAAgBC,aAAaC,KAAKP,GAAU,IAGrC,IAAhCC,EAAKO,cAAc,UACnBN,EAAIO,IAAoBC,oBAAoBR,EAAGS,KAC/CnB,KAAKF,gBAAgBsB,KAAKV,KAE1BA,EAAIO,IAAoBC,oBAAoBR,EAAGW,KAC/CrB,KAAKD,cAAcqB,KAAKV,MA1DpC,wCAgEQV,KAAKsB,cAAgBL,IAAoBM,sBAAsBvB,KAAKF,oBAhE5E,iCA+BqB0B,EAAKC,QAEJC,IAAVD,IACAD,EAAI,IAAMG,KAAKC,IAAIH,EAAM,GAAI,GAC7BD,EAAI,IAAMG,KAAKC,IAAIH,EAAM,GAAI,GAC7BD,EAAI,IAAMG,KAAKC,IAAIH,EAAM,GAAI,IAGjC,IAAII,EAASF,KAAKG,KAAKN,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAGxE,OAFAA,EAAMA,EAAIO,KAAI,SAAAC,GAAC,OAAIA,EAAIH,SAxC/B,KAqEaI,EAAb,kDAEI,WAAYxB,EAAMyB,GAAa,IAAD,8BAC1B,gBACK/B,UAAW,EAChB,EAAKM,KAAOA,EACZ,EAAKyB,WAAaA,EAJQ,EAFlC,uDAYQ,OAFAlC,KAAKmC,QAEGnC,KAAKS,MACT,IAAK,SACDT,KAAKM,eAAiB,IAAI8B,IAAqBpC,KAAKkC,WAAYlC,KAAKK,WAAWL,KAAKI,KAAMJ,KAAKK,WAAWL,KAAKI,MAChH,MACJ,IAAK,WACDJ,KAAKM,eAAL,YAA0B+B,IAA1B,YAAoDrC,KAAKkC,YAAzD,QAAqElC,KAAKK,WAAWL,KAAKI,QAC1F,MACJ,IAAK,QACDJ,KAAKM,eAAL,YAA0BgC,IAA1B,YAAiDtC,KAAKkC,YAAtD,QAAkElC,KAAKK,WAAWL,KAAKI,QACvF,MACJ,QACImC,IAAMC,MAAM,wCAvB5B,GAA4B5C,GA4Bf6C,EAAb,kDAEI,aAAe,uCACLvC,WAHd,uDAOQF,KAAKmC,QACLnC,KAAK0C,gBACL1C,KAAK2C,oBATb,sCAqBQ,IATa,IAAD,QACRC,EAAgB,GAChBC,EAAQ,GACRpB,EAAQzB,KAAKC,KACbM,EAAW,GACXC,EAAU,GACVsC,EAAO,GAGFC,EAAY,EAAGA,EAAY/C,KAAKH,SAAUkD,EAAW,CAE1DH,EAAcxB,KAAKpB,KAAKK,WAAWL,KAAKI,KAAO2C,GAAc/C,KAAKK,WAAWL,KAAKI,MAASJ,KAAKH,OAAS,IACzG+C,EAAcxB,KAAKpB,KAAKK,WAAWL,KAAKI,KAAO2C,GAAc/C,KAAKK,WAAWL,KAAKI,MAASJ,KAAKH,OAAS,IAEzGgD,EAAMzB,KAAK,EAAIO,KAAKqB,GAAKJ,EAAc,IACvCC,EAAMzB,KAAKO,KAAKqB,IAA+B,GAAxBJ,EAAc,GAAK,KAE1C,IAAK,IAAIK,EAAI,EAAGA,EAAuB,EAAnBL,EAAc,KAAUK,EACxC,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAc,GAAK,IAAKM,EAAG,CAAC,IAAD,QACjC,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMK,EAAM,GAAKE,KAAKwB,KAAKF,EAAI,GAAKJ,EAAM,KAC/CC,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,KAAKF,EAAI,GAAKJ,EAAM,KACxEC,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,KAAKF,EAAI,GAAKJ,EAAM,MAG5EC,EAAK1B,KAAKO,KAAKyB,KAAKH,EAAI,GAAKJ,EAAM,IAAMpB,EAAM,KAE/C,EAAAlB,GAASa,KAAT,oBAAiB0B,KACjB,EAAAtC,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,EAAMrB,KACtCqB,EAAO,GAEG,IAANI,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMK,EAAM,GAAKE,KAAKwB,KAAKF,EAAI,GAAKJ,EAAM,KAC/CC,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,KAAKF,EAAI,GAAKJ,EAAM,KACxEC,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,KAAKF,EAAI,GAAKJ,EAAM,MAG5EC,EAAK1B,KAAKO,KAAKyB,KAAKH,EAAI,GAAKJ,EAAM,IAAMpB,EAAM,KAE/C,EAAAlB,GAASa,KAAT,oBAAiB0B,KACjB,EAAAtC,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,EAAMrB,KACtCqB,EAAO,IAqBnB,IAdA9C,KAAKsD,YAAY/C,EAAUC,EAAS,SAEpCD,EAAW,GACXC,EAAU,GAGVsC,EAAK1B,KAAK,GACV0B,EAAK1B,KAAK,GACV0B,EAAK1B,KAAKK,EAAM,KAEhB,EAAAlB,GAASa,KAAT,oBAAiB0B,KACjB,EAAAtC,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,EAAMrB,KACtCqB,EAAO,GAEFI,EAAI,EAAGA,EAAIN,EAAc,GAAK,IAAKM,EAAG,CAAC,IAAD,IAC7B,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMK,EAAM,GAAKE,KAAKwB,IAAIN,EAAM,KACrCC,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,IAAIN,EAAM,KAC9DC,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,IAAIN,EAAM,MAElEC,EAAK1B,KAAKO,KAAKyB,IAAIP,EAAM,IAAMpB,EAAM,KAErC,EAAAlB,GAASa,KAAT,oBAAiB0B,KACjB,EAAAtC,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,EAAMrB,KACtCqB,EAAO,GAgBX,IAbA9C,KAAKsD,YAAY/C,EAAUC,EAAS,OACpCD,EAAW,GACXC,EAAU,GAGVsC,EAAK1B,KAAK,GACV0B,EAAK1B,KAAK,GACV0B,EAAK1B,MAAMK,EAAM,KAEjB,EAAAlB,GAASa,KAAT,oBAAiB0B,KACjB,EAAAtC,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,EAAMrB,KACtCqB,EAAO,GAEFI,EAAIN,EAAc,GAAIM,GAAK,IAAKA,EAAG,CAAC,IAAD,IAC1B,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMK,EAAM,GAAKE,KAAKwB,IAAIN,EAAM,KACrCC,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,IAAIN,EAAM,KAC9DC,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMpB,EAAM,GAAKE,KAAKwB,IAAIN,EAAM,MAElEC,EAAK1B,MAAMO,KAAKyB,IAAIP,EAAM,IAAMpB,EAAM,KAEtC,EAAAlB,GAASa,KAAT,oBAAiB0B,KACjB,EAAAtC,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,EAAMrB,KACtCqB,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,WA7H5C,GAA+BZ,GAkIlB2D,EAAb,kDAGI,aAAe,uCACLrD,WAJd,uDAQQF,KAAKmC,QACLnC,KAAK0C,gBACL1C,KAAK2C,oBAVb,sCAsBQ,IARA,IAIIpC,EACAC,EALAoC,EAAgB,GAChBC,EAAQ,GACRW,EAASxD,KAAKC,KAAK,GACnB4B,EAAS7B,KAAKC,KAAK,GAGnB6C,EAAO,GAEFC,EAAY,EAAGA,EAAY/C,KAAKH,SAAUkD,EAAW,CAAC,IAAD,QAE1DH,EAAcxB,KAAKpB,KAAKK,WAAWL,KAAKI,KAAO2C,GAAe/C,KAAKK,WAAWL,KAAKI,MAASJ,KAAKH,OAAS,IAC1G+C,EAAcxB,KAAKwB,EAAc,GAAK,GAEtCC,EAAMzB,KAAK,EAAIO,KAAKqB,GAAKJ,EAAc,IACvCC,EAAMzB,KAAK,EAAIO,KAAKqB,IAAyB,EAAnBJ,EAAc,KAExC,IAAK,IAAIa,EAAI,EAAGA,EAAKb,EAAc,GAAK,IAAMa,EAAG,CAE7ClD,EAAW,GACXC,EAAU,GAEV,IAAK,IAAIwB,EAAI,EAAGA,GAAKY,EAAc,KAAMZ,EAAG,CAAC,IAAD,QAC9B,IAANA,GAAWA,IAAMY,EAAc,IAC/BE,EAAK1B,MAAMO,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GAC1CV,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIpB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GACnEV,EAAK1B,MAAMO,KAAKwB,IAAInB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,IAEvEV,EAAK1B,KAAKO,KAAKyB,KAAKK,EAAI,GAAKZ,EAAM,IAAMW,IAEzC,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAEG,IAANd,GAAWA,IAAMY,EAAc,IAC/BE,EAAK1B,MAAMO,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GAC1CV,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIpB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GACnEV,EAAK1B,MAAMO,KAAKwB,IAAInB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,IAEvEV,EAAK1B,KAAKO,KAAKyB,KAAKK,EAAI,GAAKZ,EAAM,IAAMW,IAEzC,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,SAGxC,IAAK,IAAIiD,EAAIb,EAAc,GAAK,EAAGa,EAAI,GAAKb,EAAc,GAAK,KAAMa,EAAG,CAEpElD,EAAW,GACXC,EAAU,GAEV,IAAK,IAAIwB,EAAI,EAAGA,GAAKY,EAAc,KAAMZ,EAAG,CAAC,IAAD,QAC9B,IAANA,GAAWA,IAAMY,EAAc,IAC/BE,EAAK1B,MAAMO,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GAC1CV,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIpB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GACnEV,EAAK1B,MAAMO,KAAKwB,IAAInB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,IAEvEV,EAAK1B,KAAKO,KAAKyB,KAAKK,EAAI,GAAKZ,EAAM,IAAMW,IAEzC,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAEG,IAANd,GAAWA,IAAMY,EAAc,IAC/BE,EAAK1B,MAAM,EAAIO,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GAC9CV,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIpB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,GACnEV,EAAK1B,MAAMO,KAAKwB,IAAInB,EAAIa,EAAM,IAAMlB,KAAKwB,KAAKM,EAAI,GAAKZ,EAAM,IAAMW,IAEvEV,EAAK1B,KAAKO,KAAKyB,KAAKK,EAAI,GAAKZ,EAAM,IAAMW,IAEzC,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,SAGxCA,EAAU,GACVD,EAAW,GAEX,IAAK,IAAIyB,EAAI,EAAGA,GAAKY,EAAc,KAAMZ,EAAG,CAAC,IAAD,QAE9B,IAANA,GAAWA,IAAMY,EAAc,IAC/BE,EAAK1B,MAAMoC,GACXV,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIpB,EAAIa,EAAM,IAAMW,GACpCV,EAAK1B,MAAMO,KAAKwB,IAAInB,EAAIa,EAAM,IAAMW,IAExCV,EAAK1B,KAAK,IAEV,EAAAZ,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAK,GAAK,GACV,EAAAtC,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAIX9C,KAAKsD,YAAY/C,EAAUC,EAAS,SAEpCA,EAAU,GACVD,EAAW,GACXuC,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,GAAKU,GAEV,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAEP,IAAK,IAAII,EAAI,EAAGA,GAAKN,EAAc,KAAMM,EAAG,CAAC,IAAD,IAC9B,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMO,KAAKwB,IAAIN,EAAM,IAAMW,GAChCV,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMlB,KAAKwB,IAAIN,EAAM,IAAMW,GACzDV,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMlB,KAAKwB,IAAIN,EAAM,IAAMW,IAE7DV,EAAK1B,KAAKO,KAAKyB,IAAIP,EAAM,IAAMW,IAE/B,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,OAEpCA,EAAU,GACVD,EAAW,GACXuC,EAAK,GAAK,EACVA,EAAK,GAAK,EACVA,EAAK,IAAMU,GAEX,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAEP,IAAK,IAAII,EAAIN,EAAc,GAAIM,GAAK,IAAKA,EAAG,CAAC,IAAD,IAC9B,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMO,KAAKwB,IAAIN,EAAM,IAAMW,GAChCV,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMlB,KAAKwB,IAAIN,EAAM,IAAMW,GACzDV,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMlB,KAAKwB,IAAIN,EAAM,IAAMW,IAE7DV,EAAK1B,MAAMO,KAAKyB,IAAIP,EAAM,IAAMW,IAEhC,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAChCA,EAAK,IAAMjB,EAAS,GACpB,EAAAtB,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,YApMhD,GAAoCZ,GA2MvB8D,EAAb,kDAEI,aAAe,uCACLxD,WAHd,uDAOQF,KAAKmC,QACLnC,KAAK0C,gBACL1C,KAAK2C,oBATb,sCAyBQ,IAZA,IAAIgB,EAAY3D,KAAKC,KAAK,GACtB2D,EAAY5D,KAAKC,KAAK,GACtB4D,EAAQ,CAAC,EAAG,EAAG,GACfC,EAAS,CAAC,EAAG,GAAI,GACjBC,EAAe,EACfC,EAAiB,EACjBpB,EAAgB,GAChBC,EAAQ,GACRtC,EAAW,GACXC,EAAU,GACVsC,EAAO,GAEFC,EAAY,EAAGA,EAAY/C,KAAKH,SAAUkD,EAAW,CAAC,IAAD,QAE1DH,EAAcxB,KAAKpB,KAAKK,WAAWL,KAAKI,KAAO2C,GAAc/C,KAAKK,WAAWL,KAAKI,MAASJ,KAAKH,OAAS,IACzG+C,EAAcxB,KAAKpB,KAAKK,WAAWL,KAAKI,KAAO2C,GAAc/C,KAAKK,WAAWL,KAAKI,MAASJ,KAAKH,OAAS,IAEzGgD,EAAMzB,KAAK,EAAIO,KAAKqB,GAAKJ,EAAc,IACvCC,EAAMzB,KAAKO,KAAKqB,IAAyB,EAAnBJ,EAAc,KAEpC,IAAK,IAAIK,EAAI,EAAGA,EAAuB,EAAnBL,EAAc,KAAUK,EAAG,CAC3Cc,EAAeJ,EAAYhC,KAAKwB,IAAIF,EAAIJ,EAAM,IAC9CmB,EAAiBL,EAAYhC,KAAKwB,KAAKF,EAAI,GAAKJ,EAAM,IAEtD,IAAK,IAAIK,EAAI,EAAGA,EAAIN,EAAc,GAAK,IAAKM,EAAG,CAAC,IAAD,QAEjC,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAM2C,GACXjB,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAM2C,EAAepC,KAAKyB,IAAIF,EAAIL,EAAM,KAC7CC,EAAK1B,MAAM2C,EAAepC,KAAKwB,IAAID,EAAIL,EAAM,MAEjDC,EAAK1B,KAAKO,KAAKyB,IAAIH,EAAIJ,EAAM,IAAMc,IAEnC,EAAAnD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAEtB,IAANI,GAAWA,IAAMN,EAAc,GAC/BE,EAAK,IAAMc,GAGXd,EAAK,IAAMc,EAAYjC,KAAKyB,IAAIF,EAAIL,EAAM,IAC1CC,EAAK,IAAMc,EAAYjC,KAAKwB,IAAID,EAAIL,EAAM,MAG9C,EAAAtC,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGG,IAANI,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAM4C,GACXlB,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAM4C,EAAiBrC,KAAKyB,IAAIF,EAAIL,EAAM,KAC/CC,EAAK1B,MAAM4C,EAAiBrC,KAAKwB,IAAID,EAAIL,EAAM,MAEnDC,EAAK1B,KAAKO,KAAKyB,KAAKH,EAAI,GAAKJ,EAAM,IAAMc,IAEzC,EAAAnD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,KAEtB,IAANI,GAAWA,IAAMN,EAAc,GAC/BE,EAAK,IAAMc,GAGXd,EAAK,IAAMc,EAAYjC,KAAKyB,IAAIF,EAAIL,EAAM,IAC1CC,EAAK,IAAMc,EAAYjC,KAAKwB,IAAID,EAAIL,EAAM,MAG9C,EAAAtC,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,IAKf9C,KAAKsD,YAAY/C,EAAUC,EAAS,SACpCD,EAAW,GACXC,EAAU,GAIVsC,EAAK1B,KAAK,GACV0B,EAAK1B,KAAK,GACV0B,EAAK1B,KAAKuC,IAEV,EAAAnD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,MAChC,EAAAvC,GAASa,KAAT,oBAAiB0B,IAEjBA,EAAO,GAEP,IAAK,IAAII,EAAI,EAAGA,EAAIN,EAAc,GAAK,IAAKM,EAAG,CAAC,IAAD,IACjC,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMwC,GACXd,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMe,GACpCd,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMe,IAGxCd,EAAK1B,KAAKuC,IACV,EAAAnD,GAAQY,KAAR,QAAgByC,IAChB,EAAAtD,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,OACpCD,EAAW,GACXC,EAAU,GAGVsC,EAAK1B,KAAK,GACV0B,EAAK1B,KAAK,GACV0B,EAAK1B,MAAMuC,IAEX,EAAAnD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,MAChC,EAAAvC,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAEP,IAAK,IAAII,EAAIN,EAAc,GAAIM,GAAK,IAAKA,EAAG,CAAC,IAAD,IAC9B,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMwC,GACXd,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMe,GACpCd,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMe,IAGxCd,EAAK1B,MAAMuC,IACX,EAAAnD,GAAQY,KAAR,QAAgB0C,IAChB,EAAAvD,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,YArJhD,GAAoCZ,GA6JvBqE,EAAb,kDAEI,aAAe,uCACL/D,WAHd,uDAOQF,KAAKmC,QACLnC,KAAK0C,gBACL1C,KAAK2C,oBATb,sCAyBQ,IAZA,IAAIa,EAASxD,KAAKC,KAAK,GACnBiE,EAAOlE,KAAKC,KAAK,GACjB4D,EAAQ,CAAC,EAAG,EAAG,GACfC,EAAS,CAAC,EAAG,GAAI,GACjBK,EAAQxC,KAAKyC,KAAKF,EAAOV,GACzBa,EAAYb,EAAS7B,KAAKwB,IAAIgB,GAC9BvB,EAAgB,GAChBC,EAAQ,GACRtC,EAAW,GACXC,EAAU,GACVsC,EAAO,GAEFC,EAAY,EAAGA,EAAY/C,KAAKH,SAAUkD,EAAW,CAAC,IAAD,QAE1DH,EAAcxB,KAAKpB,KAAKK,WAAWL,KAAKI,KAAO2C,GAAc/C,KAAKK,WAAWL,KAAKI,MAASJ,KAAKH,OAAS,IACzG+C,EAAcxB,KAAKpB,KAAKK,WAAWL,KAAKI,KAAO2C,GAAc/C,KAAKK,WAAWL,KAAKI,MAASJ,KAAKH,OAAS,IAEzGgD,EAAMzB,KAAK,EAAIO,KAAKqB,GAAKJ,EAAc,IACvCC,EAAMzB,MAAMO,KAAKqB,GAAK,EAAImB,IAA6B,EAAnBvB,EAAc,KAElD,IAAK,IAAIK,EAAI,EAAGA,EAAuB,EAAnBL,EAAc,KAAUK,EACxC,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAc,GAAK,IAAKM,EAAG,CAAC,IAAD,QAEjC,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMoC,EAAS7B,KAAKwB,IAAIgB,EAAQlB,EAAIJ,EAAM,KAC/CC,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMW,EAAS7B,KAAKwB,IAAIgB,EAAQlB,EAAIJ,EAAM,KACxEC,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMW,EAAS7B,KAAKwB,IAAIgB,EAAQlB,EAAIJ,EAAM,MAE5EC,EAAK1B,KAAKO,KAAKyB,IAAIe,EAAQlB,EAAIJ,EAAM,IAAMW,IAE3C,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,MAChC,EAAAvC,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGG,IAANI,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMoC,EAAS7B,KAAKwB,IAAIgB,GAASlB,EAAI,GAAKJ,EAAM,KACrDC,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMW,EAAS7B,KAAKwB,IAAIgB,GAASlB,EAAI,GAAKJ,EAAM,KAC9EC,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMW,EAAS7B,KAAKwB,IAAIgB,GAASlB,EAAI,GAAKJ,EAAM,MAElFC,EAAK1B,KAAKO,KAAKyB,IAAIe,GAASlB,EAAI,GAAKJ,EAAM,IAAMW,IAEjD,EAAAhD,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,MAChC,EAAAvC,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAKf9C,KAAKsD,YAAY/C,EAAUC,EAAS,SACpCD,EAAW,GACXC,EAAU,GAIVsC,EAAK1B,KAAK,GACV0B,EAAK1B,KAAK,GACV0B,EAAK1B,KAAK8C,IAEV,EAAA1D,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,MAChC,EAAAvC,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAEP,IAAK,IAAII,EAAI,EAAGA,EAAIN,EAAc,GAAK,IAAKM,EAAG,CAAC,IAAD,IACjC,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMiD,GACXvB,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMwB,GACpCvB,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMwB,IAGxCvB,EAAK1B,KAAK8C,IACV,EAAA1D,GAAQY,KAAR,QAAgByC,IAChB,EAAAtD,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,OACpCD,EAAW,GACXC,EAAU,GAKVsC,EAAK1B,KAAK,GACV0B,EAAK1B,KAAK,GACV0B,EAAK1B,MAAM8C,IAEX,EAAA1D,GAAQY,KAAR,oBAAgBxB,EAAMyD,UAAUP,MAChC,EAAAvC,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAEP,IAAK,IAAII,EAAIN,EAAc,GAAIM,GAAK,IAAKA,EAAG,CAAC,IAAD,IAC9B,IAANA,GAAWA,IAAMN,EAAc,IAC/BE,EAAK1B,MAAMiD,GACXvB,EAAK1B,KAAK,KAGV0B,EAAK1B,MAAMO,KAAKyB,IAAIF,EAAIL,EAAM,IAAMwB,GACpCvB,EAAK1B,MAAMO,KAAKwB,IAAID,EAAIL,EAAM,IAAMwB,IAGxCvB,EAAK1B,MAAM8C,IACX,EAAA1D,GAAQY,KAAR,QAAgB0C,IAChB,EAAAvD,GAASa,KAAT,oBAAiB0B,IACjBA,EAAO,GAGX9C,KAAKsD,YAAY/C,EAAUC,EAAS,YAjIhD,GAA+BZ,GCvjBhB0E,EA/BS,CACpB7B,UAAW,CACP8B,MAAO,CAAC,IAAK,IAAK,KAClBC,KAAM,CAAC,GAAK,GAAK,KAErBjB,eAAe,CACXgB,MAAO,CAAC,SAAU,UAClBC,KAAM,CAAC,GAAK,KAEhBd,eAAe,CACXa,MAAO,CAAC,YAAY,aACpBC,KAAK,CAAC,GAAI,KAEdP,UAAW,CACPM,MAAO,CAAC,SAAS,QACjBC,KAAM,CAAC,GAAK,KAEhBC,OAAQ,CACJF,MAAO,CAAC,UACRC,KAAM,CAAC,KAEXE,SAAU,CACNH,MAAO,CAAC,MAAO,SAAU,UACzBC,KAAM,CAAC,GAAI,GAAI,IAEnBG,MAAM,CACFJ,MAAM,CAAC,SAAS,OAAO,OACvBC,KAAK,CAAC,EAAI,GAAI,O,SC8ZPI,EAzaf,WAmBI,WAAYC,EAAMC,EAAIC,GAAK,yBAL3BC,UAAY,GAKc,KAJ1BC,aAAe,GAIW,KAH1BC,SAAW,GAGe,KAF1BC,OAAS,GAEiB,KAgX1BC,QAhX0B,WAuXtB,WAAYC,EAAGC,GAAI,oBACftF,KAAKuF,SAAWF,EAChBrF,KAAKwF,YAAcxF,KAAKyF,uBAAuBH,GAE/CtF,KAAK0F,MAAQ,IAAIC,IACjB3F,KAAK0F,MAAME,kBAAkBN,GAC7BtF,KAAK6F,YAAc,EA7XD,mEAgYCP,GAInB,MAAO,CAHE,GAAQA,EAAEQ,EAAER,EAAE7B,EAAI6B,EAAEtD,EAAEsD,EAAES,GACxB,IAAQT,EAAEQ,EAAER,EAAEtD,EAAIsD,EAAE7B,EAAE6B,EAAES,GACxB,EAAI,GAAM,SAAAT,EAAEtD,EAAG,GAAL,SAASsD,EAAE7B,EAAG,OAnYf,qCAuYPR,GACXjD,KAAK6F,YAAc5C,IAxYD,kCA4YlB,OAAO+C,EAAMC,SAASjG,KAAKkG,OAAO,GAAIlG,KAAKkG,OAAO,GAAIlG,KAAKkG,OAAO,MA5YhD,oCA+YRC,GACVnG,KAAKoG,WAAaD,MAhZA,KACtBnG,KAAKqG,KAAOxB,EAAKwB,KACjBrG,KAAKsG,gBAAkBzB,EAAKyB,gBAC5BtG,KAAKgF,UAAYH,EAAKG,UACtBhF,KAAKiF,aAAeJ,EAAKI,aACzBjF,KAAKuG,eAAiBzB,EACtB9E,KAAKwG,iBAAmBzB,EAExB/E,KAAKyG,cAEiB,MAAlB5B,EAAK6B,YACL1G,KAAK0G,UAAY7B,EAAK6B,WAEH,MAAnB7B,EAAK3C,aACLlC,KAAK0G,UAAY7B,EAAK3C,YAET,MAAblC,KAAKqG,OACLrG,KAAKqG,KAAOrG,KAAK0G,WAGrB1G,KAAK2G,eACL3G,KAAK0C,gBACL1C,KAAK4G,cACL5G,KAAK6G,cACL7G,KAAK8G,YA3Cb,2DA+DQ,GAAI9G,KAAKgF,UAAUnD,SAAW7B,KAAKiF,aAAapD,OAC5C,KAAM,qFAAuF7B,KAAKgF,UAAUnD,OAAS,uBAAyB7B,KAAKiF,aAAapD,OAGpK,IAAK,IAAIwD,KAAKrF,KAAKkC,WACf,GAAImD,EAAI,EACJ,KAAM,4BAA8BA,EAAE0B,WAAa,QAAU/G,KAAKqG,KAAO,uBAIjF,IAAIW,EAAoBpC,EAAIqC,cAAcjH,KAAK0G,WAC/C,GAAI1G,KAAKkC,WAAWL,QAAUmF,EAAkBxC,KAAK3C,OACjD,KAAM,mDAAqD7B,KAAKqG,KAAO,kBAAoBW,EAAkBzC,QA3EzH,oCAgFQvE,KAAKkH,WAAa,IAAIC,IAAM,WAC5BnH,KAAKoH,kBAAmB,EACxBpH,KAAKqH,WAAY,EACjBrH,KAAKsH,IAAM,EACXtH,KAAK0G,UAAY,YACjB1G,KAAKkC,WAAaoC,EAAW7B,UAAU+B,OArF/C,oCAwFkBvB,EAAGuB,GACbxE,KAAKuG,eAAe,EAAItD,EAAI,GAAGsE,SAAW/C,EAAK,GAC/CxE,KAAKuG,eAAe,EAAItD,GAAGsE,UAAY/C,EAAK,KA1FpD,6CA6F2BgD,GACnBxH,KAAKwG,iBAAmBgB,EADG,oBAEVxH,KAAKmF,QAFK,IAE3B,2BAA8B,SACrBsC,SAASjB,iBAAmBgB,GAHV,iCA7FnC,kCAqGQ,IAAIE,EACAC,EACAC,EAHI,gBAKS5H,KAAKkF,UALd,IAKR,2BAAgC,CAAC,IAAxB2C,EAAuB,QAC5B,GAAI7H,KAAKoH,iBAAkB,CACvB,IAAIU,EAAMC,EAAUC,OAAOH,EAAKhC,aAChC8B,EAAI,IAAIR,IAAMnB,EAAMC,SAAN,MAAAD,EAAK,YAAa8B,UAEhCH,EAAI3H,KAAKkH,YAGbU,EAAM,IAAIK,IAAoB,CAC1BC,MAAOP,EACPpB,eAAgBvG,KAAKuG,eACrBC,iBAAkBxG,KAAKwG,oBAEvBa,UAAYrH,KAAKqH,UAbO,oBAedQ,EAAKzB,YAfS,IAe5B,2BAA+B,CAAC,IAAvB1F,EAAsB,QAC3BgH,EAAI,IAAIS,IAAKzH,EAAGkH,GAChB5H,KAAKmF,OAAO/D,KAAKsG,IAjBO,gCALxB,iCApGhB,oCAgIQ,IADU,EACNvB,EAAQ,GADF,cAGOnG,KAAKkF,UAHZ,IAGV,2BAAgC,CAAC,IAAxB2C,EAAuB,QACxB7H,KAAKoI,MAAMjI,SACXgG,EAAM/E,KAAKpB,KAAKoI,MAAM9H,eAAe+H,UAGrClC,EAAM/E,KAAKpB,KAAKoI,MAAM9G,cAAc+G,SACpClC,EAAM/E,KAAKpB,KAAKoI,MAAMrI,cAAc,GAAGsI,SACvClC,EAAM/E,KAAKpB,KAAKoI,MAAMrI,cAAc,GAAGsI,UAG3CrI,KAAKsI,OAAOT,EAAKnC,MAAOS,GACxBnG,KAAKuI,UAAUV,EAAKtC,SAAUY,GAE9B0B,EAAKW,cAAcrC,GAEnBA,EAAQ,IAlBF,iCA/HlB,oCAsJQ,IAAK,IAAIlD,EAAI,EAAGA,EAAIjD,KAAKgF,UAAUnD,OAAQoB,IACvCjD,KAAKkF,SAAS9D,KAAK,IAAIpB,KAAKoF,QAAQpF,KAAKgF,UAAU/B,GAAIjD,KAAKyI,aAAazI,KAAKsG,gBAAiBtG,KAAKiF,aAAahC,MAErHjD,KAAK0I,oBAJK,oBAKM1I,KAAKkF,UALX,IAKV,IAAI,EAAJ,qBAA8B,CAAC,IAAvB2C,EAAsB,QAC1BA,EAAKc,eAAe3I,KAAK4I,qBAAqBf,KANxC,iCArJlB,4CA+J0B3C,GAClB,IAAIK,EAAUC,EAAaqD,EAAYnD,EAAOoD,EADlB,EAExBhG,EAAO,GAAIoD,EAAS,GAFI,cAIXhB,GAJW,IAI5B,2BAA2B,CAAC,IAAnB2C,EAAkB,QAEvB,GAAa,KAATA,EACA,OAGJgB,EAAahB,EAAKkB,MAAM,KAND,oBAQTF,GARS,IAQvB,2BAA0B,CAAC,IAAlBG,EAAiB,QACtBlG,EAAK1B,KAAK6H,WAAWD,KATF,8BAevB,GAHAH,EAAa/F,EACbA,EAAO,GAEmB,IAAtB+F,EAAWhH,OAAgB,MAE/B0D,EAAWsD,EAAWK,MAAM,EAAG,GAC/B1D,EAAcqD,EAAWK,MAAM,GAE/BC,QAAQC,IAAI7D,GACZ4D,QAAQC,IAAI5D,GAEZxF,KAAKgF,UAAU5D,KAAKmE,GACpBvF,KAAKiF,aAAa7D,KAAKoE,GAEvBE,EAAQ1F,KAAKyI,aAAazI,KAAKsG,gBAAiBd,GAChDU,EAASlG,KAAKqJ,sBAAsB3D,GAEpCoD,EAAK,IAAI9I,KAAKoF,QAAQc,EAAQX,EAAUG,GACxC1F,KAAKkF,SAAS9D,KAAK0H,IAlCK,iCA/JpC,sCAsMQ,OAAQ9I,KAAK0G,WACT,IAAK,YACD1G,KAAKoI,MAAL,YAAiBkB,EAAjB,YAAoCtJ,KAAKkC,aACzC,MACJ,IAAK,iBACDlC,KAAKoI,MAAL,YAAiBkB,EAAjB,YAAyCtJ,KAAKkC,aAC9C,MACJ,IAAK,iBACDlC,KAAKoI,MAAL,YAAiBkB,EAAjB,YAAyCtJ,KAAKkC,aAC9C,MACJ,IAAK,aACDlC,KAAKoI,MAAL,YAAiBkB,EAAjB,YAAoCtJ,KAAKkC,aACzC,MACJ,IAAK,SACDlC,KAAKoI,MAAQ,IAAIkB,EAAa,SAAUtJ,KAAKkC,YAC7C,MACJ,IAAK,WACDlC,KAAKoI,MAAQ,IAAIkB,EAAa,WAAYtJ,KAAKkC,YAC/C,MACJ,IAAK,QACDlC,KAAKoI,MAAQ,IAAIkB,EAAa,QAAStJ,KAAKkC,YAC5C,MACJ,QACI,KAAM,iDAAmDlC,KAAK0G,UAGtE1G,KAAKoI,MAAMhI,IAAMJ,KAAKsH,IACtBtH,KAAKoI,MAAMmB,aAjOnB,gCAoOcC,EAAKrD,GACXgD,QAAQC,IAAII,GADM,oBAEJrD,GAFI,IAElB,2BAAqB,SACfoC,UAAUiB,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAHlB,iCApO1B,6BA2OWC,EAAGtD,GAAQ,IAAD,gBACCA,GADD,IACb,2BAAqB,CAAC,IAAbzF,EAAY,QACjBA,EAAEgJ,QAAQD,EAAEzH,GACZtB,EAAEiJ,QAAQF,EAAEhG,GACZ/C,EAAEkJ,QAAQH,EAAE1D,IAJH,iCA3OrB,mCAmPiBtF,EAAMoJ,GACf,IAAIvE,EAAI,IAAIwE,IACZ,OAAQrJ,GACJ,IAAK,IACD,IAAIsJ,EAAgB,IAAIC,IAAQ,EAAG,EAAG,GACtC1E,EAAE2E,mBAAmBF,EAAe,IAAIC,IAAQH,EAAI,GAAIA,EAAI,GAAIA,EAAI,KACpE,MACJ,IAAK,IACDvE,EAAE4E,IAAIL,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAClC,MACJ,IAAK,IACDvE,EAAE6E,iBAAiB,IAAIH,IAAQH,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAAKA,EAAI,IAC5D,MACJ,IAAK,IACD,IAAIJ,EAAI,IAAI9D,IACZ8D,EAAEW,UAAUP,GACZvE,EAAE+E,aAAaZ,GACf,MACJ,QACI,KAAM,oDAAsDhJ,EAAO,6BAG3E,OAAO6E,IAzQf,4CA6Q0BI,GAClB,IAAIQ,EAAS,GAMb,OAJAA,EAAO9E,KAAKO,KAAK2I,OAAO5E,EAAM6E,GAAK5I,KAAKqB,KAAO,EAAIrB,KAAKqB,IAAO,MAC/DkD,EAAO9E,KAAKO,KAAK2I,OAAO5E,EAAM8E,GAAK7I,KAAKqB,KAAO,EAAIrB,KAAKqB,IAAO,MAC/DkD,EAAO9E,KAAKO,KAAK2I,OAAO5E,EAAM+E,GAAK9I,KAAKqB,KAAO,EAAIrB,KAAKqB,IAAO,MAExDkD,IApRf,0CAwRQ,IAAIwE,EAAI1K,KAAKkF,SAASrD,OAEtB,GAA4B,GAAxB7B,KAAKkF,SAASrD,OAAlB,CAcA,IATA,IAMI2D,EANAmF,EAAc,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,IAGpCC,EAAS,GAAK,EAAIF,GAMbzH,EAAI,EAAGA,EAAIyH,IAAKzH,EACrBuC,EAAcxF,KAAKkF,SAASjC,GAAGuC,YAC/BmF,EAAY,GAAG,IAAf,SAAqBnF,EAAY,GAAI,GACrCmF,EAAY,GAAG,IAAMnF,EAAY,GAAGA,EAAY,GAChDmF,EAAY,GAAG,IAAMnF,EAAY,GAAGA,EAAY,GAChDmF,EAAY,GAAG,IAAf,SAAqBnF,EAAY,GAAI,GACrCmF,EAAY,GAAG,IAAMnF,EAAY,GAAGA,EAAY,GAChDmF,EAAY,GAAG,IAAf,SAAqBnF,EAAY,GAAI,GAIzCmF,EAAY,GAAG,IAAMC,EAAQD,EAAY,GAAG,IAhB7B,GAiBfA,EAAY,GAAG,IAAMC,EACrBD,EAAY,GAAG,IAAMC,EACrBD,EAAY,GAAG,IAAMC,EAAQD,EAAY,GAAG,IAnB7B,GAoBfA,EAAY,GAAG,IAAMC,EACrBD,EAAY,GAAG,IAAMC,EAAQD,EAAY,GAAG,IArB7B,GAwBfA,EAAY,GAAG,GAAKA,EAAY,GAAG,GACnCA,EAAY,GAAG,GAAKA,EAAY,GAAG,GACnCA,EAAY,GAAG,GAAKA,EAAY,GAAG,GAEnC,IAAIE,EAAQC,YAAKH,GAGbI,EAAQF,EAAM7C,OAAOgD,QAAO,SAACC,EAAMjJ,EAAGiB,EAAGiI,GAAb,OAAqBlJ,EAAIkJ,EAAID,GAAQhI,EAAIgI,IAAM,GAE/EjL,KAAKmL,SAAWN,EAAMO,QAAQL,GAE9B,IAAIM,EAAO1J,KAAKG,KAAK,SAAA9B,KAAKmL,SAAS,GAAI,GAAlB,SAAsBnL,KAAKmL,SAAS,GAAI,GAAxC,SAA4CnL,KAAKmL,SAAS,GAAI,IAEvE,GAARE,GAAqBC,KAARD,QAAuB3J,GAAR2J,EAC5BrL,KAAKmL,SAAW,CAAC,EAAE,EAAE,IAErBnL,KAAKmL,SAAS,IAAME,EACpBrL,KAAKmL,SAAS,IAAME,EACpBrL,KAAKmL,SAAS,IAAME,QAlDpB9I,IAAMC,MAAM,6DA3RxB,2CAmVyB+I,GACjB,IAAIb,EAAI3C,EAAUC,OAAOnG,OAAS,EAE9B2J,EAAgB7J,KAAK8J,IAAIF,EAAQ/F,YAAY,GAAKxF,KAAKmL,SAAS,GAC9DI,EAAQ/F,YAAY,GAAKxF,KAAKmL,SAAS,GACvCI,EAAQ/F,YAAY,GAAKxF,KAAKmL,SAAS,IAI7C,OAFIK,EAAgB,IAAGA,EAAgB,GAEhC7J,KAAK2I,MAAM3I,KAAKyC,KAAMoH,GAAgB7J,KAAKqB,GAAG,EAAI0H,KA5VjE,oCA+VkBgB,GACV1L,KAAKkH,WAAa,IAAIC,IAAMuE,MAhWpC,qCAmWyBC,GACjB,IAAIzJ,EAEJ,OAAQyJ,GACJ,IAAK,YACDzJ,EAAaoC,EAAW7B,UACxB,MACJ,IAAK,iBACDP,EAAaoC,EAAWf,eACxB,MACJ,IAAK,iBACDrB,EAAaoC,EAAWZ,eACxB,MACJ,IAAK,aACDxB,EAAaoC,EAAWL,UACxB,MACJ,IAAK,SACD/B,EAAaoC,EAAWG,OACxB,MACJ,IAAK,WACDvC,EAAaoC,EAAWI,SACxB,MACJ,IAAK,QACDxC,EAAaoC,EAAWK,MACxB,MACJ,QACIpC,IAAMC,MAAM,sCAGpB,OAAON,MAhYf,KCRa0J,EAAb,WAQI,WAAYC,GAAY,oBACpB7L,KAAK8L,iBAAiBD,GAT9B,2DAYmB7J,EAAGyB,EAAGsC,GACjB/F,KAAK+L,MAAMxG,SAAS2E,IAAIlI,EAAGyB,EAAGsC,KAbtC,mCAgBiB4B,EAAG1E,GACZjD,KAAK+L,MAAM7D,MAAM8D,OAAOC,SAAStE,EAAEuE,UAAU,GAAI,KACjDlM,KAAK+L,MAAMI,UAAgB,IAAJlJ,IAlB/B,uCAqBqB4I,GACb,OAAQA,GACJ,IAAK,UACD7L,KAAK+L,MAAQ,IAAIK,IAAa,UAAW,IACzC,MACJ,IAAK,cACDpM,KAAK+L,MAAQ,IAAIM,IAAiB,UAAW,IAC7CrM,KAAK+L,MAAMxG,SAAS2E,KAAK,EAAG,GAAI,GAChClK,KAAKsM,OAAS,IAAIC,IAAuBvM,KAAK+L,MAAO,IACrD,MACJ,IAAK,QACD/L,KAAK+L,MAAQ,IAAIS,IAAW,UAAW,IACvCxM,KAAK+L,MAAMxG,SAAS2E,IAAI,EAAG,EAAG,GAC9BlK,KAAKsM,OAAS,IAAIG,IAAiBzM,KAAK+L,MAAO,IAC/C,MACJ,QACIxJ,IAAMC,MAAM,wCArC5B,KAAaoJ,EAIFc,QAAU,EAJRd,EAKFe,YAAc,EALZf,EAMFgB,MAAQ,EAqCJhB,QC8GAiB,EAlJf,WAWI,WAAYC,EAAGnF,GAAI,yBATnBoF,KAAO,GAUH/M,KAAKgN,KAAOF,EACZ9M,KAAKkG,OAASyB,EAEd3H,KAAKyH,SAAW,IAAIwF,IAAkB,CAClC/E,MAAOlI,KAAKkG,OACZgH,UAAW,IAGflN,KAAKmN,aAAc,EACnBnN,KAAKoN,qBACLpN,KAAKqN,aAELrN,KAAKsN,EAAI,IAAInG,IAAM,kBACnBnH,KAAKuN,EAAI,IAAIpG,IAAM,kBACnBnH,KAAKwN,EAAI,IAAIrG,IAAM,kBAEnBnH,KAAKyN,kBAAoB,MACzBzN,KAAK0N,aAAe,KA7B5B,6DAgCqBjN,EAAMkN,GAKnB,GAJA3N,KAAKyN,kBAAoBhN,EAEzBT,KAAK4N,cAAgB,KAEI,MAArB5N,KAAK0N,aAAsB,CAC3B,IAD2B,EACvBtH,EAAa,GADU,cAEXuH,GAFW,IAE3B,2BAAsB,CAAC,IAAD,EAAbzD,EAAa,sBACDA,EAAIhF,UADH,IAClB,2BAA+B,CAAC,IAAvB2C,EAAsB,QAC3BzB,EAAWhF,KAAKH,IAAoBM,sBAAsBsG,EAAKzB,cAFjD,gCAFK,8BAO3BpG,KAAK0N,aAAezM,IAAoBM,sBAAsB6E,GAKlE,OAAQ3F,GACJ,IAAK,MACD,IAAIoN,EAAM,IAAIC,IACd9N,KAAK0N,aAAaK,qBAClBF,EAAIG,KAAKhO,KAAK0N,aAAaO,aAC3BjO,KAAK4N,cAAgB,IAAIM,IAAWL,EAAK7N,KAAKkG,QAC9C,MACJ,IAAK,SACDlG,KAAK0N,aAAaS,wBAClB,IAAIC,EAASpO,KAAK0N,aAAaW,eAC3BC,EAAO,IAAIlM,IAAqBgM,EAAO5K,OAAQ,GAAI,IACvD8K,EAAK/F,UAAU6F,EAAOG,OAAOvM,EAAGoM,EAAOG,OAAO9K,EAAG2K,EAAOG,OAAOxI,GAC/D,IAAI0B,EAAW,IAAI+G,IAAkB,CAAEtG,MAAOlI,KAAKkG,SACnDuB,EAASJ,WAAY,EACrBrH,KAAK4N,cAAgB,IAAIzF,IAAKmG,EAAM7G,GACpC,MACJ,IAAK,WAEA,MACL,QACAlF,IAAMC,MAAM,4CAKhB,OAAOxC,KAAK4N,gBA1EpB,mCA+EiB1H,GACTlG,KAAKkG,OAASA,EACdlG,KAAKyH,SAAW,IAAIwF,IAAkB,CAClC/E,MAAOlI,KAAKkG,OACZgH,UAAW,IAEXlN,KAAKmN,aACLnN,KAAKyO,UAETzO,KAAKqN,eAxFb,iCA2FeL,GACPhN,KAAKgN,KAAOA,EACThN,KAAKmN,YACJnN,KAAKoN,qBAELpN,KAAKyO,UAETzO,KAAKqN,eAlGb,mCAsGQrN,KAAK0O,QAAU,IAAIC,IAAW3O,KAAKgN,KAAMhN,KAAKgN,KAAMhN,KAAKkG,OAAQlG,KAAKkG,UAtG9E,gCA0GQlG,KAAK+M,KAAO,GACZ,IAAI6B,EAAW5O,KAAKgN,KAAO,EAC3BhN,KAAK+M,KAAK3L,KAAK,IAAIyN,KAAK,IAAIlO,KAAiBmO,cAAc,CAAC,IAAI9E,KAAS4E,EAAU,EAAG,GAAI,IAAI5E,IAAQ4E,EAAU,EAAG,KAAM5O,KAAKyH,WAC9HzH,KAAK+M,KAAK3L,KAAK,IAAIyN,KAAK,IAAIlO,KAAiBmO,cAAc,CAAC,IAAI9E,IAAQ,GAAI4E,EAAU,GAAI,IAAI5E,IAAQ,EAAG4E,EAAU,KAAM5O,KAAKyH,WAC9HzH,KAAK+M,KAAK3L,KAAK,IAAIyN,KAAK,IAAIlO,KAAiBmO,cAAc,CAAC,IAAI9E,IAAQ,EAAG,GAAI4E,GAAW,IAAI5E,IAAQ,EAAG,EAAG4E,KAAa5O,KAAKyH,aA9GtI,2CAkHQzH,KAAK+M,KAAO,GACZ,IACIgC,EAAMC,EAAMC,EADZL,EAAW5O,KAAKgN,KAAO,EAE3B+B,EAAO,IAAI9B,IAAkB,CACzB/E,MAAOlI,KAAKsN,EACZJ,UAAW,IAEflN,KAAK+M,KAAK3L,KAAK,IAAIyN,KAAK,IAAIlO,KAAiBmO,cAAc,CAAC,IAAI9E,KAAS4E,EAAU,EAAG,GAAI,IAAI5E,IAAQ4E,EAAU,EAAG,KAAMG,IACzHC,EAAOhP,KAAKyH,SAAW,IAAIwF,IAAkB,CACzC/E,MAAOlI,KAAKuN,EACZL,UAAW,IAEflN,KAAK+M,KAAK3L,KAAK,IAAIyN,KAAK,IAAIlO,KAAiBmO,cAAc,CAAC,IAAI9E,IAAQ,GAAI4E,EAAU,GAAI,IAAI5E,IAAQ,EAAG4E,EAAU,KAAMI,IACzHC,EAAOjP,KAAKyH,SAAW,IAAIwF,IAAkB,CACzC/E,MAAOlI,KAAKwN,EACZN,UAAW,IAEflN,KAAK+M,KAAK3L,KAAK,IAAIyN,KAAK,IAAIlO,KAAiBmO,cAAc,CAAC,IAAI9E,IAAQ,EAAG,GAAI4E,GAAW,IAAI5E,IAAQ,EAAG,EAAG4E,KAAaK,MAnIjI,0CAuIQjP,KAAKmN,aAAenN,KAAKmN,YACtBnN,KAAKmN,YACJnN,KAAKoN,sBAELpN,KAAKkP,aAAalP,KAAKkG,QACvBlG,KAAKyO,eA5IjB,KC2cezI,EA5cf,WAgCI,WAAYmJ,GAAc,yBA/B1BxB,KAAO,GA+BkB,KAfzByB,aAAc,EAeW,KAdzBC,aAAc,EAcW,KAbzBC,sBAAuB,EAaE,KAZzBC,iBAAkB,EAYO,KAVzBC,WAAa,cAWTxP,KAAKyP,MAAQ,IAAIC,IACjB1P,KAAKmP,YAAcA,EACnBnP,KAAK2P,aAnCb,yDAuCQ3P,KAAK4P,UAAW,EAChB5P,KAAK6P,cAAgB,KACrB7P,KAAK8P,yBAA0B,EAC/B9P,KAAK+P,YAAc,EACnB/P,KAAKgQ,eACLhQ,KAAKiQ,SAAW,IAAIC,IAAc,CAAEC,WAAW,EAAOC,uBAAuB,EAAOC,gBAAiB,qBACrGrQ,KAAKiQ,SAASK,cAAcC,OAAOC,kBACnCxQ,KAAKiQ,SAASQ,sBAAuB,EAErCzQ,KAAK0Q,OAAS,IAAI1G,IAAQ,EAAG,EAAG,GAEhChK,KAAK2Q,mBACL3Q,KAAK4Q,UAAU5Q,KAAKwP,YAEpBxP,KAAK6Q,SAAW,CACZ,IAAIjF,EAAM,WACV,IAAIA,EAAM,eACV,IAAIA,EAAM,UAEd5L,KAAK8Q,MAAQ,IAAIjE,EAAM,GAAI,UAC3B7M,KAAK+Q,SAAW,UAChB/Q,KAAKiQ,SAASe,cAAchR,KAAK+Q,UAtBxB,oBAwBK/Q,KAAK6Q,UAxBV,IAwBT,2BAA6B,CAAC,IAArBI,EAAoB,QACzBjR,KAAKyP,MAAMyB,IAAID,EAAElF,QAzBZ,8BA2BT/L,KAAKyP,MAAMyB,IAAIlR,KAAKmR,QACpBnR,KAAKsH,IAAM,IAlEnB,gCAsEQ,IAAI8J,EAAQ,GACRtO,EAAO,GACXsO,EAAMzD,KAAO,GAHP,oBAIU3N,KAAK2N,MAJf,IAIN,2BAA2B,CAAC,IAAnBzD,EAAkB,QACvBpH,EAAKuD,KAAO6D,EAAI7D,KAChBvD,EAAKwD,gBAAkB4D,EAAI5D,gBAC3BxD,EAAKkC,UAAYkF,EAAIlF,UACrBlC,EAAKmC,aAAeiF,EAAIjF,aACxBmM,EAAMzD,KAAKvM,KAAK0B,GAChBA,EAAO,IAVL,8BAYN,OAAOsO,IAjFf,+BAqFQpR,KAAKiQ,SAASoB,OAAOrR,KAAKyP,MAAOzP,KAAKmR,QACjCnR,KAAK4P,UACN5P,KAAKmP,YAAYmC,UAvF7B,qCA4FQtR,KAAKuR,uBAAwB,EAE7BvR,KAAKuG,eAAiB,CAClB,IAAIiL,IAAM,IAAIxH,IAAQ,EAAG,EAAG,GAAI,IAChC,IAAIwH,IAAM,IAAIxH,KAAS,EAAG,EAAG,GAAI,IACjC,IAAIwH,IAAM,IAAIxH,IAAQ,EAAG,EAAG,GAAI,IAChC,IAAIwH,IAAM,IAAIxH,IAAQ,GAAI,EAAG,GAAI,IACjC,IAAIwH,IAAM,IAAIxH,IAAQ,EAAG,EAAG,GAAI,IAChC,IAAIwH,IAAM,IAAIxH,IAAQ,EAAG,GAAI,GAAI,KAGrChK,KAAKyR,gBAAkB,CACnB,IAAIC,IAAY1R,KAAKuG,eAAe,GAAI,IAAK,UAC7C,IAAImL,IAAY1R,KAAKuG,eAAe,GAAI,IAAK,UAC7C,IAAImL,IAAY1R,KAAKuG,eAAe,GAAI,IAAK,OAC7C,IAAImL,IAAY1R,KAAKuG,eAAe,GAAI,IAAK,OAC7C,IAAImL,IAAY1R,KAAKuG,eAAe,GAAI,IAAK,KAC7C,IAAImL,IAAY1R,KAAKuG,eAAe,GAAI,IAAK,MAlBtC,oBAqBQvG,KAAKyR,iBArBb,IAqBX,2BAAyC,CAAC,IAAjCnF,EAAgC,QACrCA,EAAOqF,SAAU,EACjB3R,KAAKyP,MAAMyB,IAAI5E,IAvBR,iCA3FnB,6CAsH2B9E,GAAS,IAAD,gBACXxH,KAAK2N,MADM,IAC3B,2BAA2B,SACnBiE,uBAAuBpK,IAFJ,iCAtHnC,mCA4HiBvE,EAAGuE,GACZxH,KAAKyR,gBAAgB,EAAIxO,GAAG0O,QAAUnK,EACtCxH,KAAKyR,gBAAgB,EAAIxO,EAAI,GAAG0O,QAAUnK,IA9HlD,mCAiIiBvE,EAAGuB,GAAO,IAAD,gBACFxE,KAAK2N,MADH,IAClB,2BAA2B,SACnBkE,cAAc5O,EAAGuB,IAFP,iCAjI1B,yCAwIQxE,KAAK8R,OAAUvB,OAAOwB,YAAc,GAEhC/R,KAAKuP,gBACLvP,KAAKgS,MAAQzB,OAAO0B,WAAa,IAEjCjS,KAAKgS,MAAQzB,OAAO0B,WAAa,GAErCjS,KAAKiQ,SAASiC,QAAQlS,KAAKgS,MAAOhS,KAAK8R,UA/I/C,gCAkJcrR,GAS4B,IAAD,GARjCT,KAAKwP,WAAa/O,EAGdT,KAAKmR,OADI,gBAAT1Q,EACc,IAAI0R,IAAkB,GAAInS,KAAKgS,MAAQhS,KAAK8R,OAAQ,GAAK,KAEzD,IAAIM,IAAmBpS,KAAKgS,OAAS,EAAGhS,KAAKgS,MAAQ,EAAGhS,KAAK8R,OAAS,EAAG9R,KAAK8R,QAAU,GAAI,IAAK,KAGxF,MAAvB9R,KAAKqS,kBACL,EAAArS,KAAKmR,OAAO5L,UAAS2E,IAArB,oBAA4BlK,KAAKqS,iBAGrCrS,KAAKsS,SAAW,IAAIC,IAAcvS,KAAKmR,OAAQnR,KAAKiQ,SAASuC,YAC7DxS,KAAKsS,SAASG,OAASzS,KAAK0Q,OAC5B1Q,KAAK0S,WAjKb,qCAqKgC,gBAApB1S,KAAKwP,WACLxP,KAAKmR,OAAOwB,OAAS3S,KAAKgS,MAAQhS,KAAK8R,QAEvC9R,KAAKmR,OAAOyB,KAAO5S,KAAKgS,OAAU,EAClChS,KAAKmR,OAAO0B,MAAQ7S,KAAKgS,MAAQ,EACjChS,KAAKmR,OAAO2B,IAAM9S,KAAK8R,OAAS,EAChC9R,KAAKmR,OAAO4B,OAAS/S,KAAK8R,QAAW,GAEzC9R,KAAKmR,OAAO6B,yBACZhT,KAAK0S,WA9Kb,uCAiLqB/G,GACb3L,KAAKmR,OAAO8B,KAAOtH,EACnB3L,KAAKmR,OAAO6B,2BAnLpB,2CAsLyB3N,GACjB,IAAIrD,EAAIqD,EAAE6N,EAAIvR,KAAKwB,IAAIkC,EAAE8N,KAAOxR,KAAKyB,IAAIiC,EAAE+N,OACvC3P,EAAI4B,EAAE6N,EAAIvR,KAAKwB,IAAIkC,EAAE8N,KAAOxR,KAAKwB,IAAIkC,EAAE+N,OACvCrN,EAAIV,EAAE6N,EAAIvR,KAAKyB,IAAIiC,EAAE8N,KACzBnT,KAAKqS,eAAiB,CAACrQ,EAAGyB,EAAGsC,GAC7B/F,KAAKmR,OAAO5L,SAAS2E,IAAIlI,EAAGyB,EAAGsC,GAC/B/F,KAAKsS,SAASI,WA5LtB,mCA+LiBzB,GACTjR,KAAK0Q,OAAS,IAAI1G,IAAQiH,EAAEjP,EAAGiP,EAAExN,EAAGwN,EAAElL,GACtC/F,KAAKsS,SAASG,OAASzS,KAAK0Q,OAC5B1Q,KAAKsS,SAASI,WAlMtB,sCAuMQ1S,KAAKuP,iBAAmBvP,KAAKuP,gBAC7BvP,KAAK2Q,mBACL3Q,KAAKqT,iBAzMb,+BA4ManN,GACLlG,KAAK+Q,SAAW/K,EAAMC,SAASC,EAAOgN,EAAGhN,EAAOxF,EAAGwF,EAAOoN,GAC1DtT,KAAKiQ,SAASe,cAAchR,KAAK+Q,YA9MzC,kCAiNgBtQ,EAAM8S,GACdvT,KAAK6Q,SAASpQ,GAAMkR,QAAU4B,IAlNtC,kCAqNgB9S,EAAMyF,GACdlG,KAAK6Q,SAASpQ,GAAMyO,aAAalJ,EAAMC,SAASC,EAAOgN,EAAGhN,EAAOxF,EAAGwF,EAAOoN,GAAIpN,EAAOjD,GAC1E,GAARxC,GACAT,KAAK6Q,SAASpQ,GAAM6L,OAAOoG,WAxNvC,wCA4NsBjS,EAAM+G,GAChBA,GACqB,WAAjBxH,KAAK+Q,UAA0B/Q,KAAK8P,0BACpCvN,IAAMiR,QAAQ,gGACdxT,KAAK8P,yBAA0B,GAEnC9P,KAAK6Q,SAASpQ,GAAM6L,OAAOoG,SAC3B1S,KAAKyP,MAAMyB,IAAIlR,KAAK6Q,SAASpQ,GAAM6L,SAEnCtM,KAAKyP,MAAMgE,OAAOzT,KAAK6Q,SAASpQ,GAAM6L,UArOlD,0CAyOwB7L,EAAM+I,GACtBxJ,KAAK6Q,SAASpQ,GAAMiT,eAAelK,EAAIxH,EAAGwH,EAAI/F,EAAG+F,EAAIzD,GACrD/F,KAAK6Q,SAASpQ,GAAM6L,OAAOoG,WA3OnC,4CA8O0B5K,GAClB,IAAI6L,GAAW,EACXC,GAAW,EACXC,GAAY,EACZ7T,KAAKoP,cACLpP,KAAK8T,aACLH,GAAW,GAEX3T,KAAKqP,cAAgBrP,KAAK8Q,MAAM3D,cAChCnN,KAAK+T,aACLH,GAAW,GAEX5T,KAAKsP,uBACLtP,KAAKgU,oBAAoB,IAAI,GAC7BH,GAAY,GAEhB7T,KAAK8Q,MAAM5B,aAAalJ,EAAMC,SAAS6B,EAAIoL,EAAGpL,EAAIpH,EAAGoH,EAAIwL,IACrDK,GACA3T,KAAK8T,aAELF,GACA5T,KAAK+T,aAELF,IACA7T,KAAKgU,oBAAoBhU,KAAK8Q,MAAMrD,mBAAmB,GACvDoG,GAAY,KAvQxB,8CA4QQ,IAAID,GAAW,EACX5T,KAAKqP,cACLrP,KAAK+T,aACLH,GAAW,GAEf5T,KAAK8Q,MAAMmD,oBACPL,GACA5T,KAAK+T,eAnRjB,qCAuRmB/G,GACX,IAAI2G,GAAW,EACXC,GAAW,EACX5T,KAAKoP,cACLpP,KAAK8T,aACLH,GAAW,GAEX3T,KAAKqP,cACLrP,KAAK+T,aACLH,GAAW,GAGf5T,KAAK8Q,MAAMoD,WAAWlH,GAElB2G,GACA3T,KAAK8T,aAELF,GACA5T,KAAK+T,eAzSjB,mCA+SQ/T,KAAKoP,aAAepP,KAAKoP,YAErBpP,KAAKoP,YACLpP,KAAKyP,MAAMyB,IAAIlR,KAAK8Q,MAAMpC,SAE1B1O,KAAKyP,MAAMgE,OAAOzT,KAAK8Q,MAAMpC,WApTzC,mCA2TQ,GAFA1O,KAAKqP,aAAerP,KAAKqP,YAErBrP,KAAKqP,YAAa,CAAC,IAAD,gBACJrP,KAAK8Q,MAAM/D,MADP,IAClB,2BAA+B,CAAC,IAAvB/D,EAAsB,QAC3BhJ,KAAKyP,MAAMyB,IAAIlI,IAFD,mCAIf,CAAC,IAAD,gBACWhJ,KAAK8Q,MAAM/D,MADtB,IACH,2BAA+B,CAAC,IAAvB/D,EAAsB,QAC3BhJ,KAAKyP,MAAMgE,OAAOzK,IAFnB,kCA/Tf,yCAyUQhJ,KAAKsS,SAAS6B,YAAcnU,KAAKsS,SAAS6B,WAC1CnU,KAAK4P,UAAY5P,KAAK4P,WA1U9B,0CAqVwBnP,EAAM8S,GACtBvT,KAAKsP,qBAAuBiE,EAC5BvT,KAAKyP,MAAMgE,OAAOzT,KAAK8Q,MAAMlD,eACzB2F,GACAvT,KAAKyP,MAAMyB,IAAIlR,KAAK8Q,MAAMsD,iBAAiB3T,EAAMT,KAAK2N,SAzVlE,oCA8VkBhC,GACV,OAAO/G,EAAIqC,cAAc0E,KA/VjC,kCAkWgB0I,EAAIC,EAAQC,GAAI,IAAD,gBACPvU,KAAK2N,KAAK0G,GAAIlP,QADP,IACvB,2BAAsC,CAAC,IAA5BuC,EAA2B,QAClC1H,KAAKyP,MAAMgE,OAAO/L,IAFC,8BAIvB6M,EAAC,WAAD,cAAKD,IAJkB,oBAKPtU,KAAK2N,KAAK0G,GAAIlP,QALP,IAKvB,2BAAsC,CAAC,IAA5BuC,EAA2B,QAClC1H,KAAKyP,MAAMyB,IAAIxJ,IANI,iCAlW/B,+BA6WQ,OAAO1H,KAAKsH,MA7WpB,gCAgXcqE,GAAM,IAAD,OACX3L,KAAKsH,IAAMqE,EACX,IAAK,IAAI1I,EAAI,EAAGA,EAAIjD,KAAK2N,KAAK9L,OAAQoB,IAClCjD,KAAKwU,YAAYvR,EAAG,CAACA,EAAG0I,IAAM,SAAC1I,EAAG0I,GAC9B,EAAKgC,KAAK1K,GAAGqE,IAAMqE,EACnB,EAAKgC,KAAK1K,GAAGkC,OAAS,GACtB,EAAKwI,KAAK1K,GAAGP,gBACb,EAAKiL,KAAK1K,GAAG4D,cACb,EAAK8G,KAAK1K,GAAG6D,iBAxX7B,uCA6XqBuN,EAAInO,GAAS,IAAD,OACzBlG,KAAKwU,YAAYH,EAAI,CAACA,EAAInO,IAAS,SAACmO,EAAInO,GACpC,EAAKyH,KAAK0G,GAAIlP,OAAS,GACvB,EAAKwI,KAAK0G,GAAII,cAAczO,EAAMC,SAASC,EAAOgN,EAAGhN,EAAOxF,EAAGwF,EAAOoN,IACtE,EAAK3F,KAAK0G,GAAIvN,iBAjY1B,kCAqYgBuN,EAAIjM,EAAOlG,GAAa,IAAD,OAC/BlC,KAAKwU,YAAYH,EAAI,CAACA,EAAIjM,EAAOlG,IAAa,SAACmS,EAAIjM,EAAOlG,GACtD,EAAKyL,KAAK0G,GAAIlP,OAAS,GACvB,EAAKwI,KAAK0G,GAAI3N,UAAY0B,EAC1B,EAAKuF,KAAK0G,GAAInS,WAAaA,EAAWsC,KACtC,EAAKmJ,KAAK0G,GAAI3R,gBACd,EAAKiL,KAAK0G,GAAIxN,cACd,EAAK8G,KAAK0G,GAAIvN,iBA5Y1B,sCAiZoBuN,EAAI7M,GAAS,IAAD,OACxBxH,KAAKwU,YAAYH,EAAI,CAACA,EAAI7M,IAAS,SAAC6M,EAAI7M,GACpC,EAAKmG,KAAK0G,GAAIlP,OAAS,GACvB,EAAKwI,KAAK0G,GAAIhN,UAAYG,EAC1B,EAAKmG,KAAK0G,GAAIvN,iBArZ1B,uCAyZqBuN,EAAI7M,GAAS,IAAD,OACzBxH,KAAKwU,YAAYH,EAAI,CAACA,EAAI7M,IAAS,SAAC6M,EAAI7M,GACpC,EAAKmG,KAAK0G,GAAIlP,OAAS,GACvB,EAAKwI,KAAK0G,GAAIjN,iBAAmBI,EACjC,EAAKmG,KAAK0G,GAAIvN,iBA7Z1B,8BAiaY6G,GAAO,IAAD,gBACM3N,KAAK2N,MADX,IACV,2BAA2B,CAAC,IAAD,EAAlBzD,EAAkB,sBACPA,EAAI/E,QADG,IACvB,2BAA4B,CAAC,IAAlBuC,EAAiB,QACxB1H,KAAKyP,MAAMgE,OAAO/L,IAFC,gCADjB,8BAMV1H,KAAK2N,KAAO,GANF,oBAOUA,GAPV,IAOV,2BAA0B,CAAC,IAAlB+G,EAAiB,QACtB1U,KAAK2N,KAAKvM,KAAK,IAAIwD,EAAI8P,EAAS1U,KAAKuG,eAAgBvG,KAAKuR,yBARpD,kDAUMvR,KAAK2N,MAVX,IAUV,2BAA2B,CAAC,IAAD,EAAlBzD,EAAkB,sBACPA,EAAI/E,QADG,IACvB,2BAA4B,CAAC,IAAlBuC,EAAiB,QACxB1H,KAAKyP,MAAMyB,IAAIxJ,IAFI,gCAVjB,iCAjalB,2BAobS7C,GACD,IACI6P,EAASC,EAFN,EACHC,EAAe/P,EAAKkE,MAAM,KADvB,cAGiB6L,GAHjB,IAGP,2BAAsC,CAAC,IAA9BC,EAA6B,QAClC,GAAmB,IAAfA,EACA,OAGAH,EAAUG,EAAY9L,MAAM,MAC5B4L,EAAK,IAAI/P,EAAI8P,EAAQ,GAAIA,EAAQ,GAAIA,EAAQxL,MAAM,GAAIlJ,KAAKuG,eAAgBvG,KAAKuR,uBACjFvR,KAAK2N,KAAKvM,KAAKuT,IAVhB,kDAeS3U,KAAK2N,MAfd,IAeP,2BAA2B,CAAC,IAAD,EAAlBzD,EAAkB,sBACPA,EAAI/E,QADG,IACvB,2BAA4B,CAAC,IAAlBuC,EAAiB,QACxB1H,KAAKyP,MAAMyB,IAAIxJ,IAFI,gCAfpB,kCApbf,gCA6UoBwL,EAAGxS,EAAG4S,GAClB,SAASwB,EAAenN,GACpB,IAAI+D,EAAM/D,EAAEZ,SAAS,IACrB,OAAsB,IAAf2E,EAAI7J,OAAe,IAAM6J,EAAMA,EAE1C,MAAO,IAAMoJ,EAAe5B,GAAK4B,EAAepU,GAAKoU,EAAexB,OAlV5E,K,2LCTayB,GAAe,SAACC,GAGzB,IAFA,IAAI9K,EAAM,GAEDjH,EAAI,EAAGA,EAAI+R,EAAMC,OAAOpT,OAAQoB,IAErCiH,EAAI9I,KACA,cAAC,GAAD,CAAgB8T,MAAOF,EAAMC,OAAOhS,GAAI+E,OAAQgN,EAAMhN,OAAO/E,GAAIkS,WAAS,EAACZ,EAAGS,EAAMT,EAAGxJ,MAAO9H,EAAGmS,KAAMJ,EAAMI,KAAMC,SAAUL,EAAMK,SAAUC,QAASN,EAAMM,WAIpK,OAAOpL,GAGEqL,GAAb,kDAGI,WAAYP,GAAQ,IAAD,8BACf,gBACKM,QAAUN,EAAMM,QACrB,EAAKE,OAASR,EAAMQ,OACpB,EAAKjB,EAAIS,EAAMT,EACf,EAAKa,KAAOJ,EAAMI,KAClB,EAAKF,MAAQF,EAAME,MACnB,EAAKlN,OAASgN,EAAMhN,OACpB,EAAKmN,UAAYH,EAAMG,UACvB,EAAKpK,MAAQiK,EAAMjK,MACnB,EAAK0K,aAAeT,EAAMS,aAC1B,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAEfX,EAAMK,WACN,EAAKO,IAAM,GAdA,EAHvB,wDAqBgBC,GACR7V,KAAKwV,OAASK,EACd7V,KAAKuU,EAAEsB,EAAO7V,KAAK+K,SAvB3B,+BA2BQ,IAAI+K,EAEJ,GAAI9V,KAAKmV,UAAW,CAChB,IAAMY,EAAa/V,KAAKgI,OACxB8N,EACK,qBAAKE,MAAOhW,KAAKsV,QAAQ,GAAzB,SACG,cAACW,EAAA,EAAD,CAAaC,aAAcH,EAAYX,KAAMpV,KAAKoV,KAAMe,SAAUnW,KAAK0V,YAAaE,IAAK5V,KAAK4V,YAEnG,CAEH,IAGIQ,EALD,EAEC5R,EAAOxE,KAAKgI,OACZwN,EAASxV,KAAKwV,OACda,EAAY,GAJb,cAOa7R,GAPb,IAOH,2BAAsB,CAAC,IAAdmH,EAAa,QACYyK,GAA7BZ,EAAOxU,cAAc2K,GACtB0K,EAAUjV,KAAK,cAACkV,EAAA,EAASC,KAAV,CAAeC,SAAU7K,EAAK6J,OAAQY,EAAKK,SAAUzW,KAAK0V,YAA1D,SAAwE/J,MATxF,8BAYH0K,EAAUjV,KAAK,cAACkV,EAAA,EAASC,KAAV,CAAeC,SAAU,QAASE,OAAK,EAACV,MAAO,CAAEhE,MAAO,QAEvE8D,EACI,cAACa,EAAA,EAAD,CAAeX,MAAO,CAAEhE,MAAO,GAAI4E,WAAY,GAA/C,SACI,cAACN,EAAA,EAAD,CAAUN,MAAO,CAAEhE,MAAO,KAAOkD,MAAOlV,KAAKwV,OAA7C,SACKa,MAOjB,OACI,8BACI,eAACQ,EAAA,EAAD,CAAKb,MAAO,CAAEc,UAAW,IAAzB,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SAAa,mBAAGhB,MAAOhW,KAAKsV,QAAQ,GAAvB,SAA4BtV,KAAKkV,UAC9C,cAAC6B,EAAA,EAAD,CAAKC,GAAI,KACT,cAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,SAAclB,aAhElC,GAAoCmB,IAAMC,WAuE7BC,GAAc,SAACnC,GAAW,IAAD,EACRiC,IAAMG,SAASpC,EAAMxQ,MADb,mBAC3BqR,EAD2B,KACpBwB,EADoB,KAE9B9C,EAAIS,EAAMT,EACVtR,EAAI+R,EAAMjK,MAEd,OACI,gCACI,uBACA,eAAC8L,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,mBAAGhB,MAAO,CAAEc,UAAW,GAAIF,WAAY,IAAvC,SAA8C5B,EAAME,UAExD,cAAC6B,EAAA,EAAD,CAAKC,GAAI,IACT,cAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,eAACM,GAAA,EAAD,WACI,cAACrB,EAAA,EAAD,CACIL,KAAM,GACN2B,IAAK,GACL1B,MAAOA,EAAM,GACbT,KAAM,GACNe,SAAU,SAAAqB,GACN,IAAMC,EAAM5B,EAAM,GACd5M,WAAWuO,GAAaC,IAG5BJ,EAAS,CAACpO,WAAWuO,GAAYC,IACjClD,EAAEtR,EAAG,CAACgG,WAAWuO,GAAWC,QAGpC,cAACH,GAAA,EAAWI,MAAZ,iBACA,cAACzB,EAAA,EAAD,CACIL,KAAM,GACN2B,IAAK,GACL1B,MAAOA,EAAM,GACbT,KAAM,GACNe,SAAU,SAACqB,GACP,IAAMG,EAAQ9B,EAAM,GAChB8B,EAAQ1O,WAAWuO,KAGvBH,EAAS,CAACM,EAAO1O,WAAWuO,KAC5BjD,EAAEtR,EAAG,CAAC0U,EAAO1O,WAAWuO,iBAM5C,cAACX,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACY,GAAA,EAAD,CACIhC,KAAM,GACN2B,IAAK,GACLM,UAAQ,EACR7B,MAAO,CAAEY,WAAY,GAAIE,UAAW,IACpCjB,MAAOA,EACPM,SAAU,SAAAN,GACNwB,EAASxB,GAETtB,EAAEtR,EAAG4S,cAUpBiC,GAAe,SAAC9C,GAEzB,IAEIvU,EAFA8T,EAAIS,EAAMT,EAFqB,EAGX6C,mBAASpC,EAAMrJ,KAHJ,mBAG9BkK,EAH8B,KAGvBwB,EAHuB,KAO/BU,EAAW/C,EAAM+C,SAPc,cAQhB/C,EAAMgD,WARU,GAQ5BpC,EAR4B,KAQvB2B,EARuB,KAkBnC,OANI9W,EADc,MAAduU,EAAMvU,KACC,KAEAuU,EAAMvU,KAMb,eAACoW,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACiB,EAAA,EAAD,CACIjC,MAAO,CAAEY,WAAY,GAAIE,UAAW,GAAI9E,MAAO,KAC/C6D,MAAOA,EACPD,IAAKA,EACL2B,IAAKA,EACLQ,SAAUA,EACV5B,SAAU,SAAAN,GACNwB,EAASxB,GACTtB,EAAEsB,EAAOpV,QAIrB,cAACsW,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACf,EAAA,EAAD,CACID,MAAO,CAAEY,WAAY,GAAIE,UAAW,EAAGoB,aAAc,EAAGlG,MAAO,GAAIF,OAAQ,IAC3E8D,IAAKA,EACL2B,IAAKA,EACL1B,MAAOA,EACPkC,SAAUA,EACV5B,SAAU,SAAAN,GACNwB,EAASxB,GACTtB,EAAEsB,EAAOb,EAAMvU,eClMjC0X,I,yDAEF,WAAYnD,GAAQ,IAAD,8BACf,gBACKoD,WAAa,CAAC,IAAM,KACzB,EAAK7D,EAAIS,EAAMT,EACf,EAAK5D,iBAAmB,EAAKA,iBAAiBgF,KAAtB,gBACxB,EAAK0C,OAAS,EAAKA,OAAO1C,KAAZ,gBALC,E,6DAQFhK,EAAKZ,GAClB/K,KAAKoY,WAAWrN,GAASkB,SAASN,K,+BAIlC3L,KAAKuU,EAAL,MAAAvU,KAAA,YAAUA,KAAKoY,e,+BAIf,OACI,eAAC9B,EAAA,EAAD,CAAUpB,MAAM,SAASoD,QAAQ,QAAQC,UAAU,YAAYC,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,WAAhF,UAEI,cAAC,GAAD,CAAcjE,EAAGvU,KAAK2Q,iBAAkBsE,OAAQ,CAAC,SAAU,SAAUjN,OAAQhI,KAAKoY,WAAYhD,KAAM,EAAGC,UAAQ,EAC3GC,QAAS,CACL,CAAEoD,YAAa,IACf,CAAE5B,UAAW,GAAIF,WAAY,OAGrC,cAAC+B,EAAA,EAAD,CAAQ3C,MAAO,CAAEhE,MAAO,IAAK4E,WAAY,GAAI8B,YAAa,GAAI5B,UAAW,GAAIoB,aAAc,IAAMU,WAAW,UAAUC,QAAS7Y,KAAKqY,OAApI,6B,GA5BapB,IAAMC,YAkC7B4B,G,kDAEF,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IACD5D,MAAQ4D,EAAM5D,MACnB,EAAK2H,MAAQ,CAAEvD,OAAQ,GACvB,EAAKjB,EAAIS,EAAMT,EAEf,EAAKyE,UAAY,EAAKA,UAAUrD,KAAf,gBANF,E,sDASThK,GACN3L,KAAKiZ,SAAS,CACVzD,OAAQ7J,M,+BAIN,IAAD,OACS3L,KAAK+Y,MACnB,OACI,eAACzC,EAAA,EAAD,CACApB,MAAM,UACNoD,QAAQ,QACRC,UAAU,YACVC,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,aACjBI,WAAW,SACXnC,SAAU,SAACD,GACP,EAAKjC,EAAEiC,IAPX,UAUI,eAACF,EAAA,EAAS4C,KAAV,CAAehE,MAAM,UAArB,UACI,cAACoB,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,sCACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,wCAEJ,eAACF,EAAA,EAAS4C,KAAV,CAAehE,MAAM,kBAArB,UACI,cAACoB,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,2BACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,yBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,4BAEJ,eAACF,EAAA,EAAS4C,KAAV,CAAehE,MAAM,gCAArB,UACI,cAACoB,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,0BACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,wBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,0BACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,EAAzB,2BAEJ,eAACF,EAAA,EAAS4C,KAAV,CAAehE,MAAM,yBAArB,UACI,cAACoB,EAAA,EAASC,KAAV,CAAeC,SAAU,GAAzB,iCACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,GAAzB,oCAEJ,eAACF,EAAA,EAAS4C,KAAV,CAAehE,MAAM,QAArB,UACI,cAACoB,EAAA,EAASC,KAAV,CAAeC,SAAU,GAAzB,kBACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAU,GAAzB,oBAGJ,cAACF,EAAA,EAASC,KAAV,CAAeG,OAAK,EAACV,MAAO,CAAEmD,QAAS,EAAGnH,MAAO,c,GAtDnCiF,IAAMC,WA+D9BkC,G,kDAEF,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IACD5D,MAAQ4D,EAAM5D,MACnB,EAAK2H,MAAQ,CAAEpN,IAAKqJ,EAAM5D,MAAM9J,IAAM,GAEtC,EAAK+R,UAAY,EAAKA,UAAU1D,KAAf,gBALF,E,sDAQThK,GACN3L,KAAKiZ,SAAS,CACVtN,IAAKA,M,+BAIH,IAAD,OACCrE,EAAMtH,KAAK+Y,MAAMpN,IACvB,OACI,eAAC2K,EAAA,EAAD,CAAUpB,MAAM,cAAcoD,QAAQ,QAAQC,UAAU,YAAYC,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,cAArF,UACI,cAACc,EAAA,EAAD,CAAMtD,MAAO,CAAEY,WAAY,GAAIE,UAAW,IAAMyC,OAAO,SAAvD,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,8BACA,cAACC,EAAA,EAAD,CAASnB,UAAU,SAASD,QAAQ,QAAQqB,QACxC,cAACC,EAAA,EAAD,4DADJ,SAKI,cAACnB,EAAA,EAAD,CAAMD,KAAK,kBAAkBxL,KAAK,cAK9C,cAACiL,EAAA,EAAD,CACIrC,IAAK,EACLR,KAAM,EACNmC,IAAK,EACL1B,MAAOvO,EACPuS,WAAS,EACThC,UAAQ,EACR7B,MAAO,CAAEhE,MAAO,IAAK4E,WAAY,GAAI8B,YAAa,GAAIR,aAAc,IACpE/B,SAAU,SAACN,GACP,EAAKzE,MAAM0I,UAAUjE,EAAQ,GAC7B,EAAKwD,UAAUxD,GACf,EAAKzE,MAAMsB,YAInB,8B,GAhDkBuE,IAAMC,WA2KzB6C,G,kDAlHX,WAAY/E,GAAQ,IAAD,8BACf,cAAMA,IA4BVgF,iBAAmB,WACf,EAAK5I,MAAMsB,SACX,EAAKvD,YAAYmC,QACjB,EAAKF,MAAMkB,SAASI,SAChB,EAAKtB,MAAMxB,UACXqK,sBAAsB,EAAKD,mBAhC/B,EAAK5I,MAAQ4D,EAAM5D,MACnB,EAAK8I,UAAYlF,EAAMkF,UACvB,EAAKC,QAAUnF,EAAMmF,QACrB,EAAKpB,MAAQ,CAAEqB,IAAK,EAAGC,YAAY,EAAOzK,UAAU,GACpD,EAAK0K,UAAY,EAAKA,UAAU3E,KAAf,gBACjB,EAAK4E,aAAe,EAAKA,aAAa5E,KAAlB,gBACpB,EAAK6E,iBAAmB,EAAKA,iBAAiB7E,KAAtB,gBAExB,EAAKxG,YAAc6F,EAAM7F,YACzB,EAAKA,YAAYoF,EAAI,EAAK+F,UAE1B,EAAKH,QAAQM,WAAa,WACtB,EAAKD,oBAdM,E,+DAmBfxa,KAAKiZ,SAAS,CACVrJ,UAAW5P,KAAK+Y,MAAMnJ,WAE1B5P,KAAKoR,MAAMoJ,mBACPxa,KAAKoR,MAAMxB,UACX5P,KAAKma,QAAQO,gBAEjB1a,KAAKga,qB,qCAaLha,KAAKiZ,SAAS,CACVoB,YAAara,KAAK+Y,MAAMsB,e,gCAItBD,GACNpa,KAAKiZ,SAAS,CACVmB,IAAKA,EAAIO,QAAQ,O,+BAIf,IAAD,OACCP,EAAMpa,KAAK+Y,MAAMqB,IACjBC,EAAara,KAAK+Y,MAAMsB,WACxBzK,EAAW5P,KAAK+Y,MAAMnJ,SAC5B,OACI,gCACI,cAACgL,EAAA,EAAD,CAAQ5E,MAAO,CAAElE,OAAQ,IAAzB,SACI,cAAC+I,EAAA,EAAD,UACI,eAACA,EAAA,EAAOC,KAAR,WACI,cAACC,EAAA,EAAD,CAAKC,WAAS,EAAd,SACI,eAACrE,EAAA,EAAD,WACI,eAACoE,EAAA,EAAIxE,KAAL,CAAUf,QAAM,EAAhB,kBAAuB4E,KACvB,cAACW,EAAA,EAAIxE,KAAL,CAAUf,OAAQ5F,EAAUiJ,QAAS7Y,KAAKwa,iBAAkB5B,WAAW,SAASJ,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,YAAjG,wBACA,cAACuC,EAAA,EAAIxE,KAAL,CAAUqC,WAAW,SAASb,UAAU,EAAMS,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,gBAA/D,oBACA,cAACuC,EAAA,EAAIxE,KAAL,CAAUsC,QAAS7Y,KAAKua,aAAc3B,WAAW,SAASJ,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,SAA3E,mBACA,cAAC,GAAD,CAAqBpH,MAAOpR,KAAKoR,QACjC,cAAC,GAAD,CAAiBmD,EAAGvU,KAAKka,UAAU,KAEnC,cAAC,GAAD,CAAgB3F,EAAGvU,KAAKka,UAAU,KAClC,cAACa,EAAA,EAAIxE,KAAL,CAAUqC,WAAW,SAASJ,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,kBAAoB/B,SAAUzW,KAAKka,UAAU,GAA5F,kBACA,uBAAOzZ,KAAK,OACR4T,GAAG,aACH2B,MAAO,CAAEiF,QAAS,QAClBC,UAAU,aACVC,OAAO,gBACPhF,SAAU,SAAA1M,GAAC,OAAI,EAAKyQ,UAAU,GAAGzQ,EAAEgJ,OAAO2I,MAAM,OACpD,uBAAOC,IAAI,aAAX,SACI,cAACN,EAAA,EAAIxE,KAAL,CAAUiC,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,gBAA3B,2BAMZ,cAACuC,EAAA,EAAD,CAAKO,UAAQ,EAAb,SACI,oBAAItF,MAAO,CAAEmD,QAAS,IAAtB,8BAKhB,eAACoC,EAAA,EAAD,CACIvO,KAAM,KACNuL,UAAW,QACXiD,KAAMnB,EACNoB,OAAQzb,KAAKua,aACbmB,UAAU,EALd,UAOI,cAACH,EAAA,EAAOX,OAAR,UACI,cAACW,EAAA,EAAOI,MAAR,yCAEJ,eAACJ,EAAA,EAAOT,KAAR,+ZACqZ,uBAAM,uBAD3Z,ofAGuF,uBAAM,uBAH7F,oVAIA,uBAAM,uBACF,mBAAGc,KAAK,+BAA+BnJ,OAAO,SAASoJ,IAAI,sBAA3D,2BACA,uBAAM,uBACN,mBAAGD,KAAK,6CAA6CnJ,OAAO,SAASoJ,IAAI,sBAAzE,gD,GA5GN5E,IAAMC,W,0FCzJlB4E,GAAoB,GACpBC,GAAe,CACjB7T,MAAO,WAEL8T,GAA6B,CAC/B,CAAEhK,MAAO,IAAK4E,WAAY,IAC1B,CAAEE,UAAW,GAAIF,WAAY,KAEpBqF,GAAb,kDAEI,WAAYjH,GAAQ,IAAD,8BACf,gBACK+D,MAAQmD,GAAKnD,MAAM3H,MACxB,EAAKA,MAAQ4D,EAAM5D,MAEnB,EAAK+K,YAAc,EAAKA,YAAYxG,KAAjB,gBACnB,EAAKyG,UAAY,EAAKA,UAAUzG,KAAf,gBACjB,EAAK0G,gBAAkB,EAAKA,gBAAgB1G,KAArB,gBACvB,EAAK2G,gBAAkB,EAAKA,gBAAgB3G,KAArB,gBACvB,EAAK4G,aAAe,EAAKA,aAAa5G,KAAlB,gBACpB,EAAK6G,iBAAmB,EAAKA,iBAAiB7G,KAAtB,gBAVT,EAFvB,6DAgBqBE,EAAOpV,GACpB,IAAIyF,EAASlG,KAAK+Y,MAAM0D,eAAezc,KAAK+Y,MAAMvD,QAAQtP,OAE1D,OAAQzF,GACJ,IAAK,IACDyF,EAAOgN,EAAI2C,EACX,MACJ,IAAK,IACD3P,EAAOxF,EAAImV,EACX,MACJ,IAAK,IACD3P,EAAOoN,EAAIuC,EACX,MACJ,QACItT,IAAMC,MAAM,oCAEpBxC,KAAKoR,MAAMoL,iBAAiBxc,KAAK+Y,MAAMvD,OAAQtP,GAC/ClG,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAM3H,MAAMqL,eAAezc,KAAK+Y,MAAMvD,QAAQtP,OAASA,IAlCpE,qCAsCQ,IAAIsB,GAAUxH,KAAK+Y,MAAM0D,eAAezc,KAAK+Y,MAAMvD,QAAQkH,mBAC3D1c,KAAKiZ,SAAS,CACVyD,mBAAoBlV,IAExB0U,GAAKnD,MAAM3H,MAAMqL,eAAezc,KAAK+Y,MAAMvD,QAAQkH,mBAAqBlV,EACxExH,KAAKoR,MAAMuL,iBAAiB3c,KAAK+Y,MAAMvD,OAAQhO,GAC/CxH,KAAKoR,MAAMsB,WA5CnB,wCAgDQ,IAAIlL,GAAUxH,KAAK+Y,MAAM0D,eAAezc,KAAK+Y,MAAMvD,QAAQoH,mBAC3D5c,KAAKiZ,SAAS,CACV2D,mBAAoBpV,IAExB0U,GAAKnD,MAAM3H,MAAMqL,eAAezc,KAAK+Y,MAAMvD,QAAQoH,mBAAqBpV,EACxExH,KAAKoR,MAAMkL,gBAAgBtc,KAAK+Y,MAAMvD,OAAQhO,GAC9CxH,KAAKoR,MAAMsB,WAtDnB,sCAyDoB/G,EAAKZ,GACjB,IAAI8R,EAAY5T,WAAW0C,GAEvBmR,EAAcZ,GAAKnD,MAAM3H,MAAMqL,eAAezc,KAAK+Y,MAAMvD,QAC7DsH,EAAY5a,WAAWsC,KAAKuG,GAAS8R,EAErC,IAAIE,EAAU/c,KAAK+Y,MAAM0D,eACzBM,EAAQ/c,KAAK+Y,MAAMvD,QAAQtT,WAAWsC,KAAKuG,GAAS8R,EAEpD7c,KAAKiZ,SAAS,CACVwD,eAAgBM,IAGpB/c,KAAKoR,MAAM4L,YAAYhd,KAAK+Y,MAAMvD,OAAQsH,EAAY1U,MAAO0U,EAAY5a,YACzElC,KAAKoR,MAAMsB,SACX1S,KAAKid,UAxEb,8BA4EQ,IAAIha,EAEAA,EADAjD,KAAK+Y,MAAMkE,MAAQ,GACf,EAEAjd,KAAK+Y,MAAMkE,MAEnBjd,KAAKiZ,SACD,CACIgE,QAASha,MApFzB,gCAyFc0I,GACN,IAAK,IAAI1I,EAAI,EAAGA,EAAIjD,KAAK+Y,MAAMpL,KAAK9L,OAAQoB,IACxC,GAA8C,IAA1CjD,KAAK+Y,MAAMpL,KAAK1K,GAAGjC,cAAc2K,GAAY,CAC7C3L,KAAKiZ,SAAS,CACVzD,OAAQvS,IAEZiZ,GAAKnD,MAAM3H,MAAMoE,OAASvS,EAC1B,MAGRjD,KAAKid,UAnGb,kCAsGgBtR,GACR,IAAIzJ,EAAalC,KAAKoR,MAAMnK,cAAc0E,GAC1C3L,KAAKiZ,SACD,CACI7Q,MAAOuD,EACPzJ,WAAYA,IAGpBlC,KAAKid,QACLf,GAAKnD,MAAM3H,MAAMqL,eAAezc,KAAK+Y,MAAMvD,QAAQpN,MAAQuD,EAC3DuQ,GAAKnD,MAAM3H,MAAMqL,eAAezc,KAAK+Y,MAAMvD,QAAQtT,WAAaA,EAChElC,KAAKoR,MAAM4L,YAAYhd,KAAK+Y,MAAMvD,OAAQ7J,EAAKzJ,GAC/ClC,KAAKoR,MAAMsB,WAlHnB,+BAsHQ,IAAMwK,EAAcld,KAAK+Y,MAAM0D,eAAezc,KAAK+Y,MAAMvD,QACnDyH,EAAQjd,KAAK+Y,MAAMkE,MACnB/H,EAAQgI,EAAYhI,MAEpBvH,EAAO3N,KAAK+Y,MAAMpL,KAExB,OACI,gCAGI,cAACwP,GAAA,EAAD,UAAS,wBAAQnH,MAAO+F,GAAf,8BACT,cAAC,GAAD,CAAgBxH,EAAGvU,KAAKoc,UAAW3G,cAAY,EAACP,MAAM,MAAMlN,OAAQ2F,EAAM6H,OAAQN,EAAOI,QAAS0G,KAClG,cAAC,GAAD,CAAgBzH,EAAGvU,KAAKmc,YAAajH,MAAM,QAAQlN,OAT5C,CAAC,YAAa,SAAU,iBAAkB,iBAAkB,aAAc,WAAY,SAS1BwN,OAAQ0H,EAAY9U,MAAOkN,QAAS0G,KACvG,cAAC,GAAD,CAAczH,EAAGvU,KAAKqc,gBAAiBpH,OAAQiI,EAAYhb,WAAWqC,MAAOyD,OAAQkV,EAAYhb,WAAWsC,KAAM4Q,KAAM,GAAKC,UAAQ,EAACC,QAAS0G,KAC/I,uBACA,cAACmB,GAAA,EAAD,UAAS,wBAAQnH,MAAO+F,GAAf,2BAET,eAAClF,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,cAACC,GAAA,EAAD,CAAUC,QAASJ,EAAYN,mBAAoB/D,QAAS7Y,KAAKsc,gBAAjE,oCACA,cAACe,GAAA,EAAD,CAAUC,QAASJ,EAAYR,mBAAoB7D,QAAS7Y,KAAKuc,aAAjE,oCACA,6BAIR,mBAAGvG,MAAO,CAAEY,WAAYkF,IAAxB,mBACA,cAAC,GAAD,CAAcvH,EAAGvU,KAAKwc,iBAAkBzE,SAAUmF,EAAYR,mBAAoB1E,WAAY,CAAC,EAAG,KAAMrM,IAAKuR,EAAYhX,OAAOgN,EAAGzS,KAAM,MACzI,cAAC,GAAD,CAAc8T,EAAGvU,KAAKwc,iBAAkBzE,SAAUmF,EAAYR,mBAAoB1E,WAAY,CAAC,EAAG,KAAMrM,IAAKuR,EAAYhX,OAAOxF,EAAGD,KAAM,MACzI,cAAC,GAAD,CAAc8T,EAAGvU,KAAKwc,iBAAkBzE,SAAUmF,EAAYR,mBAAoB1E,WAAY,CAAC,EAAG,KAAMrM,IAAKuR,EAAYhX,OAAOoN,EAAG7S,KAAM,QAtBnIwc,OA7HtB,GAAmChG,IAAMC,WAyJ5BqG,GAAb,kDAEI,WAAYvI,GAAQ,IAAD,8BACf,gBACK+D,MAAQmD,GAAKnD,MAAM5H,OACxB,EAAKC,MAAQ4D,EAAM5D,MACnB,EAAKoM,WAAa,EAAKA,WAAW7H,KAAhB,gBAClB,EAAK8H,aAAe,EAAKA,aAAa9H,KAAlB,gBACpB,EAAKjC,eAAiB,EAAKA,eAAeiC,KAApB,gBACtB,EAAK+H,WAAa,EAAKA,WAAW/H,KAAhB,gBAPH,EAFvB,uDAYeE,GACP7V,KAAKiZ,SAAS,CACVhG,KAAM4C,IAEV7V,KAAKoR,MAAMuM,iBAAiB9H,GAC5B7V,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAM5H,OAAO8B,KAAO4C,IAlBjC,iCAoBeA,GACP7V,KAAKiZ,SAAS,CACVxY,KAAMoV,IAEVqG,GAAKnD,MAAM5H,OAAO1Q,KAAOoV,EACzB7V,KAAKoR,MAAMR,UAAUiF,GACR,gBAATA,EACA7V,KAAK0d,WAAW,IAGhB1d,KAAK0d,WAAW,KA9B5B,qCAmCmB7H,EAAOpV,GAClB,IAAI8E,EAAWvF,KAAK+Y,MAAMxT,SAE1B,GAAa+F,KAATuK,GAAyB,MAATA,EAChB,OAAQpV,GACJ,KAAK,EACD8E,EAAS2N,EAAIjK,WAAW4M,GACxB,MACJ,KAAK,EACDtQ,EAAS6N,MAAQnK,WAAW4M,GAC5B,MACJ,KAAK,EACDtQ,EAAS4N,IAAMlK,WAAW4M,GAC1B,MACJ,QAEI,YADAtT,IAAMC,MAAM,2CAKxBxC,KAAKoR,MAAMwM,qBAAqBrY,GAChCvF,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAM5H,OAAO5L,SAAWA,IAzDrC,mCA4DiBsQ,EAAOpV,GAChB,IAAIiQ,EAAS1Q,KAAK+Y,MAAMrI,OAExB,GAAapF,KAATuK,GAAyB,MAATA,EAChB,OAAQpV,GACJ,KAAK,EACDiQ,EAAO1O,EAAIiH,WAAW4M,GACtB,MACJ,KAAK,EACDnF,EAAOjN,EAAIwF,WAAW4M,GACtB,MACJ,KAAK,EACDnF,EAAO3K,EAAIkD,WAAW4M,GACtB,MACJ,QAEI,YADAtT,IAAMC,MAAM,mCAKxBxC,KAAKoR,MAAMyM,aAAanN,GACxB1Q,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAM5H,OAAOT,OAASA,IAlFnC,+BAuFQ,IAAMlB,EAAaxP,KAAK+Y,MAAMtY,KACxBwS,EAAOjT,KAAK+Y,MAAM9F,KAClBvC,EAAS,CAAC1Q,KAAK+Y,MAAMrI,OAAO1O,EAAGhC,KAAK+Y,MAAMrI,OAAOjN,EAAGzD,KAAK+Y,MAAMrI,OAAO3K,GACtEsM,EAAiB,CAACrS,KAAK+Y,MAAMxT,SAAS2N,EAAGlT,KAAK+Y,MAAMxT,SAAS6N,MAAOpT,KAAK+Y,MAAMxT,SAAS4N,KAG9F,OACI,gCAEI,eAAC0D,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SAEI,cAAC5D,EAAA,EAAD,CAAWsE,UAAU,YAArB,SACI,eAACC,GAAA,EAAD,CAAY1X,KAAK,YAAYwP,MAAOrG,EAAY2G,SAAUnW,KAAKwd,WAA/D,UACI,4BAAG,uCACH,cAACQ,GAAA,EAAD,CAAOnI,MAAM,cAAb,0BACA,cAACmI,GAAA,EAAD,CAAOnI,MAAM,eAAb,qCAOhB,eAACoI,GAAA,EAAD,CAAMC,OAAK,EAAX,UAEI,eAACrH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,uBACA,4BAAG,kDAGX,cAAC,GAAD,CAAcnI,OAAQ,CAAC,IAAK,QAAS,OAAQjN,OAAQqK,EAAgBkC,EAAGvU,KAAK0T,eAAgB0B,KAAM,GAAKE,QAAS0G,KACjH,eAACnF,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,uBACA,4BAAG,+CAGX,cAAC,GAAD,CAA+BpF,WAAY,CAAC,EAAG,KAAMrM,IAAKsH,EAAMsB,EAAGvU,KAAK0d,YAArDlO,GACnB,eAACqH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,uBACA,4BAAG,iDAGX,cAAC,GAAD,CAAcnI,OAAQ,CAAC,IAAK,IAAK,KAAMjN,OAAQ0I,EAAQ6D,EAAGvU,KAAKyd,aAAcrI,KAAM,GAAKE,QAAS0G,QAGrG,8BA3IhB,GAAmC/E,IAAMC,WAmJ5BiH,GAAb,kDAEI,WAAYnJ,GAAQ,IAAD,8BACf,gBACK+D,MAAQmD,GAAKnD,MAAMqF,QACxB,EAAKhN,MAAQ4D,EAAM5D,MAEnB,EAAKiN,mBAAqB,EAAKA,mBAAmB1I,KAAxB,gBAC1B,EAAK2I,cAAgB,EAAKA,cAAc3I,KAAnB,gBACrB,EAAK4I,cAAgB,EAAKA,cAAc5I,KAAnB,gBACrB,EAAK6I,cAAgB,EAAKA,cAAc7I,KAAnB,gBACrB,EAAK8I,cAAgB,EAAKA,cAAc9I,KAAnB,gBACrB,EAAK+I,aAAe,EAAKA,aAAa/I,KAAlB,gBAVL,EAFvB,iEAgBQ,IAAInO,GAAUxH,KAAK+Y,MAAMvS,iBACzBxG,KAAKiZ,SACD,CACIzS,iBAAkBgB,IAG1B0U,GAAKnD,MAAMqF,QAAQ5X,iBAAmBgB,EACtCxH,KAAKoR,MAAMQ,uBAAuBpK,GAClCxH,KAAKoR,MAAMsB,WAxBnB,oCA2BkBiM,GACV3e,KAAKiZ,SACD,CACI0F,QAASA,IAGjBzC,GAAKnD,MAAMqF,QAAQO,QAAUA,IAjCrC,sCAqCQ,IAAIA,EAAU3e,KAAK+Y,MAAM4F,QACrBnX,GAAUmX,EAAQ,GACtBA,EAAQ,GAAKnX,EACbxH,KAAKye,cAAcE,GACnB3e,KAAKoR,MAAMwN,aAAa,EAAGpX,GAC3BxH,KAAKoR,MAAMsB,WA1CnB,sCA8CQ,IAAIiM,EAAU3e,KAAK+Y,MAAM4F,QACrBnX,GAAUmX,EAAQ,GACtBA,EAAQ,GAAKnX,EACbxH,KAAKye,cAAcE,GACnB3e,KAAKoR,MAAMwN,aAAa,EAAGpX,GAC3BxH,KAAKoR,MAAMsB,WAnDnB,sCAuDQ,IAAIiM,EAAU3e,KAAK+Y,MAAM4F,QACrBnX,GAAUmX,EAAQ,GACtBA,EAAQ,GAAKnX,EACbxH,KAAKye,cAAcE,GACnB3e,KAAKoR,MAAMwN,aAAa,EAAGpX,GAC3BxH,KAAKoR,MAAMsB,WA5DnB,mCA+DiBzP,EAAGuB,GACZ,OAAQvB,GACJ,KAAK,EACDiZ,GAAKnD,MAAMqF,QAAQpc,EAAIwC,EACvB,MACJ,KAAK,EACD0X,GAAKnD,MAAMqF,QAAQ3a,EAAIe,EACvB,MACJ,KAAK,EACD0X,GAAKnD,MAAMqF,QAAQrY,EAAIvB,EACvB,MACJ,QACIjC,IAAMC,MAAM,wCAGpBxC,KAAKoR,MAAMsN,aAAazb,EAAGuB,GAC3BxE,KAAKoR,MAAMsB,WA/EnB,+BAkFQ,IAAMqG,EAAQ/Y,KAAK+Y,MACnB,OACI,gCACI,uBACA,cAACkF,GAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACrH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAACC,GAAA,EAAD,CAAUtF,UAAU,EAAMuF,QAASvE,EAAMvS,iBAAkBqS,QAAS7Y,KAAKqe,mBAAzE,wCAKZ,cAAC,GAAD,CAAanJ,MAAM,OAAOX,EAAGvU,KAAK0e,aAAc3T,MAAO,EAAGvG,KAAMuU,EAAM/W,IACtE,uBACA,cAACic,GAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACrH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAACC,GAAA,EAAD,CAAUC,QAASvE,EAAM4F,QAAQ,GAAI9F,QAAS7Y,KAAKse,cAAnD,iCAIZ,cAAC,GAAD,CAAapJ,MAAM,OAAOX,EAAGvU,KAAK0e,aAAc3T,MAAO,EAAGvG,KAAMuU,EAAMtV,IACtE,uBACA,cAACwa,GAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACrH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAACC,GAAA,EAAD,CAAUC,QAASvE,EAAM4F,QAAQ,GAAI9F,QAAS7Y,KAAKue,cAAnD,iCAIZ,cAAC,GAAD,CAAarJ,MAAM,OAAOX,EAAGvU,KAAK0e,aAAc3T,MAAO,EAAGvG,KAAMuU,EAAMhT,IACtE,uBACA,cAACkY,GAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACrH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAACC,GAAA,EAAD,CAAUC,QAASvE,EAAM4F,QAAQ,GAAI9F,QAAS7Y,KAAKwe,cAAnD,wCAzH5B,GAAoCvH,IAAMC,WAmI7B2H,GAAsB,SAAC,GAA0B,IAAxBrJ,EAAuB,EAAvBA,OAAQiB,EAAe,EAAfA,SAC1C,OACI,eAACsE,EAAA,EAAD,CAAK+D,UAAWtJ,EAAQiB,SAAUA,EAAUT,MAAO,CAAE+I,OAAQ,GAAI/M,MAAO,KAAOgN,WAAS,EAACpG,WAAW,OAApG,UACI,cAACmC,EAAA,EAAIxE,KAAL,CAAUC,SAAS,QAAnB,mBACA,cAACuE,EAAA,EAAIxE,KAAL,CAAUC,SAAS,cAAnB,6BAKCyI,GAAb,kDAEI,WAAYjK,GAAQ,IAAD,8BACf,gBACK+D,MAAQmD,GAAKnD,MAAMmG,WACxB,EAAK9N,MAAQ4D,EAAM5D,MACnB,EAAK6L,MAAQ,EACb,EAAKkC,aAAe,EAAKA,aAAaxJ,KAAlB,gBACpB,EAAKzG,aAAe,EAAKA,aAAayG,KAAlB,gBACpB,EAAKjC,eAAiB,EAAKA,eAAeiC,KAApB,gBACtB,EAAKyJ,mBAAqB,EAAKA,mBAAmBzJ,KAAxB,gBAC1B,EAAKiJ,aAAe,EAAKA,aAAajJ,KAAlB,gBATL,EAFvB,2DAeyD,IAA7C3V,KAAK+Y,MAAMvD,OAAOxU,cAAc,SAChChB,KAAKiZ,SAASiD,GAAKnD,MAAMsG,kBAEzBrf,KAAKiZ,SAASiD,GAAKnD,MAAMmG,YAEzBlf,KAAKid,MAAQ,IACbjd,KAAKid,MAAQ,GAGjBjd,KAAKiZ,SAAS,CAAEgE,QAASjd,KAAKid,UAxBtC,qCA4BQ,IAAI3Q,GAAUtM,KAAK+Y,MAAMzM,OACzBtM,KAAKiZ,SAAS,CACV3M,OAAQA,IAGqC,IAA7CtM,KAAK+Y,MAAMvD,OAAOxU,cAAc,UAChCkb,GAAKnD,MAAMmG,WAAW5S,OAASA,EAC/BtM,KAAKoR,MAAMkO,kBAAkB,EAAGhT,GAChCtM,KAAKoR,MAAMsB,WAEXwJ,GAAKnD,MAAMsG,iBAAiB/S,OAASA,EACrCtM,KAAKoR,MAAMkO,kBAAkB,EAAGhT,GAChCtM,KAAKoR,MAAMsB,YAxCvB,2CA6CQ,IAIIvG,EAJAoH,GAAWvT,KAAK+Y,MAAMxF,QAC1BvT,KAAKiZ,SAAS,CACV1F,QAASA,IAGoC,IAA7CvT,KAAK+Y,MAAMvD,OAAOxU,cAAc,UAChCkb,GAAKnD,MAAMmG,WAAW3L,QAAUA,EAChCpH,EAAY+P,GAAKnD,MAAMmG,WAAWhZ,OAAOjD,IAEzCiZ,GAAKnD,MAAMsG,iBAAiB9L,QAAUA,EACtCpH,EAAY+P,GAAKnD,MAAMsG,iBAAiBnZ,OAAOjD,GAG/CsQ,EACAvT,KAAKkP,aAAa/C,EAAW,KAE7BnM,KAAKkP,aAAa,EAAG,KAEzBlP,KAAKiZ,SAAS,CAAEgE,QAASjd,KAAKid,QAEmB,IAA7Cjd,KAAK+Y,MAAMvD,OAAOxU,cAAc,SAChCkb,GAAKnD,MAAMmG,WAAWhZ,OAAOjD,EAAIkJ,EAEjC+P,GAAKnD,MAAMsG,iBAAiBnZ,OAAOjD,EAAIkJ,IApEnD,mCAwEiB0J,EAAOpV,GAChB,IAAIyF,EAASlG,KAAK+Y,MAAM7S,OAExB,OAAQzF,GACJ,IAAK,IACDyF,EAAOgN,EAAI2C,EACX,MACJ,IAAK,IACD3P,EAAOxF,EAAImV,EACX,MACJ,IAAK,IACD3P,EAAOoN,EAAIuC,EACX,MACJ,IAAK,IACD3P,EAAOjD,EAAI4S,EACX,MACJ,QACItT,IAAMC,MAAM,oCAG6B,IAA7CxC,KAAK+Y,MAAMvD,OAAOxU,cAAc,UAChChB,KAAKoR,MAAMmO,YAAY,EAAGrZ,GAC1BgW,GAAKnD,MAAMmG,WAAWhZ,OAASA,IAE/BlG,KAAKoR,MAAMmO,YAAY,EAAGrZ,GAC1BgW,GAAKnD,MAAMsG,iBAAiBnZ,OAASA,GAEzClG,KAAKoR,MAAMsB,WAnGnB,qCAqGmBmD,EAAOpV,GAClB,IAAI8E,EAAWvF,KAAK+Y,MAAMxT,SAE1B,OAAQ9E,GACJ,IAAK,IACD8E,EAASvD,EAAI6T,EACb,MACJ,IAAK,IACDtQ,EAAS9B,EAAIoS,EACb,MACJ,IAAK,IACDtQ,EAASQ,EAAI8P,EACb,MACJ,QACItT,IAAMC,MAAM,yCAG6B,IAA7CxC,KAAK+Y,MAAMvD,OAAOxU,cAAc,UAChChB,KAAKoR,MAAMoO,oBAAoB,EAAGja,GAClC2W,GAAKnD,MAAMmG,WAAW3Z,SAAWA,IAEjCvF,KAAKoR,MAAMoO,oBAAoB,EAAGja,GAClC2W,GAAKnD,MAAMsG,iBAAiB9Z,SAAWA,GAE3CvF,KAAKoR,MAAMsB,WA7HnB,+BAiIQ,IAAM8C,EAASxV,KAAK+Y,MAAMvD,OACpBiK,EAAazf,KAAK+Y,MACxB,OACI,gCACI,uBACA,cAAC,GAAD,CAAqBvD,OAAQA,EAAQiB,SAAUzW,KAAKmf,eACpD,uBACA,cAAClB,GAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACrH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,eAACC,GAAA,EAAD,CAAUC,QAASmC,EAAWlM,QAASsF,QAAS7Y,KAAKof,mBAArD,cAA0E,8CAA1E,OACA,eAAC/B,GAAA,EAAD,CAAUC,QAASmC,EAAWnT,OAAQuM,QAAS7Y,KAAK4e,aAApD,cAAmE,kDAAnE,OACA,+BAIZ,mBAAG5I,MAAO,CAAEY,WAAYkF,IAAxB,mBACA,cAAC,GAAD,CAAc/D,UAAW0H,EAAWlM,QAASyE,WAAY,CAAC,EAAG,KAAMrM,IAAK8T,EAAWvZ,OAAOgN,EAAGqB,EAAGvU,KAAKkP,aAAczO,KAAM,MACzH,cAAC,GAAD,CAAcsX,UAAW0H,EAAWlM,QAASyE,WAAY,CAAC,EAAG,KAAMrM,IAAK8T,EAAWvZ,OAAOxF,EAAG6T,EAAGvU,KAAKkP,aAAczO,KAAM,MACzH,cAAC,GAAD,CAAcsX,UAAW0H,EAAWlM,QAASyE,WAAY,CAAC,EAAG,KAAMrM,IAAK8T,EAAWvZ,OAAOoN,EAAGiB,EAAGvU,KAAKkP,aAAczO,KAAM,MACzH,mBAAGuV,MAAO,CAAEY,WAAYkF,IAAxB,yBACA,cAAC,GAAD,CAAc/D,UAAW0H,EAAWlM,QAASyE,WAAY,CAAC,EAAG,KAAMrM,IAAK8T,EAAWvZ,OAAOjD,EAAGsR,EAAGvU,KAAKkP,aAAczO,KAAM,MACzH,mBAAGuV,MAAO,CAAEY,WAAYkF,IAAxB,4BACA,cAAC,GAAD,CAAc/D,UAAW0H,EAAWlM,QAASyE,WAAY,EAAE,GAAI,IAAKrM,IAAK8T,EAAWla,SAASvD,EAAGuS,EAAGvU,KAAK0T,eAAgBjT,KAAM,MAC9H,cAAC,GAAD,CAAcsX,UAAW0H,EAAWlM,QAASyE,WAAY,EAAE,GAAI,IAAKrM,IAAK8T,EAAWla,SAAS9B,EAAG8Q,EAAGvU,KAAK0T,eAAgBjT,KAAM,MAC9H,cAAC,GAAD,CAAcsX,UAAW0H,EAAWlM,QAASyE,WAAY,EAAE,GAAI,IAAKrM,IAAK8T,EAAWla,SAASQ,EAAGwO,EAAGvU,KAAK0T,eAAgBjT,KAAM,QAvBxHgf,EAAWxC,WApIjC,GAA4ChG,IAAMC,WAiKrCwI,GAAb,kDACI,WAAY1K,GAAQ,IAAD,8BACf,gBAEK+D,MAAQmD,GAAKnD,MAAM4G,aAExB,EAAKvO,MAAQ4D,EAAM5D,MAEnB,EAAKwO,yBAA2B,EAAKA,yBAAyBjK,KAA9B,gBAChC,EAAKkK,uBAAyB,EAAKA,uBAAuBlK,KAA5B,gBARf,EADvB,qEAW6BE,EAAOpV,GAC5B,IAAIyF,EAASlG,KAAK+Y,MAAM+G,mBAExB,OAAQrf,GACJ,IAAK,IACDyF,EAAOgN,EAAI2C,EACX,MACJ,IAAK,IACD3P,EAAOxF,EAAImV,EACX,MACJ,IAAK,IACD3P,EAAOoN,EAAIuC,EACX,MACJ,IAAK,IACD3P,EAAOjD,EAAI4S,EACX,MACJ,QACItT,IAAMC,MAAM,oCAEpBxC,KAAKoR,MAAMmO,YAAY,EAAGrZ,GAC1BlG,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAM4G,aAAaG,mBAAqB5Z,IAhCrD,6CAkC2B2P,EAAOpV,GAC1B,IAAIyF,EAASlG,KAAK+Y,MAAMgH,iBAExB,OAAQtf,GACJ,IAAK,IACDyF,EAAOgN,EAAI2C,EACX,MACJ,IAAK,IACD3P,EAAOxF,EAAImV,EACX,MACJ,IAAK,IACD3P,EAAOoN,EAAIuC,EACX,MACJ,QACItT,IAAMC,MAAM,oCAEpBxC,KAAKoR,MAAM4O,SAAS9Z,GACpBlG,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAM4G,aAAaI,iBAAmB7Z,IApDnD,+BAuDQ,IAAM4Z,EAAqB9f,KAAK+Y,MAAM+G,mBAChCC,EAAmB/f,KAAK+Y,MAAMgH,iBACpC,OACI,gCACI,cAAC5C,GAAA,EAAD,UAAS,wBAAQnH,MAAO+F,GAAf,+BACT,mBAAG/F,MAAO,CAAEY,WAAYkF,IAAxB,mBACA,cAAC,GAAD,CAAc/D,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKmU,EAAmB5M,EAAGqB,EAAGvU,KAAK4f,yBAA0Bnf,KAAM,MACxH,cAAC,GAAD,CAAcsX,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKmU,EAAmBpf,EAAG6T,EAAGvU,KAAK4f,yBAA0Bnf,KAAM,MACxH,cAAC,GAAD,CAAcsX,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKmU,EAAmBxM,EAAGiB,EAAGvU,KAAK4f,yBAA0Bnf,KAAM,MACxH,mBAAGuV,MAAO,CAAEY,WAAYkF,IAAxB,yBACA,cAAC,GAAD,CAAc/D,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKmU,EAAmB7c,EAAGsR,EAAGvU,KAAK4f,yBAA0Bnf,KAAM,MACxH,cAAC0c,GAAA,EAAD,UAAS,wBAAQnH,MAAO+F,GAAf,kCACT,mBAAG/F,MAAO,CAAEY,WAAYkF,IAAxB,mBACA,cAAC,GAAD,CAAc/D,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKoU,EAAiB7M,EAAGqB,EAAGvU,KAAK6f,uBAAwBpf,KAAM,MACpH,cAAC,GAAD,CAAcsX,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKoU,EAAiBrf,EAAG6T,EAAGvU,KAAK6f,uBAAwBpf,KAAM,MACpH,cAAC,GAAD,CAAcsX,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKoU,EAAiBzM,EAAGiB,EAAGvU,KAAK6f,uBAAwBpf,KAAM,aAtEpI,GAAyCwW,IAAMC,WA4ElC+I,GAAb,kDACI,WAAYjL,GAAQ,IAAD,8BACf,gBACK+D,MAAQmD,GAAKnD,MAAMmH,UAExB,EAAK9O,MAAQ4D,EAAM5D,MACnB,EAAK+O,2BAA6B,EAAKA,2BAA2BxK,KAAhC,gBAClC,EAAKwG,YAAc,EAAKA,YAAYxG,KAAjB,gBACnB,EAAK5B,WAAa,EAAKA,WAAW4B,KAAhB,gBAClB,EAAK7B,WAAa,EAAKA,WAAW6B,KAAhB,gBAClB,EAAKzG,aAAe,EAAKA,aAAayG,KAAlB,gBACpB,EAAKyK,eAAiB,EAAKA,eAAezK,KAApB,gBACtB,EAAK1B,kBAAoB,EAAKA,kBAAkB0B,KAAvB,gBAXV,EADvB,yDAeiBE,EAAOpV,GAChB,IAAIqH,EAAM9H,KAAK+Y,MAAMsH,WAErB,OAAQ5f,GACJ,IAAK,IACDqH,EAAIoL,EAAI2C,EACR,MACJ,IAAK,IACD/N,EAAIpH,EAAImV,EACR,MACJ,IAAK,IACD/N,EAAIwL,EAAIuC,EACR,MACJ,QACItT,IAAMC,MAAM,oCAEpBxC,KAAKoR,MAAMkP,sBAAsBxY,GACjC9H,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAMmH,UAAUG,WAAavY,IAjC1C,qCAmCmB+N,GACX7V,KAAKoR,MAAMgP,eAAevK,GAC1B7V,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAMmH,UAAUlT,KAAO6I,IAtCpC,mDAyCQ,IAAIrO,GAAU0U,GAAKnD,MAAMmH,UAAU5Q,qBACnCtP,KAAKiZ,SAAS,CACV3J,qBAAsB9H,IAE1B0U,GAAKnD,MAAMmH,UAAU5Q,qBAAuB9H,EAC5CxH,KAAKoR,MAAM4C,oBAAoBhU,KAAK+Y,MAAMwH,YAAa/Y,GACvDxH,KAAKoR,MAAMsB,WA/CnB,kCAiDgBmD,GACR7V,KAAKiZ,SAAS,CACVsH,YAAa1K,IAEjBqG,GAAKnD,MAAMmH,UAAUK,YAAc1K,EACnC7V,KAAKoR,MAAM4C,oBAAoB6B,EAAO7V,KAAK+Y,MAAMzJ,sBACjDtP,KAAKoR,MAAMsB,WAvDnB,0CA0DQ1S,KAAKiZ,SAAS,CACV9L,aAAcnN,KAAK+Y,MAAM5L,cAE7BnN,KAAKoR,MAAMoP,wBACXxgB,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAMmH,UAAU/S,aAAe+O,GAAKnD,MAAMmH,UAAU/S,cA/DjE,mCAkEQnN,KAAKiZ,SAAS,CACVwH,UAAWzgB,KAAK+Y,MAAM0H,WAE1BzgB,KAAKoR,MAAM2C,aACX/T,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAMmH,UAAUO,UAAYvE,GAAKnD,MAAMmH,UAAUO,WAvE9D,mCA0EQzgB,KAAKiZ,SAAS,CACVyH,UAAW1gB,KAAK+Y,MAAM2H,WAE1B1gB,KAAKoR,MAAM0C,aACX9T,KAAKoR,MAAMsB,SACXwJ,GAAKnD,MAAMmH,UAAUQ,UAAYxE,GAAKnD,MAAMmH,UAAUQ,WA/E9D,+BAmFQ,IAAMnN,EAAUvT,KAAK+Y,MAAMzJ,qBACrBiR,EAAcvgB,KAAK+Y,MAAMwH,YACzBE,EAAWzgB,KAAK+Y,MAAM0H,SACtBC,EAAW1gB,KAAK+Y,MAAM2H,SACtBxa,EAASlG,KAAK+Y,MAAMsH,WACpBrT,EAAOhN,KAAK+Y,MAAM/L,KAClBG,EAAcnN,KAAK+Y,MAAM5L,YAC/B,OACI,gCAEI,eAAC8Q,GAAA,EAAD,CAAMC,OAAK,EAAX,UACI,eAACrH,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,uBACA,4BAAG,yDAGX,eAACvG,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAACC,GAAA,EAAD,CAAUrH,MAAO,CAAEY,WAAY,IAAM0G,QAAS/J,EAASsF,QAAS7Y,KAAKmgB,2BAArE,0BAGR,eAACtJ,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAAC5D,EAAA,EAAD,CAAWsE,UAAU,YAArB,SACI,eAACC,GAAA,EAAD,CAAY1X,KAAK,YAAYwP,MAAO0K,EAAapK,SAAUnW,KAAKmc,YAAhE,UACI,cAAC6B,GAAA,EAAD,CAAOjG,UAAWxE,EAASsC,MAAM,MAAjC,kBACA,cAACmI,GAAA,EAAD,CAAOjG,UAAWxE,EAASsC,MAAM,SAAjC,qBAEA,cAACmI,GAAA,EAAD,CAAOjG,UAAU,EAAMlC,MAAM,WAA7B,iCAMhB,eAACgB,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,uBACA,4BAAG,+CAGX,eAACvG,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAACC,GAAA,EAAD,CAAUrH,MAAO,CAAEY,WAAY,IAAM0G,QAASmD,EAAU5H,QAAS7Y,KAAK+T,WAAtE,wBAKR,eAAC8C,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SAEI,cAACC,GAAA,EAAD,CAAUrH,MAAO,CAAEY,WAAY,IAAM0G,QAASnQ,EAAa0L,QAAS7Y,KAAKiU,kBAAzE,6BAIJ,cAAC8C,EAAA,EAAD,CAAKqG,GAAI,EAAT,SACI,cAAC1D,EAAA,EAAD,CAASnB,UAAU,SAASD,QAAQ,QAAQqB,QACxC,eAACC,EAAA,EAAD,sBACY,uBADZ,cAC6B,uBAD7B,eADJ,SAKI,cAACnB,EAAA,EAAD,CAAMzC,MAAO,CAACc,UAAW,GAAG0B,KAAK,kBAAkBxL,KAAK,cAQpE,eAAC6J,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,eAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,UACI,uBACA,4BAAG,+CAGX,eAACvG,EAAA,EAAD,CAAKqE,UAAU,YAAf,UACI,cAACnE,EAAA,EAAD,CAAKqG,GAAI,IACT,cAACrG,EAAA,EAAD,CAAKqG,GAAI,GAAT,SACI,cAACC,GAAA,EAAD,CAAUrH,MAAO,CAAEY,WAAY,IAAM0G,QAASoD,EAAU7H,QAAS7Y,KAAK8T,WAAtE,2BAIZ,uBAEA,mBAAGkC,MAAO,CAAEY,WAAYkF,IAAxB,oBACA,cAAC,GAAD,CAAc/D,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKqB,EAAMuH,EAAGvU,KAAKogB,iBACxE,mBAAGpK,MAAO,CAAEY,WAAYkF,IAAxB,mBACA,cAAC,GAAD,CAAc/D,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKzF,EAAOgN,EAAGqB,EAAGvU,KAAKkP,aAAczO,KAAM,MAChG,cAAC,GAAD,CAAcsX,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKzF,EAAOxF,EAAG6T,EAAGvU,KAAKkP,aAAczO,KAAM,MAChG,cAAC,GAAD,CAAcsX,UAAU,EAAOC,WAAY,CAAC,EAAG,KAAMrM,IAAKzF,EAAOoN,EAAGiB,EAAGvU,KAAKkP,aAAczO,KAAM,MAGhG,8BAtLhB,GAAsCwW,IAAMC,WC7qBtCyJ,GAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQzK,EAAe,EAAfA,SACzB,OACI,cAAC0E,EAAA,EAAD,CAAQjC,WAAW,SAASsC,UAAU,aAAtC,SACI,cAACL,EAAA,EAAOC,KAAR,UACI,cAACC,EAAA,EAAD,CAAKC,WAAS,EAAd,SACI,cAAC6F,GAAA,EAAD,CACIC,QAAM,EACN9K,MAAO,CAAE+K,UAAW,SAAUhC,OAAQ,IACtClG,QAAS1C,EACTyC,WAAW,UACXJ,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAMoI,EAAS,aAAe,yBAO5DI,GAAe,CAAEjC,OAAQ,KAE3BkC,GAAgB1Q,OAAOwB,YAAc,GAEnCmP,GAAY,SAAC,GAAoC,IAAlC1L,EAAiC,EAAjCA,OAAQiB,EAAyB,EAAzBA,SAAazB,EAAY,sCAClD,OACI,8BACI,eAAC+F,EAAA,EAAD,6BAAS/F,GAAT,IAAgB8J,UAAWtJ,EAAQiB,SAAUA,EAAUT,MAAO,CAAEmL,gBAAiB,UAAWrP,OAAQmP,IAApG,UACI,cAAClG,EAAA,EAAIxE,KAAL,CAAUrB,MAAM,SAASkM,SAAO,EAAC5K,SAAS,SAASgC,KAAM,cAACC,EAAA,EAAD,CAAMzC,MAAOgL,GAAchU,KAAK,KAAKwL,KAAK,aAGnG,cAACuC,EAAA,EAAIxE,KAAL,CAAUC,SAAS,SAASgC,KAAM,cAACC,EAAA,EAAD,CAAMzC,MAAOgL,GAAchU,KAAK,KAAKwL,KAAK,UAG5E,cAACuC,EAAA,EAAIxE,KAAL,CAAUC,SAAS,gBAAgBgC,KAAM,cAACC,EAAA,EAAD,CAAMzC,MAAOgL,GAAchU,KAAK,KAAKwL,KAAK,YAGnF,cAACuC,EAAA,EAAIxE,KAAL,CAAUC,SAAS,iBAAiBgC,KAAM,cAACC,EAAA,EAAD,CAAMzC,MAAOgL,GAAchU,KAAK,KAAKwL,KAAK,eAGpF,cAACuC,EAAA,EAAIxE,KAAL,CAAUC,SAAS,UAAUgC,KAAM,cAACC,EAAA,EAAD,CAAMzC,MAAOgL,GAAchU,KAAK,KAAKwL,KAAK,UAG7E,cAACuC,EAAA,EAAIxE,KAAL,CAAUC,SAAS,YAAYgC,KAAM,cAACC,EAAA,EAAD,CAAMzC,MAAOgL,GAAchU,KAAK,KAAKwL,KAAK,kBAQzF6I,GAAc,SAAC,GAAyC,IAAvC7L,EAAsC,EAAtCA,OAAQoL,EAA8B,EAA9BA,OAAQzK,EAAsB,EAAtBA,SAAU/E,EAAY,EAAZA,MAEzCkQ,EAAc,GAsBlB,GApBKV,EAGDU,EAAYlgB,KACR,qBAAK4U,MAAO,CAAEmL,gBAAiB,WAA/B,SACI,cAACpG,EAAA,EAAD,UACI,eAACF,EAAA,EAAD,CAAQjC,WAAW,SAAnB,UACI,cAACmC,EAAA,EAAD,CAAKO,UAAQ,EAAb,SACI,oBAAItF,MAAO,CAAEc,UAAW,GAAIF,WAAY,IAAxC,SAA+CpB,MAEnD,cAACuF,EAAA,EAAD,CAAKC,WAAS,EAAd,SACI,cAAC,GAAD,CAAW4F,OAAQA,EAAQzK,SAAUA,cAVzDmL,EAAYlgB,KAAK,cAAC,GAAD,CAAWwf,OAAQA,EAAQzK,SAAUA,KAmBtDyK,EACA,OAAQpL,GACJ,IAAK,SACD8L,EAAYlgB,KAAK,cAAC,GAAD,CAAegQ,MAAOA,KACvC,MACJ,IAAK,SACDkQ,EAAYlgB,KAAK,cAAC,GAAD,CAAegQ,MAAOA,KACvC,MACJ,IAAK,gBACDkQ,EAAYlgB,KAAK,cAAC,GAAD,CAAqBgQ,MAAOA,KAC7C,MACJ,IAAK,iBACDkQ,EAAYlgB,KAAK,cAAC,GAAD,CAAwBgQ,MAAOA,KAChD,MACJ,IAAK,UACDkQ,EAAYlgB,KAAK,cAAC,GAAD,CAAgBgQ,MAAOA,KACxC,MACJ,IAAK,YACDkQ,EAAYlgB,KAAK,cAAC,GAAD,CAAkBgQ,MAAOA,KAC1C,MACJ,QACI7O,IAAMC,MAAM,qCAIxB,OAAO8e,GAmEIC,G,kDA9DX,WAAYvM,GAAQ,IAAD,8BACf,cAAMA,IACD+D,MAAQ,CACT6H,OAAQ5L,EAAMzF,gBACdiG,OAAQ,UAEZ,EAAKpE,MAAQ4D,EAAM5D,MACnB,EAAKoQ,aAAe,EAAKA,aAAa7L,KAAlB,gBACpB,EAAKwJ,aAAe,EAAKA,aAAaxJ,KAAlB,gBACpB,EAAKwE,QAAUnF,EAAMmF,QAErB,EAAKA,QAAQO,cAAgB,WACrB,EAAK3B,MAAM6H,QACX,EAAKY,gBAbE,E,2DAkBfxhB,KAAKiZ,SAAS,CACV2H,QAAS5gB,KAAK+Y,MAAM6H,SAExB5gB,KAAKoR,MAAMqQ,kB,mCAEF3C,GACT9e,KAAKiZ,SAAS,CACVzD,OAAQsJ,IAGP9e,KAAK+Y,MAAM6H,QACZ5gB,KAAKwhB,iB,+BAIH,IACEZ,EAAW5gB,KAAK+Y,MAAhB6H,OACApL,EAAWxV,KAAK+Y,MAAhBvD,OACR,OACI,8BACI,cAACkM,GAAA,EAAD,CACI1L,MAAO,CAAEiF,QAAS,OAAQ0G,cAAe,UACzC3P,MAAO4O,EAAS,IAAM,GACtBgB,aAAW,EACXhJ,WAAW,UAJf,SAMI,eAACiJ,EAAA,EAAD,WACI,cAACH,GAAA,EAAD,CAAS1P,MAAO,GAAhB,SACI,cAAC,GAAD,CAAW8P,UAAQ,EAAClJ,WAAW,SAASpD,OAAQA,EAAQiB,SAAUzW,KAAKmf,iBAE3E,cAAC4C,EAAA,EAAD,UACI,cAAC,GAAD,CAAavM,OAAQA,EAAQoL,OAAQA,EAAQzK,SAAUnW,KAAKwhB,aAAcpQ,MAAOpR,KAAKoR,qB,GAlD/F8F,aCuIJgF,GA9Of,WAQI,WAAYxU,EAAGsa,EAAIC,EAAQ9H,GAAU,yBAoHrC+H,kBAAoB,CAChB1M,OAAQ,EACRyH,MAAO,EACPtP,KAAM,GACN8O,eAAgB,IAxHgB,KA2HpC0F,oBAAsB,CAClB3b,kBAAkB,EAClBmY,QAAS,EAAC,GAAO,GAAO,GACxB3c,EAAG,EAAE,GAAI,IACTyB,EAAG,EAAE,GAAI,IACTsC,EAAG,EAAE,GAAI,KAhIuB,KAmIpCqc,0BAA4B,CACxBlN,MAAO,GACP9M,MAAO,YACPlG,WAAY,CACRqC,MAAO,CAAC,IAAK,IAAK,KAClBC,KAAM,CAAC,GAAK,GAAK,KAErB0B,OAAQ,CACJgN,EAAG,IACHxS,EAAG,IACH4S,EAAG,KAEPoJ,oBAAoB,EACpBE,oBAAoB,GAhJY,KAmJpCyF,mBAAqB,CACjB5hB,KAAM,eACNiQ,OAAQ,CACJ1O,EAAG,EACHyB,EAAG,EACHsC,EAAG,GAEPR,SAAU,CACN2N,EAAG,GACHE,MAAO,IACPD,IAAK,GAETF,KAAM,IA/J0B,KAkKpCqP,uBAAyB,CACrBrF,MAAO,EACPzH,OAAQ,QACRjC,SAAS,EACTjH,QAAQ,EACRpG,OAAQ,CACJgN,EAAG,IACHxS,EAAG,IACH4S,EAAG,IACHrQ,EAAG,IAEPsC,SAAU,CACNvD,EAAG,EACHyB,EAAG,EACHsC,EAAG,IAhLyB,KAoLpCwc,6BAA+B,CAC3BtF,MAAO,EACPzH,OAAQ,cACRjC,SAAS,EACTjH,QAAQ,EACRpG,OAAQ,CACJgN,EAAG,IACHxS,EAAG,IACH4S,EAAG,IACHrQ,EAAG,IAEPsC,SAAU,CACNvD,GAAI,EACJyB,EAAG,EACHsC,GAAI,IAlMwB,KAuMpCyc,sBAAwB,CACpBlT,sBAAsB,EACtBiR,YAAa,MACbE,UAAU,EACVC,UAAU,EACVvT,aAAa,EACbkT,WAAY,CACRnN,EAAG,IACHxS,EAAG,IACH4S,EAAG,KAEPtG,KAAM,IAlN0B,KAsNpCyV,yBAA2B,CACvB3C,mBAAoB,CAChB5M,EAAG,IACHxS,EAAG,IACH4S,EAAG,IACHrQ,EAAG,IAEP8c,iBAAkB,CACd7M,EAAG,EACHxS,EAAG,EACH4S,EAAG,IA/NP4I,EAAKnD,MAAQ,GACb/Y,KAAK0iB,UAAW,EAChB1iB,KAAKoR,MAAQ1J,EACb1H,KAAK2iB,OAAS,cAAC,GAAD,CAAKxT,YAAa8S,EAAQ/H,UAAW8H,EAAI5Q,MAAOpR,KAAKoR,MAAO+I,QAAUA,IACpFna,KAAK4iB,QAAU,cAAC,GAAD,CAAMxR,MAAOpR,KAAKoR,MAAO7B,gBAAiBvP,KAAK0iB,SAAUvI,QAASA,IAbzF,sDAgBcC,GACNpa,KAAKoa,IAAMA,IAjBnB,gCAqBQ,OAAO8B,EAAKnD,QArBpB,+BAwBaA,GACLmD,EAAKnD,MAAQA,EACb/Y,KAAK6iB,sBAAsB9J,GAC3B/Y,KAAK8iB,wBAAwB/J,GAC7B/Y,KAAK+iB,UAAUhK,KA5BvB,gCA+BcA,GACN,IAAIiK,EACJ,IAAK,IAAI/f,KAAK8V,EAAM3H,MAAMqL,eACtBuG,EAAWjK,EAAM3H,MAAMqL,eAAexZ,GACtCjD,KAAKoR,MAAMoL,iBAAiBvZ,EAAG+f,EAAS9c,QACxClG,KAAKoR,MAAMuL,iBAAiB1Z,EAAG+f,EAAStG,oBACxC1c,KAAKoR,MAAMkL,gBAAgBrZ,EAAG+f,EAASpG,oBACvC5c,KAAKoR,MAAM4L,YAAY/Z,EAAG+f,EAAS5a,MAAO4a,EAAS9gB,cAtC/D,0BA0CQ8G,EAAGsK,GACH,OAAQtK,IAAMsK,IAAQtK,GAAKsK,IA3CnC,8CA+C4ByF,GAEhB/Y,KAAKijB,IAAIjjB,KAAKoR,MAAMhC,YAAa2J,EAAMmH,UAAUQ,WACjD1gB,KAAKoR,MAAM0C,aAGX9T,KAAKijB,IAAIjjB,KAAKoR,MAAM/B,YAAa0J,EAAMmH,UAAUO,WACjDzgB,KAAKoR,MAAM2C,aAEf/T,KAAKoR,MAAMkP,sBAAsBvH,EAAMmH,UAAUG,YACjDrgB,KAAKoR,MAAMgP,eAAerH,EAAMmH,UAAUlT,MAC1ChN,KAAKoR,MAAM4C,oBAAoB+E,EAAMmH,UAAUK,YAAaxH,EAAMmH,UAAU5Q,sBAC5EtP,KAAKoR,MAAMQ,uBAAuBmH,EAAMqF,QAAQ5X,kBAChDxG,KAAKoR,MAAMwN,aAAa,EAAG7F,EAAMqF,QAAQO,QAAQ,IACjD3e,KAAKoR,MAAMwN,aAAa,EAAG7F,EAAMqF,QAAQO,QAAQ,IACjD3e,KAAKoR,MAAMwN,aAAa,EAAG7F,EAAMqF,QAAQO,QAAQ,IACjD3e,KAAKoR,MAAMsN,aAAa,EAAG3F,EAAMqF,QAAQpc,GACzChC,KAAKoR,MAAMsN,aAAa,EAAG3F,EAAMqF,QAAQ3a,GACzCzD,KAAKoR,MAAMsN,aAAa,EAAG3F,EAAMqF,QAAQrY,KAjEjD,4CAoE0BgT,GAClB,IAAImK,EAAyBC,KAAKC,MAAMD,KAAKE,UAAUtK,EAAMsG,iBAAiBnZ,SAC1Eod,EAAmBH,KAAKC,MAAMD,KAAKE,UAAUtK,EAAMmG,WAAWhZ,SAE7D6S,EAAMsG,iBAAiB9L,UACxB2P,EAAuBjgB,EAAI,GAE1B8V,EAAMmG,WAAW3L,UAClB+P,EAAiBrgB,EAAI,GAGzBjD,KAAKoR,MAAM4O,SAASjH,EAAM4G,aAAaI,kBACvC/f,KAAKoR,MAAMmO,YAAY,EAAGxG,EAAM4G,aAAaG,oBAC7C9f,KAAKoR,MAAMmO,YAAY,EAAG2D,GAC1BljB,KAAKoR,MAAMmO,YAAY,EAAG+D,GAC1BtjB,KAAKoR,MAAMoO,oBAAoB,EAAGzG,EAAMsG,iBAAiB9Z,UACzDvF,KAAKoR,MAAMoO,oBAAoB,EAAGzG,EAAMmG,WAAW3Z,UACnDvF,KAAKoR,MAAMkO,kBAAkB,EAAGvG,EAAMsG,iBAAiB/S,QACvDtM,KAAKoR,MAAMkO,kBAAkB,EAAGvG,EAAMmG,WAAW5S,QACjDtM,KAAKoR,MAAMR,UAAUmI,EAAM5H,OAAO1Q,MAElCT,KAAKoR,MAAMwM,qBAAqB7E,EAAM5H,OAAO5L,UAC7CvF,KAAKoR,MAAMyM,aAAa9E,EAAM5H,OAAOT,QAErC1Q,KAAKoR,MAAMuM,iBAAiB5E,EAAM5H,OAAO8B,QA5FjD,uCA+FqBsQ,GAab,IAAK,IAAItgB,KAZTiZ,EAAKnD,MAAQ,GACbmD,EAAKnD,MAAMmH,UAAYlgB,KAAKwiB,sBAC5BtG,EAAKnD,MAAM4G,aAAe3f,KAAKyiB,yBAC/BvG,EAAKnD,MAAMmG,WAAalf,KAAKsiB,uBAC7BpG,EAAKnD,MAAMsG,iBAAmBrf,KAAKuiB,6BACnCrG,EAAKnD,MAAM5H,OAASnR,KAAKqiB,mBACzBnG,EAAKnD,MAAMqF,QAAUpe,KAAKmiB,oBAC1BjG,EAAKnD,MAAM3H,MAAQpR,KAAKkiB,kBACxBhG,EAAKnD,MAAM3H,MAAMqL,eAAiB,GAClCP,EAAKnD,MAAM3H,MAAMzD,KAAO,GAGV3N,KAAKoR,MAAMzD,KAAM,CAC3B,IAAIzD,EAAMiZ,KAAKC,MAAMD,KAAKE,UAAUrjB,KAAKoiB,4BACzClY,EAAIgL,MAAQlV,KAAKoR,MAAMzD,KAAK1K,GAAGoD,KAC/B6V,EAAKnD,MAAM3H,MAAMzD,KAAKvM,KAAK8I,EAAIgL,OAC/BgH,EAAKnD,MAAM3H,MAAMqL,eAAerb,KAAK8I,GAGzClK,KAAK6iB,sBAAsB3G,EAAKnD,OAChC/Y,KAAK8iB,wBAAwB5G,EAAKnD,OAE7BwK,GACDvjB,KAAK+iB,UAAU7G,EAAKnD,WAvHhC,K,4ICgTeyK,G,WA3RX,aAAe,IAAD,gCAedC,eAfc,sCAgBV/I,cAAgB,aAhBN,KAiBVD,WAAa,cAjBH,KAoBdiJ,YAEI,aAAe,IAAD,gCAMdnP,EAAI,SAAC7J,KANS,KAUd0P,IAAM,WACF,OAAO,EAAKA,KAXF,KAcduJ,MAAQ,WACJ,EAAKC,SAAWC,KAAKC,OAfX,KAkBdxS,MAAQ,WACJ,EAAKyS,SACL,IAAIC,EAAOH,KAAKC,MAEZE,EAAO,EAAKJ,SAAW,MACvB,EAAKxJ,IAAqB,IAAd,EAAK2J,QAAkBC,EAAO,EAAKJ,UAC/C,EAAKA,SAAWI,EAChB,EAAKD,OAAS,EACd,EAAKxP,EAAE,EAAK6F,OAzBhBpa,KAAKoa,IAAM,EACXpa,KAAK+jB,OAAS,EACd/jB,KAAK4jB,SAAWC,KAAKC,OAzBf,KAqDdnM,MAAQ,WAEJ,EAAKpO,SAAS0a,IAAS,GACvB,EAAKC,eACL,EAAK/U,YAAYwU,QACjB,EAAKtS,SACL,EAAK8S,OAAO,OAAQ,WACf,mBAAGnO,MAAO,CAAEhE,MAAO,KAAnB,0HA5DK,KA4EdoS,SAAW,SAACvf,EAAMwf,EAAU5jB,GACxB,IAAI6jB,EAAO,IAAIC,KAAK,CAAC1f,GAAO,CAAEpE,KAAMA,IACpC,GAAI8P,OAAOiU,UAAUC,iBACjBlU,OAAOiU,UAAUC,iBAAiBH,EAAMD,OACvC,CACD,IAAIrb,EAAI0b,SAASC,cAAc,KAC3BC,EAAMC,IAAIC,gBAAgBR,GAC9Btb,EAAE4S,KAAOgJ,EACT5b,EAAEob,SAAWC,EACbK,SAASK,KAAKC,YAAYhc,GAC1BA,EAAEsI,QACF2T,YAAW,WACPP,SAASK,KAAKG,YAAYlc,GAC1BuH,OAAOsU,IAAIM,gBAAgBP,KAC5B,KA1FG,KA8FdQ,KAAO,WACH,IAAIvgB,EAAO,GACXA,EAAKuM,MAAQ,EAAKA,MAAMiU,UACxBxgB,EAAKkU,MAAQ,EAAKuM,KAAKD,UACvB,EAAKjB,SAASjB,KAAKE,UAAUxe,GAAO,uBAAwB,qBAlGlD,KAqGd0E,SAAW,SAAC1E,EAAM0e,GACd,EAAKnS,MAAMmU,QAAQ1gB,EAAKuM,MAAMzD,MACZ,MAAd9I,EAAKkU,OACLxW,IAAMijB,KAAK,kCACX,EAAKF,KAAKG,iBAAiBlC,IAE3B,EAAK+B,KAAKrM,SAASpU,EAAKkU,OAE5B,EAAK3H,MAAMsB,SACX,EAAKgT,eAAehL,iBA9GV,KAkHdiL,KAAO,SAACrB,GACJ,IAAIsB,EAAa,IAAIC,WAWrBD,EAAWE,UAVE,WACT,IAAIjhB,EAAOse,KAAKC,MAAMwC,EAAWG,QACjC,IACI,EAAKxc,SAAS1E,GAAM,GACpBtC,IAAMyjB,QAAQ,6BAChB,SAEE,YADAzjB,IAAMC,MAAM,8DAKpBojB,EAAWK,WAAW3B,IA/HZ,KAmId4B,WAAa,SAAC7R,GACV,IAAI8R,EAEJ,OAAQ9R,GACJ,KAAK,EACD8R,EAASC,GACT,MACJ,KAAK,EACDD,EAASlC,GACT,MACJ,KAAK,EACDkC,EAASE,GACT,MACJ,KAAK,EACDF,EAASG,GACT,MACJ,KAAK,EACDH,EAASI,GACT,MACJ,KAAK,EACDJ,EAASK,GACT,MACJ,KAAK,EACDL,EAASM,GACT,MACJ,KAAK,EACDN,EAASO,GACT,MACJ,KAAK,EACDP,EAASQ,GACT,MACJ,KAAK,GACDR,EAASS,GACT,MACJ,KAAK,GACDT,EAASU,GACT,MACJ,KAAK,GACDV,EAASW,GACT,MACJ,KAAK,GACDX,EAASY,GACT,MACJ,QAEI,YADAxkB,IAAMC,MAAM,8BAIpB,EAAK+G,SAAS4c,GAAQ,GACtB5jB,IAAMyjB,QAAQ,8BApLJ,KAuLdgB,YAAc,aAvLA,KAiMd3O,OAAS,SAACvG,EAAQE,GAGd,EAAKZ,MAAMU,OAASA,EACpB,EAAKV,MAAMY,MAAQA,EACnB,EAAKZ,MAAMiC,eAEX,EAAKjC,MAAMnB,SAASiC,QAAQF,EAAOF,GACnC,EAAKV,MAAMnB,SAASoB,OAAO,EAAKD,MAAM3B,MAAO,EAAK2B,MAAMD,QACxD,IAAM8V,EAAU,EAAK7V,MAAMnB,SAASuC,WAAW0U,UAAU,YAAa,GAAKC,QAAQ,YAAa,sBAEhG,EAAK/V,MAAMT,mBACX,EAAKS,MAAMiC,eAGX,IAAI+T,EAAO1C,SAASC,cAAc,KAClCyC,EAAKhD,SAAW,2BAChBgD,EAAKxL,KAAOqL,EACZG,EAAK9V,QAEL,EAAKF,MAAMT,mBACX,EAAKS,MAAMiC,eAGX,EAAK8Q,OAAO,UAAW,aACnB,8BACI,mBAAGvI,KAAK,wFAAwFnJ,OAAO,SAASoJ,IAAI,sBAApH,sBA3NE,KAgOdwL,UAAY,WACR,OAAO,EAAK/B,KAAK3C,QAjOP,KAoOd2E,WAAa,WACT,OAAO,EAAKhC,KAAK1C,SArOP,KAwOd2E,cAAgB,WACZ,OAAO,EAAKnW,MAAMnB,SAASuC,YAzOjB,KA4OdnB,OAAS,WACL,EAAKD,MAAMsB,UA7OD,KAgPdwR,aAAe,WAEX,EAAK9S,MAAMkB,SAASkV,iBAAiB,SAAU,EAAKnW,QAEpDqT,SAASK,KAAK/O,MAAMyR,SAAW,SAE/BlX,OAAOiX,iBAAiB,UAAU,WAC9B,EAAKpW,MAAMT,mBACX,EAAKS,MAAMiC,kBAGfqR,SAAS8C,iBAAiB,oBAAoB,WAC1C,EAAKpW,MAAMT,mBACX,EAAKS,MAAMiC,kBAIfqR,SAASK,KAAK2C,UAAY,SAACje,GAIZ,IAHDA,EAAEke,SAIR,EAAKjC,eAAejL,eArQ5Bza,KAAKgiB,GAAK,CAAChiB,KAAKolB,KAAMplB,KAAK2lB,KAAM3lB,KAAKqY,OAAQrY,KAAKkmB,WAAYlmB,KAAKwa,kBACpExa,KAAKmP,YAAc,IAAInP,KAAK0jB,YAC5B1jB,KAAK0lB,eAAiB,IAAI1lB,KAAKyjB,eAC/BzjB,KAAKoR,MAAQ,IAAIpL,EAAMhG,KAAKmP,aAC5BnP,KAAKslB,KAAO,IAAIpJ,GAAKlc,KAAKoR,MAAOpR,KAAKgiB,GAAIhiB,KAAKmP,YAAanP,KAAK0lB,gBAEjEnjB,IAAMqlB,OACD,CACG9U,IAAK,GACL+U,SAAU,M,mDAwDfpnB,EAAMyU,EAAO4S,GAChBC,KAAatnB,GAAM,CACfyU,MAAOA,EACPqD,UAAW,YACXsP,SAAU,IACVC,YAAaA,Q,KCnDVE,G,kDArCb,WAAYhT,GAAQ,IAAD,8BACjB,cAAMA,IACDiT,WAAa,IAAIzE,GAEtB,EAAKzK,MAAQ,CACX4J,OAAQ,EAAKsF,WAAWZ,YACxBzE,QAAS,EAAKqF,WAAWX,cANV,E,gEAWjBtnB,KAAKkoB,MAAMlD,YAAYhlB,KAAKioB,WAAWV,iBACvCvnB,KAAKioB,WAAWtQ,U,+BAGR,IAAD,OACDgL,EAAS3iB,KAAK+Y,MAAM4J,OACpBC,EAAU5iB,KAAK+Y,MAAM6J,QAE3B,OACE,8BACE,eAACf,EAAA,EAAD,WACGc,EACD,eAACd,EAAA,EAAD,WACGe,EACD,cAACb,EAAA,EAAD,UACE,qBAAKoG,IAAK,SAAAA,GAAG,OAAK,EAAKD,MAAQC,mB,GA7B3BjR,aCDlBkR,IAAS/W,OACP,cAAC,IAAMgX,WAAP,UACE,cAAC,GAAD,MAEF3D,SAAS4D,eAAe,W","file":"static/js/main.c44237b9.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    args;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.args = arguments[0];\n        this.isPreset = false;\n        this.LOD = 1;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.args,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.args[0],\n            length = this.args[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.args[0],\n            radCircle = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.args[0],\n            zCut = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","\nexport var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshLambertMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    DoubleSide,\n\n} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n\n    positions = [];\n    orientations = [];\n    elements = []\n    meshes = [];\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null) {\n            this.name = this.shapeType;\n        }\n\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n    //deprecated\n    // constructor(name, orientationType, data, cp, ci) {\n    //     this.name = name;\n    //     this.orientationType = orientationType;\n\n    //     this.clippingPlanes = cp;\n    //     this.clipIntersection = ci;\n\n    //     this.setDefaults();\n    //     this.genGeometries();\n    //     this.genElementsDeprecated(data);\n    //     this.setElements();\n    //     this.genMeshes();\n\n    // }\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.lod = 1;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n\n            mat = new MeshLambertMaterial({\n                color: c,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: this.clipIntersection\n            });\n            mat.wireframe = this.wireframe;\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.rotate(elem.euler, geoms);\n            this.translate(elem.position, geoms);\n            \n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        for (let i = 0; i < this.positions.length; i++) {\n            this.elements.push(new this.Element(this.positions[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genElementsDeprecated(elements) {\n        let position, orientation, attributes, euler, nP;\n        let temp = [], colour = [];\n\n        for (let elem of elements) {\n\n            if (elem === \"\") {\n                return;\n            }\n\n            attributes = elem.split(\" \");\n\n            for (let a of attributes) {\n                temp.push(parseFloat(a));\n            }\n\n            attributes = temp;\n            temp = [];\n\n            if (attributes.length !== 6) { break; }\n\n            position = attributes.slice(0, 3);\n            orientation = attributes.slice(3);\n\n            console.log(position);\n            console.log(orientation);\n\n            this.positions.push(position);\n            this.orientations.push(orientation);\n\n            euler = this.getRotations(this.orientationType, orientation);\n            colour = this.colourFromOrientation(euler);\n\n            nP = new this.Element(colour, position, euler);\n            this.elements.push(nP);\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        console.log(pos);\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateX(e.x);\n            g.rotateY(e.y);\n            g.rotateZ(e.z);\n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let defaultVector = new Vector3(0, 0, 1);\n                q.setFromUnitVectors(defaultVector, new Vector3(rot[0], rot[1], rot[2]));\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length == 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm == 0 || norm == NaN || norm == undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Tools {\n    subGrid;\n    axes = [];\n    boundingShape;\n    boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n\n        this.boundingShape = null;\n\n        if (this.setsGeometry == null) {\n            let geometries = [];\n            for (let set of sets) {\n                for (let elem of set.elements) {\n                    geometries.push(BufferGeometryUtils.mergeBufferGeometries(elem.geometries));\n                }\n            }\n            this.setsGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n        }\n\n\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                this.setsGeometry.computeBoundingBox()\n                box.copy(this.setsGeometry.boundingBox);\n                this.boundingShape = new Box3Helper(box, this.colour);\n                break;\n            case 'sphere':\n                this.setsGeometry.computeBoundingSphere();\n                let sphere = this.setsGeometry.boundingSphere;\n                let geom = new SphereBufferGeometry(sphere.radius, 10, 10);\n                geom.translate(sphere.center.x, sphere.center.y, sphere.center.z);\n                let material = new MeshBasicMaterial({ color: this.colour });\n                material.wireframe = true;\n                this.boundingShape = new Mesh(geom, material);\n                break;\n            case 'cylinder':\n                // this.boundingShape.copy(this.setsGeometry.computeBoundingBox());\n                 break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n        }\n\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n\n}\n\nexport default Tools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport Tools from './Tools.js'\nimport { Alert } from 'rsuite';\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n\n\n    gridEnabled = false;\n    axesEnabled = false;\n    boundingShapeEnabled = false;\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n\n    constructor(chronometer) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n    }\n\n    setDefault() {\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.initClippers();\n        this.renderer = new WebGLRenderer({ antialias: false, preserveDrawingBuffer: false, powerPreference: \"high-performance\" });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new Tools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 1;\n    }\n\n    getData() {\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    update() {\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 50),\n            new Plane(new Vector3(-1, 0, 0), 50),\n            new Plane(new Vector3(0, 1, 0), 50),\n            new Plane(new Vector3(0, -1, 0), 50),\n            new Plane(new Vector3(0, 0, 1), 50),\n            new Plane(new Vector3(0, 0, -1), 50)\n        ];\n\n        this.clippingHelpers = [\n            new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n            new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)\n        ];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n    }\n\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        this.update();\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        let x = p.r * Math.sin(p.psi) * Math.cos(p.theta);\n        let y = p.r * Math.sin(p.psi) * Math.sin(p.theta);\n        let z = p.r * Math.cos(p.psi);\n        this.cameraPosition = [x, y, z];\n        this.camera.position.set(x, y, z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour == '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour(){\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    updateModel(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateModel(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateModel(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateModel(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n\n    toggleWireframe(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n\n    //used for qmga conversion\n    load(data) {\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n\n\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-50.0}\n                        max={50.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip, Divider } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\nimport View from './View';\nimport { render } from '@testing-library/react';\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.f = props.f;\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    updateDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions);\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.updateDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass SamplesDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n\n        this.updateKey = this.updateKey.bind(this);\n    }\n\n    updateKey(val) {\n        this.setState({\n            active: val\n        });\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <Dropdown \n            title=\"Library\"\n            trigger='click'\n            placement=\"bottomEnd\"\n            icon={<Icon icon=\"database\" />}\n            appearance='subtle'\n            onSelect={(eventKey) => {\n                this.f(eventKey);\n\n            }}>\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Crystal Packings\">\n                    <Dropdown.Item eventKey={10}>Box Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Box Crystal (Large)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Other\">\n                    <Dropdown.Item eventKey={12}>Fig1</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC</Dropdown.Item>\n                </Dropdown.Menu>\n                \n                <Dropdown.Item panel style={{ padding: 5, width: 120 }}></Dropdown.Item>\n\n\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Performance\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"dashboard\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Level of Detail</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\nclass Top extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false };\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2)\n        });\n    }\n\n    render() {\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" />}>Autorotate</Nav.Item>\n                                    <Nav.Item appearance=\"subtle\" disabled={true} icon={<Icon icon=\"info-circle\" />}>Manual</Nav.Item>\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"book\" />}>Notes</Nav.Item>\n                                    <PerformanceDropdown model={this.model} />\n                                    <SamplesDropdown f={this.functions[3]} />\n\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label for=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav pullLeft>\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'xs'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>Information About System</Drawer.Title>\n                    </Drawer.Header>\n                    <Drawer.Body>\n                        Coarse-grained modeling of molecular fluids is often based on non-spherical convex rigid bodies like ellipsoids or spherocylinders representing rodlike or platelike molecules or groups of atoms, with site-site interaction potentials depending both on the distance among the particles and the relative orientation. In this category of potentials, the Gay-Berne family has been studied most extensively.<br /><br />\n                     However, conventional molecular graphics programs are not designed to visualize such objects. Usually the basic units are atoms displayed as spheres, or as vertices in a graph. Atomic aggregates can be highlighted through an increasing amount of stylized representations, e.g., Richardson ribbon diagrams for the secondary structure of a protein, Connolly molecular surfaces, density maps, etc., but ellipsoids\n                     and spherocylinders are generally missing, especially as elementary simulation units. <br /><br /> We fill this gap providing and discussing a customized OpenGL-based program for the interactive, rendered representation of large ensembles of convex bodies, useful especially in liquid crystal research. We pay particular attention to the performance issues for typical system sizes in this feld. The code is distributed as open source.\n                    <br /><br />\n                        <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA Homepage</a>\n                        <br /><br />\n                        <a href=\"https://pubs.acs.org/doi/10.1021/ct700192z\" target=\"_blank\" rel=\"noopener noreferrer\">DOI 10.1021/ct700192z</a>\n                    </Drawer.Body>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default Top;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(value, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, index) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[index] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[index] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n    }\n\n    updateZoom(value) {\n        this.setState({\n            zoom: value\n        });\n        this.model.updateCameraZoom(value);\n        this.model.update();\n        View.state.camera.zoom = value;\n    }\n    selectType(value) {\n        this.setState({\n            type: value\n        });\n        View.state.camera.type = value;\n        this.model.setCamera(value);\n        if (value == \"orthographic\") {\n            this.updateZoom(50);\n\n        } else {\n            this.updateZoom(1);\n        }\n        \n    }\n\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        if (value != NaN && value != null) {\n            switch (type) {\n                case 0:\n                    position.r = parseFloat(value);\n                    break;\n                case 1:\n                    position.theta = parseFloat(value);\n                    break;\n                case 2:\n                    position.psi = parseFloat(value);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(value, type) {\n        let lookAt = this.state.lookAt;\n\n        if (value != NaN && value != null) {\n            switch (type) {\n                case 0:\n                    lookAt.x = parseFloat(value);\n                    break;\n                case 1:\n                    lookAt.y = parseFloat(value);\n                    break;\n                case 2:\n                    lookAt.z = parseFloat(value);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Look At Input');\n                    return;\n            }\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = [this.state.position.r, this.state.position.theta, this.state.position.psi];\n\n\n        return (\n            <div>\n               \n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n              \n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"r\", \"theta\", \"psi\"]} values={cameraPosition} f={this.updatePosition} step={0.5} styling={submenuParameterSetStyling} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing;\n        this.model = props.model;\n\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n        this.model.update();\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, vals) {\n        switch (i) {\n            case 0:\n                View.state.slicing.x = vals;\n                break;\n            case 1:\n                View.state.slicing.y = vals;\n                break;\n            case 2:\n                View.state.slicing.z = vals;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, vals);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={true} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(value, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = value;\n                break;\n            case 'y':\n                position.y = value;\n                break;\n            case 'z':\n                position.z = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateAmbientLightColour = this.updateAmbientLightColour.bind(this);\n        this.updateBackgroundColour = this.updateBackgroundColour.bind(this);\n    }\n    updateAmbientLightColour(value, type) {\n        let colour = this.state.ambientLightColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBackgroundColour(value, type) {\n        let colour = this.state.backgroundColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        this.model.update();\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateAmbientLightColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateAmbientLightColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateAmbientLightColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateAmbientLightColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBackgroundColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBackgroundColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBackgroundColour} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n    updateColour(value, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = value;\n                break;\n            case 'g':\n                rgb.g = value;\n                break;\n            case 'b':\n                rgb.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        this.model.update();\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(value) {\n        this.model.updateGridSize(value);\n        this.model.update();\n        View.state.reference.size = value;\n    }\n    toggleBoundingShapeEnabled() {\n        let toggle = !View.state.reference.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        View.state.reference.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(this.state.activeShape, toggle);\n        this.model.update();\n    }\n    selectShape(value) {\n        this.setState({\n            activeShape: value\n        });\n        View.state.reference.activeShape = value;\n        this.model.updateBoundingShape(value, this.state.boundingShapeEnabled);\n        this.model.update();\n    }\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        this.model.update();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        const enabled = this.state.boundingShapeEnabled;\n        const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Shape </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled} onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    <Radio disabled={!enabled} value=\"sphere\" >Sphere </Radio>\n                                    {/* TO DO CYLINDER */}\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio>\n\n                                </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{marginTop: 8}}icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n\n\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Grid </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showGrid} onClick={this.toggleGrid}> Show</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <br />\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\" tooltip eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Ambient Light\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Other Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav pullLeft>\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions model={model} />);\n                break;\n            case \"Ambient Light\":\n                menuContent.push(<AmbientLightOptions model={model} />);\n                break;\n            case \"Other Lighting\":\n                menuContent.push(<AdditionalLightOptions model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions model={model} />);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass Side extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent active={active} expand={expand} onChange={this.handleToggle} model={this.model} />\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default Side;","import React from \"react\";\nimport Top from './Top';\nimport Side from './Side';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <Top chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <Side model={this.model} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n    updateFPS(fps){\n        this.fps = fps;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        this.model.setCamera(state.camera.type);\n\n        this.model.updateCameraPosition(state.camera.position);\n        this.model.updateLookAt(state.camera.lookAt);\n        \n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n    setDefaultStates(starting) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadLightingAndCamera(View.state);\n        this.loadReferenceAndSlicing(View.state);\n\n        if (!starting) {\n            this.loadModel(View.state);\n        }\n    }\n\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: []\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-50, 50],\n        y: [-50, 50],\n        z: [-50, 50]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.2, 0.4, 0.8]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: true\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            r: 10,\n            theta: 3.1,\n            psi: 0\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        multicolour: true,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\n\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate];\n        this.chronometer = new this.Chronometer();\n        this.externalToggle = new this.ExternalToggle();\n        this.model = new Model(this.chronometer);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n    }\n\n    ExternalToggle = class ExternalToggle {\n        closeSidemenu = () => { }\n        autorotate = () => { }\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor() {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = Date.now();\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        begin = () => {\n            this.prevTime = Date.now();\n        }\n\n        click = () => {\n            this.frames++;\n            var time = Date.now();\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n            }\n        }\n    };\n\n    start = () => {\n\n        this.generate(sample2, true);\n        this.addListeners();\n        this.chronometer.begin();\n        this.render();\n        this.notify('info', 'Welcome!',\n            (<p style={{ width: 320 }} >\n                This application works best on the Chrome browser. Check out Liquid Crystal configurations in the Library!\n            </p>)\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 30000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            Alert.info(\"Setting default viewing state.\");\n            this.view.setDefaultStates(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data, false);\n                Alert.success('File loaded successfully.');\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n\n    }\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false);\n        Alert.success('File loaded successfully.');\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/png\", 1.0).replace(\"image/png\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.png\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                <a href=\"https://www.ucl.ac.uk/prospective-students/undergraduate/degrees/computer-science-bsc\" target=\"_blank\" rel=\"noopener noreferrer\">Here</a>\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    render = () => {\n        this.model.update();\n    }\n\n    addListeners = () => {\n\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.externalToggle.autorotate();\n            }\n            // //a\n            // if (key == 65) {\n            //     this.model.toggleAxes();\n            // }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
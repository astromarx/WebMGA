{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/Tools.js","Model/Model.js","View/Tools.js","View/Top.js","View/SubMenus.js","View/Side.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","args","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","parameters","clear","SphereBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cone","Cylinder","Torus","Set","data","cp","ci","positions","orientations","elements","meshes","Element","c","p","e","colour","position","euler","Model","rgbToHex","geoms","geometries","name","orientationType","clippingPlanes","clipIntersection","setDefaults","shapeType","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","shininess","lod","constant","toggle","material","m","mat","elem","getColour","MeshPhongMaterial","color","side","DoubleSide","Mesh","shape","clone","translate","rotate","setGeometries","getRotations","colourFromOrientation","orientation","attributes","nP","split","a","parseFloat","slice","SHAPE","generate","pos","rotateX","rotateY","rotateZ","z","rot","q","Quaternion","Euler","defaultVector","Vector3","setFromUnitVectors","setFromQuaternion","fromArray","setFromAxisAngle","round","_x","_y","_z","hex","val","Light","lightType","setDefaultLights","light","set","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","PointLight","AMBIENT","DIRECTIONAL","POINT","Tools","s","axes","size","LineBasicMaterial","linewidth","genAxes","genSubgrid","boundingShapeType","setsGeometry","sets","boundingShape","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","computeBoundingSphere","sphere","boundingSphere","geom","center","MeshBasicMaterial","subGrid","GridHelper","axesSize","Line","setFromPoints","gridEnabled","axesEnabled","boundingShapeEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","selectedSet","initClippers","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","localClippingEnabled","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","model","controls","update","render","clippingIntersections","Plane","clippingHelpers","PlaneHelper","helper","visible","toggleClipIntersection","updateSlicers","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","OrbitControls","domElement","target","aspect","left","right","top","bottom","updateProjectionMatrix","r","b","enabled","updateColour","updatePosition","rgb","passGrid","passAxes","passShape","toggleGrid","toggleAxes","updateBoundingShape","updateSize","remove","autoRotate","genBoundingShape","id","params","f","updateModel","setUserColour","setData","componentToHex","ParameterSet","props","titles","title","values","numerical","index","step","positive","ParameterInput","active","selectingSet","changeValue","bind","min","value","InputBox","defaultVal","style","marginLeft","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","max","nextValue","end","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","export","trigger","placement","icon","Icon","padding","Button","marginRight","appearance","onClick","SamplesDropdown","divider","FlexboxGrid","justify","PerformanceDropdown","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","Top","Header","Navbar","Body","Nav","pullRight","fps","functions","display","className","accept","files","for","pullLeft","TITLE_LEFT_MARGIN","dividerStyle","ModelsOptions","state","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateShininess","updateUserColour","setState","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","CameraOptions","toggleAutorotate","selectCameraType","updateLookat","rotating","toggleCameraRotation","updateLookAt","console","log","Grid","fluid","controlId","RadioGroup","Radio","defaultChecked","SlicingOptions","slicing","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","helpers","toggleHelper","AdditionalLightsNav","activeKey","margin","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","updateLight","updateLightPosition","lightState","AmbientLightOptions","ambientLight","updateAmbientLightColour","updateBackgroundColour","ambientLightColour","backgroundColour","updateBg","ReferenceOptions","reference","toggleBoundingShapeEnabled","updateGridSize","gridColour","updateReferenceColour","activeShape","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","tooltip","MenuContent","menuContent","Side","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","JSON","parse","stringify","pointLightColour","Controller","addListeners","sample","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","href","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","save","getData","view","genSets","info","setDefaultStates","load","fileReader","FileReader","onloadend","result","err","readAsText","dataURL","toDataURL","replace","link","updateCamera","Notification","description","getHeader","getSiderbar","getDomElement","requestAnimationFrame","overflow","addEventListener","onkeydown","keyCode","config","duration","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25355cf2.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    ConeBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    args;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.args = arguments[0];\n        this.isPreset = false;\n        this.LOD = 1;\n        this.complexity = [6,12,18,24,32];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cone':\n                this.presetGeometry = new ConeBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.args,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.args[0],\n            length = this.args[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.args[0],\n            radCircle = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.args[0],\n            zCut = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","\nexport var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.5, 0.2, 0.2]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[1.0,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cone: {\n        names: ['Radius','Height'],\n        vals: [0.8, 1.2]\n    },\n    Cylinder: {\n        names: ['RadiusTop', 'RadiusBottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    DoubleSide\n} from 'three';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    shininess;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n\n    positions = [];\n    orientations = [];\n    elements = []\n    meshes = [];\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n\n        this.setDefaults();\n\n        if (data.shapeType != null){\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null){\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null){\n            this.name = this.shapeType;\n        }\n\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n    validateData(){\n        if(this.positions.length !== this.orientations.length){\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: '+ this.positions.length + '\\n Total rotations: '+this.orientations.length;\n        }\n\n        for(let p in this.parameters){\n            if(p < 0){\n                throw 'Error: Invalid parameter '+p.toString()+' for '+this.name+'\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if(this.parameters.length != defaultParameters.vals.length){\n            throw 'Error: Wrong number of parameters specified for '+this.name+'. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.shininess = 30;\n        this.lod = 4;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals){\n        this.clippingPlanes[2*i+1].constant = vals[1];\n        this.clippingPlanes[2*i].constant = -vals[0];\n    }\n\n    toggleClipIntersection(toggle){\n        this.clipIntersection = toggle;\n        for(let mesh of this.meshes){\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                c = new Color(elem.getColour());\n            } else {\n                c = this.userColour;\n            }\n\n            mat = new MeshPhongMaterial({ \n                color: c,\n                side: DoubleSide,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: this.clipIntersection\n             });\n            mat.wireframe = this.wireframe;\n            mat.shininess = this.shininess;\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.translate(elem.position, geoms);\n            this.rotate(elem.euler, geoms);\n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements(){\n        let colour, euler;\n        for(let i = 0; i < this.positions.length; i++){\n            euler =  this.getRotations(this.orientationType, this.orientations[i]);\n            colour = this.colourFromOrientation(euler);\n            this.elements.push(new this.Element(colour, this.positions[i], euler));\n        }\n    }\n\n    genElementsDeprecated(elements) {\n        let position, orientation, attributes, euler, nP;\n        let temp = [], colour = [];\n\n        for (let elem of elements) {\n            attributes = elem.split(\" \");\n\n            for (let a of attributes) {\n                temp.push(parseFloat(a));\n            }\n\n            attributes = temp;\n            temp = [];\n\n            if (attributes.length !== 7) { break; }\n\n            position = attributes.slice(0, 3);\n            orientation = attributes.slice(3);\n\n            this.positions.push(position);\n            this.orientations.push(orientation);\n\n            euler = this.getRotations(this.orientationType, orientation);\n            colour = this.colourFromOrientation(euler);\n\n            nP = new this.Element(colour, position, euler);\n            this.elements.push(nP);\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cone':\n                this.shape = new SHAPE.Preset('Cone', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateX(e.x);\n            g.rotateY(e.y);\n            g.rotateZ(e.z);\n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        let e = new Euler();\n\n        switch (type) {\n            case 'v':\n                let defaultVector = new Vector3(0, 0, 1);\n                q.setFromUnitVectors(defaultVector, new Vector3(rot[0], rot[1], rot[2]));\n                e.setFromQuaternion(q);\n                break;\n            case 'q':\n                q.fromArray(rot);\n                e.setFromQuaternion(q);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                e.setFromQuaternion(q);\n                break;\n            case 'e':\n                e.fromArray(rot);\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: '+type+ '\\n Expected: v | q | a | e';\n        }\n\n        return e;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n        return colour;\n    }\n\n    setUserColour(hex){\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val){\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cone':\n                parameters = Parameters.Cone;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        colour;\n        position;\n        euler;\n\n        constructor(c, p, e) {\n            this.colour = c;\n            this.position = p;\n            this.euler = e;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight\n} from 'three';\n\nexport class Light {\n    light;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Tools {\n    subGrid;\n    axes = [];\n    boundingShape;\n    boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.genAxes();\n        this.genSubgrid();\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n\n        this.boundingShape = null;\n\n        if (this.setsGeometry == null) {\n            let geometries = [];\n            for (let set of sets) {\n                for (let elem of set.elements) {\n                    geometries.push(BufferGeometryUtils.mergeBufferGeometries(elem.geometries));\n                }\n            }\n            this.setsGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n        }\n\n\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                this.setsGeometry.computeBoundingBox()\n                box.copy(this.setsGeometry.boundingBox);\n                this.boundingShape = new Box3Helper(box, this.colour);\n                break;\n            case 'sphere':\n                this.setsGeometry.computeBoundingSphere();\n                let sphere = this.setsGeometry.boundingSphere;\n                let geom = new SphereBufferGeometry(sphere.radius, 10, 10);\n                geom.translate(sphere.center.x, sphere.center.y, sphere.center.z);\n                let material = new MeshBasicMaterial({ color: this.colour });\n                material.wireframe = true;\n                this.boundingShape = new Mesh(geom, material);\n                break;\n            case 'cylinder':\n                // this.boundingShape.copy(this.setsGeometry.computeBoundingBox());\n                 break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n        }\n\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n        this.genAxes();\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        this.genAxes();\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n}\n\nexport default Tools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport Tools from './Tools.js'\nimport Parameters from './Parameters.js'\nimport { Alert } from 'rsuite';\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    boundingShapeEnabled = false;\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n\n    constructor() {\n        this.scene = new Scene();\n        this.setDefault();\n    }\n\n    setDefault() {\n        this.selectedSet = 0;\n        this.initClippers();\n\n        this.renderer = new WebGLRenderer({ antialias: true, preserveDrawingBuffer: true });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new Tools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n    }\n\n    getData(){\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets){\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            model.sets.push(temp);\n        }\n        return model;\n    }\n\n    update() {\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 50),\n            new Plane(new Vector3(-1, 0, 0), 50),\n            new Plane(new Vector3(0, 1, 0), 50),\n            new Plane(new Vector3(0, -1, 0), 50),\n            new Plane(new Vector3(0, 0, 1), 50),\n            new Plane(new Vector3(0, 0, -1), 50)\n        ];\n\n        this.clippingHelpers = [\n            new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n            new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)\n        ];\n\n        for(let helper of this.clippingHelpers){\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n    }\n\n    toggleClipIntersection(toggle){\n        for(let set of this.sets){\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle){\n        this.clippingHelpers[2*i].visible = toggle;\n        this.clippingHelpers[2*i+1].visible = toggle;\n    }\n\n    updateSlicer(i, vals){\n        for(let set of this.sets){\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, 0.01, 10000);\n        }\n\n        this.camera.position.z = -30;\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / 2;\n        }\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n    }\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if(this.boundingShapeEnabled){\n            this.updateBoundingShape('',false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if(passShape){\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    toggleCameraRotation() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    updateModel(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    updateLOD(val) {\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateModel(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateModel(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateModel(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShininess(id, val) {\n        this.updateModel(id, [id, val], (id, val) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shininess = val;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets){\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for(let setData of sets){\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={{ width: 130, marginLeft: 10 }}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n\n                    <Col md={10}><p style={{ marginTop: 10, marginLeft: 30 }}>{this.title}</p></Col>\n                    <Col md={14} />\n                    <Col md={10}>{InputBox}</Col>\n\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-50.0}\n                        max={50.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, FlexboxGrid, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000,1000];\n        this.f = props.f;\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    updateDimensions(val, index){\n        this.dimensions[index] = parseInt(val);\n    }\n\n    export(){\n        this.f(...this.dimensions);\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n                <Dropdown.Item panel style={{ padding: 5, width: 250 }}></Dropdown.Item>\n                <ParameterSet f={this.updateDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive/>\n              \n                <Button style={{width: 200, marginLeft: 25, marginRight: 25, marginTop: 15,marginBottom: 15}} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nconst SamplesDropdown = ({ ...props }) => (\n\n    <Dropdown {...props}>\n        <Dropdown.Item >File Type</Dropdown.Item>\n        <Dropdown.Item divider />\n        <Dropdown.Item>Sample 1</Dropdown.Item>\n        <Dropdown.Item>Sample 2</Dropdown.Item>\n        <Dropdown.Item>Sample 3</Dropdown.Item>\n        <Dropdown.Item>Sample 4</Dropdown.Item>\n        <Dropdown.Item panel style={{ padding: 5, width: 140 }}></Dropdown.Item>\n        <FlexboxGrid justify='center'>\n            <Button appearance='primary'> Randomize </Button>\n        </FlexboxGrid>\n\n        <Dropdown.Item panel style={{ padding: 5, width: 140 }}></Dropdown.Item>\n    </Dropdown>\n);\n\nconst PerformanceDropdown = ({ ...props }) => (\n\n\n    <Dropdown {...props}>\n        <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n            <FormGroup>\n                <ControlLabel>Level of Detail</ControlLabel>\n                <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                    <Tooltip>\n                        Decreasing LOD will increase rendering speed.\n                    </Tooltip>\n                }>\n                    <Icon icon=\"question-circle\" size=\"lg\" />\n                </Whisper>\n            </FormGroup>\n        </Form>\n\n        <Slider\n            min={1}\n            step={1}\n            max={5}\n            defaultValue={4}\n            graduated\n            progress\n            style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n            onChange={(value) => {\n                props.model.updateLOD(value - 1);\n            }}\n\n        />\n        <br />\n\n\n    </Dropdown>\n);\n\n\nconst Top = ({ ...props }) => {\n\n    return (\n        <div>\n            <Header style={{ height: 56 }}>\n                <Navbar>\n                    <Navbar.Body>\n                        <Nav pullRight >\n                            <ButtonToolbar>\n                                <Nav.Item active>fps {props.fps}</Nav.Item>\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"info-circle\" />}>Manual</Nav.Item>\n                                <PerformanceDropdown title=\"Performance\" trigger='click' model={props.model} placement=\"bottomEnd\" icon={<Icon icon=\"dashboard\" />} />\n                                <SamplesDropdown title=\"Samples\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"folder-o\" />} />\n                                <ExportDropdown f={props.functions[2]} />\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={props.functions[0]}>Save</Nav.Item>\n                                <input type=\"file\"\n                                    id=\"upload-btn\"\n                                    style={{ display: 'none' }}\n                                    className='input-file'\n                                    accept='.json,.webmga'\n                                    onChange={e => props.functions[1](e.target.files[0])} />\n                                <label for=\"upload-btn\">\n                                    <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                </label>\n\n                            </ButtonToolbar>\n\n                        </Nav>\n                        <Nav pullLeft>\n                            <h6 style={{ padding: 20 }}> WebMGA</h6>\n                        </Nav>\n                    </Navbar.Body>\n                </Navbar>\n            </Header>\n        </div>\n    );\n};\n\nexport default Top;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\n\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateShininess = this.updateShininess.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n    updateShininess(val) {\n        this.setState({\n            shininess: val\n        });\n        View.state.model.configurations[this.state.active].shininess = val;\n        this.model.updateShininess(this.state.active, val)\n    }\n\n    updateUserColour(value, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n    }\n\n    updateParameter(val, index) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[index] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[index] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n        \n        this.model.updateShape( this.state.active, globalState.shape, globalState.parameters);\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cone\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive/>\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Shininess </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={configState.shininess} f={this.updateShininess} />\n\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.selectCameraType = this.selectCameraType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n\n    }\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        View.state.camera.rotating = !View.state.camera.rotating;\n        this.model.toggleCameraRotation();\n    }\n    selectCameraType(value) {\n        this.setState({\n            type: value\n        });\n        View.state.camera.cameraType = value;\n        this.model.setCamera(value);\n    }\n\n    updateLookat(value, type) {\n        let lookAt = this.state.lookAt;\n\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(value);\n                break;\n            case 1:\n                lookAt.y = parseFloat(value);\n                break;\n            case 2:\n                lookAt.z = parseFloat(value);\n                break;\n            default:\n                Alert.error('Error: Unexpected LookAt Identifier');\n        }\n\n        this.model.updateLookAt(lookAt);\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const rotating = this.state.rotating;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z ];\n\n        console.log(lookAt);\n\n        return (\n            <div >\n\n                <Divider><strong style={dividerStyle}> Camera </strong></Divider>\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox checked={rotating} onClick={this.toggleAutorotate}> AutoRotate</Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n\n\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectCameraType}>\n                                    <br />\n                                    <p>Type</p>\n                                    <Radio defaultChecked value=\"perspective\">Perspective </Radio>\n                                    <Radio value=\"orthographic\">Orthographic </Radio>\n                                </RadioGroup>\n                            </FormGroup>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p> Look at</p>\n                        </Col>\n                    </Row>\n                </Grid>\n\n                <ParameterSet titles={[\"X position\", \"Y position\", \"Z position\"]} values={lookAt} f={this.updateLookat} step={0.5}/>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing;\n        this.model = props.model;\n\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n    }\n\n    updateSlicer(i, vals) {\n        switch (i) {\n            case 0:\n                View.state.slicing.x = vals;\n                break;\n            case 1:\n                View.state.slicing.y = vals;\n                break;\n            case 2:\n                View.state.slicing.z = vals;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, vals);\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={true} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n\n\n    }\n    updateColour(value, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n    }\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = value;\n                break;\n            case 'y':\n                position.y = value;\n                break;\n            case 'z':\n                position.z = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateAmbientLightColour = this.updateAmbientLightColour.bind(this);\n        this.updateBackgroundColour = this.updateBackgroundColour.bind(this);\n    }\n    updateAmbientLightColour(value, type) {\n        let colour = this.state.ambientLightColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBackgroundColour(value, type) {\n        let colour = this.state.backgroundColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateAmbientLightColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateAmbientLightColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateAmbientLightColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateAmbientLightColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBackgroundColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBackgroundColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBackgroundColour} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n\n    }\n    updateColour(value, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = value;\n                break;\n            case 'g':\n                rgb.g = value;\n                break;\n            case 'b':\n                rgb.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(value) {\n        this.model.updateGridSize(value);\n        View.state.reference.size = value;\n    }\n    toggleBoundingShapeEnabled() {\n        let toggle = !View.state.reference.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        View.state.reference.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(this.state.activeShape, toggle);\n    }\n    selectShape(value) {\n        this.setState({\n            activeShape: value\n        });\n        View.state.reference.activeShape = value;\n        this.model.updateBoundingShape(value, this.state.boundingShapeEnabled);\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        const enabled = this.state.boundingShapeEnabled;\n        const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Elements </strong></Divider>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={enabled} onClick={this.toggleBoundingShapeEnabled}> Bounding Shape </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    <Radio disabled={!enabled} value=\"sphere\" >Sphere </Radio>\n                                    {/* TO DO CYLINDER */}\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio>\n\n                                </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={showAxes} onClick={this.toggleAxes}> Show Axes</Checkbox>\n                            <Checkbox checked={showGrid} onClick={this.toggleGrid}> Show Grid</Checkbox>\n                        </Col>\n                    </Row>\n\n                    <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                    <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n\n                </Grid>\n\n                <Divider><strong style={dividerStyle}> Colour </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56; \n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n        <Nav {...props} activeKey={active} onSelect={onSelect} style={{  backgroundColor: '#101010', height: sidebarHeight }}>\n            <Nav.Item title=\"Models\" tooltip eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n            </Nav.Item>\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n            <Nav.Item eventKey=\"View\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Ambient Light\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Other Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n            {/* </Whisper> */}\n            \n        </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div  style={{backgroundColor: '#0F131B'}}>\n            <Nav>\n                <Navbar appearance=\"subtle\">\n                    <Nav pullLeft>\n                        <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                    </Nav>\n                    <Nav pullRight>\n                        <NavToggle expand={expand} onChange={onChange} />\n                    </Nav>\n                </Navbar>\n\n            </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions model={model}/>);\n                break;\n            case \"View\":\n                menuContent.push(<CameraOptions model={model}/>);\n                break;\n            case \"Ambient Light\":\n                menuContent.push(<AmbientLightOptions model={model}/>);\n                break;\n            case \"Other Lighting\":\n                menuContent.push(<AdditionalLightOptions model={model}/>);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions model={model}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass Side extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\" \n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent active={active} expand={expand} onChange={this.handleToggle} model={this.model}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default Side;","import React from \"react\";\nimport Top from './Top';\nimport Side from './Side';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <Top fps={60} functions={io} model={this.model} />;\n        this.sidebar = <Side model={this.model} sidebarExpanded={this.expanded} />;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state; \n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state){\n        let substate;\n        for(let i in state.model.configurations){\n            substate = state.model.configurations[i];\n            this.model.updateShininess(i, substate.shininess);\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    xor(a,b){\n        return ( a && !b ) || ( !a && b );\n    }\n\n\n    loadReferenceAndSlicing(state){\n        \n        if(this.xor(this.model.gridEnabled, state.reference.showGrid)){\n            this.model.toggleGrid();\n        }\n\n        if(this.xor(this.model.axesEnabled, state.reference.showAxes)){\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.controls.autoRotate  = state.camera.rotating;\n        this.model.setCamera(state.camera.type);\n        this.model.updateLookAt(state.camera.lookAt);\n    }\n\n    setDefaultStates() {\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n    }\n\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: []\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-50, 50],\n        y: [-50, 50],\n        z: [-50, 50]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.5, 0.2, 0.2]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        shininess: 30,\n        colourFromDirector: true,\n        displayAsWireframe: true\n    }\n\n    CameraDefaultState = {\n        rotating: false,\n        type: 'perspective',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport sample from './Samples/visualisation.json';\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        this.io = [this.save, this.load, this.export];\n        this.model = new Model();\n        this.view = new View(this.model, this.io);\n        Alert.config(\n            ({\n                top: 70,\n                duration: 6000\n            })\n        );\n    }\n\n    start = () => {\n        this.addListeners();\n        this.generate(sample);\n        this.render();\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data) => {\n        this.view.expanded = false;\n\n        this.model.genSets(data.model.sets);\n\n        if (data.state == null) {\n            Alert.info(\"Set default viewing state.\");\n            this.view.setDefaultStates();\n        } else {\n            this.view.setState(data.state);\n        }\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data);\n            } catch (err) {\n                Alert.error(err);\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n    }\n\n\n    export = (height, width) => {\n\n        this.model.camera.aspect = width / height;\n        this.model.camera.updateProjectionMatrix();\n        this.model.renderer.setSize(width, height);\n\n        this.model.renderer.render(this.model.scene, this.model.camera);\n\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/png\", 1.0).replace(\"image/png\", \"image/octet-stream\");\n        var link = document.createElement('a');\n        link.download = \"hey.png\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n        Notification['success']({\n            title: 'Thank you!',\n            placement: 'bottomEnd',\n            description: <p style={{ width: 320 }} >\n                Please cite us! www.google.com\n                </p>\n          });\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSiderbar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    render = () => {\n        //this.stats.begin();\n        this.model.update();\n        //this.stats.end();\n        //this.updateFPS();\n        requestAnimationFrame(this.render);\n    }\n\n    addListeners = () => {\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            // TODO\n            // //spacebar\n            // if (key == 32) {\n            //     this.model.toggleCameraRotation();\n            // }\n            // //a\n            // if (key == 65) {\n            //     this.model.toggleAxes();\n            // }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n\nvar Stats = function () {\n\n    var fps = 10;\n    var frames = 0;\n    var prevTime;\n\n    return {\n        getFPS: function () {\n            return fps;\n        },\n        begin: function () {\n            prevTime = Date.now();\n        },\n        end: function () {\n            frames++;\n            var time = Date.now();\n\n            if (time > prevTime + 1000) {\n                fps = (frames * 1000) / (time - prevTime);\n                prevTime = time;\n                frames = 0;\n                console.log(fps);\n            }\n        },\n\n    };\n\n};\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSiderbar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
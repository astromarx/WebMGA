{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/Tools.js","Model/Model.js","View/Tools.js","View/Top.js","View/SubMenus.js","View/Side.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","args","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","parameters","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","round","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","clippingPlanes","clipIntersection","setDefaults","shapeType","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","shininess","lod","constant","toggle","material","m","c","mat","elem","console","log","rgb","colourMap","values","MeshPhongMaterial","color","side","DoubleSide","Mesh","shape","clone","translate","rotate","setGeometries","getRotations","calculateDirector","director","setColourIndex","calculateColourIndex","attributes","nP","split","a","parseFloat","slice","colourFromOrientation","SHAPE","generate","pos","e","rotateX","rotateY","rotateZ","rot","Quaternion","defaultVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","vectors","norm","NaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","PointLight","AMBIENT","DIRECTIONAL","POINT","Tools","s","axes","size","LineBasicMaterial","linewidth","genAxes","genSubgrid","boundingShapeType","setsGeometry","sets","boundingShape","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","computeBoundingSphere","sphere","boundingSphere","geom","center","MeshBasicMaterial","subGrid","GridHelper","axesSize","Line","setFromPoints","gridEnabled","axesEnabled","boundingShapeEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","selectedSet","initClippers","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","localClippingEnabled","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","model","controls","update","render","clippingIntersections","Plane","clippingHelpers","PlaneHelper","helper","visible","toggleClipIntersection","updateSlicers","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","zoom","updateProjectionMatrix","OrbitControls","domElement","target","aspect","left","right","top","bottom","r","psi","theta","updateCamera","b","enabled","updateColour","updatePosition","passGrid","passAxes","passShape","toggleGrid","toggleAxes","updateBoundingShape","updateSize","remove","autoRotate","genBoundingShape","id","params","f","updateModel","setUserColour","setData","ps","particleSets","particleSet","componentToHex","ParameterSet","props","titles","title","numerical","step","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","min","value","InputBox","defaultVal","style","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","max","nextValue","end","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","export","trigger","placement","icon","Icon","Button","marginRight","appearance","onClick","SamplesDropdown","padding","PerformanceDropdown","state","updateVal","setState","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","Top","functions","fps","showDrawer","updateFPS","toggleDrawer","chronometer","toFixed","Header","Navbar","Body","Nav","pullRight","display","className","accept","files","for","pullLeft","Drawer","show","onHide","backdrop","Title","href","rel","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateShininess","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","CameraOptions","toggleAutorotate","selectCameraType","updateLookat","updateCameraPosition","rotating","toggleCameraRotation","updateLookAt","cameraPosition","controlId","RadioGroup","Radio","defaultChecked","Grid","fluid","SlicingOptions","slicing","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","helpers","toggleHelper","AdditionalLightsNav","activeKey","margin","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","updateLight","updateLightPosition","lightState","AmbientLightOptions","ambientLight","updateAmbientLightColour","updateBackgroundColour","ambientLightColour","backgroundColour","updateBg","ReferenceOptions","reference","toggleBoundingShapeEnabled","updateGridSize","gridColour","updateReferenceColour","activeShape","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","tooltip","MenuContent","menuContent","Side","handleToggle","toggler","force","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","JSON","parse","stringify","pointLightColour","starting","Controller","ExternalToggle","Chronometer","begin","prevTime","Date","now","click","frames","time","addListeners","sample2","notify","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","body","appendChild","setTimeout","removeChild","revokeObjectURL","save","getData","view","genSets","info","setDefaultStates","externalToggle","load","fileReader","FileReader","onloadend","result","err","readAsText","loadSample","sample1","sample3","sample4","convertQMGA","dataURL","toDataURL","replace","link","getHeader","getSidebar","getDomElement","requestAnimationFrame","overflow","addEventListener","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cea0ab2c.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    args;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.args = arguments[0];\n        this.isPreset = false;\n        this.LOD = 1;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.args,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.args[0],\n            length = this.args[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.args[0],\n            radCircle = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.args[0],\n            zCut = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","\nexport var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    DoubleSide,\n\n} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    shininess;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n\n    positions = [];\n    orientations = [];\n    elements = []\n    meshes = [];\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null) {\n            this.name = this.shapeType;\n        }\n\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n    //deprecated\n    // constructor(name, orientationType, data, cp, ci) {\n    //     this.name = name;\n    //     this.orientationType = orientationType;\n\n    //     this.clippingPlanes = cp;\n    //     this.clipIntersection = ci;\n\n    //     this.setDefaults();\n    //     this.genGeometries();\n    //     this.genElementsDeprecated(data);\n    //     this.setElements();\n    //     this.genMeshes();\n\n    // }\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.shininess = 30;\n        this.lod = 1;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                console.log(elem.colourIndex);\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n\n            mat = new MeshPhongMaterial({\n                color: c,\n                side: DoubleSide,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: this.clipIntersection\n            });\n            mat.wireframe = this.wireframe;\n            mat.shininess = this.shininess;\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.translate(elem.position, geoms);\n            this.rotate(elem.euler, geoms);\n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        for (let i = 0; i < this.positions.length; i++) {\n            this.elements.push(new this.Element(this.positions[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        console.log(this.elements);\n        this.calculateDirector();\n        console.log(this.director);\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n        console.log(this.elements);\n    }\n\n    genElementsDeprecated(elements) {\n        let position, orientation, attributes, euler, nP;\n        let temp = [], colour = [];\n\n        console.log(elements);\n\n        for (let elem of elements) {\n\n            if (elem === \"\") {\n                return;\n            }\n\n            attributes = elem.split(\" \");\n\n            for (let a of attributes) {\n                temp.push(parseFloat(a));\n            }\n\n            attributes = temp;\n            temp = [];\n\n            console.log(attributes);\n            if (attributes.length !== 6) { break; }\n\n            position = attributes.slice(0, 3);\n            orientation = attributes.slice(3);\n\n            console.log(position);\n            console.log(orientation);\n\n            this.positions.push(position);\n            this.orientations.push(orientation);\n\n            euler = this.getRotations(this.orientationType, orientation);\n            colour = this.colourFromOrientation(euler);\n\n            nP = new this.Element(colour, position, euler);\n            this.elements.push(nP);\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateX(e.x);\n            g.rotateY(e.y);\n            g.rotateZ(e.z);\n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let defaultVector = new Vector3(0, 0, 1);\n                q.setFromUnitVectors(defaultVector, new Vector3(rot[0], rot[1], rot[2]));\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        console.log('elements length');\n        console.log(n);\n\n        if (this.elements.length == 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        console.log(orderTensor)\n\n        let eigen = eigs(orderTensor);\n\n        console.log(eigen);\n        \n        //returns index of max eigenvalue\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        console.log(index);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm == 0 || norm == NaN || norm == undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = Math.round(1000* (2 * (   q.w*q.y + q.x*q.z )))/1000;\n            let b = Math.round(1000* (2 * ( - q.w*q.x + q.y*q.z )))/1000;\n            let c = Math.round(1000* (1 - 2 * ( q.x**2 + q.y**2 )))/1000;\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight\n} from 'three';\n\nexport class Light {\n    light;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Tools {\n    subGrid;\n    axes = [];\n    boundingShape;\n    boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.genAxes();\n        this.genSubgrid();\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n\n        this.boundingShape = null;\n\n        if (this.setsGeometry == null) {\n            let geometries = [];\n            for (let set of sets) {\n                for (let elem of set.elements) {\n                    geometries.push(BufferGeometryUtils.mergeBufferGeometries(elem.geometries));\n                }\n            }\n            this.setsGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n        }\n\n\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                this.setsGeometry.computeBoundingBox()\n                box.copy(this.setsGeometry.boundingBox);\n                this.boundingShape = new Box3Helper(box, this.colour);\n                break;\n            case 'sphere':\n                this.setsGeometry.computeBoundingSphere();\n                let sphere = this.setsGeometry.boundingSphere;\n                let geom = new SphereBufferGeometry(sphere.radius, 10, 10);\n                geom.translate(sphere.center.x, sphere.center.y, sphere.center.z);\n                let material = new MeshBasicMaterial({ color: this.colour });\n                material.wireframe = true;\n                this.boundingShape = new Mesh(geom, material);\n                break;\n            case 'cylinder':\n                // this.boundingShape.copy(this.setsGeometry.computeBoundingBox());\n                 break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n        }\n\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n        this.genAxes();\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        this.genAxes();\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n}\n\nexport default Tools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport Tools from './Tools.js'\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    boundingShapeEnabled = false;\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n\n    constructor() {\n        this.scene = new Scene();\n        this.setDefault();\n    }\n\n    setDefault() {\n        this.selectedSet = 0;\n        this.initClippers();\n\n        this.renderer = new WebGLRenderer({ antialias: true, preserveDrawingBuffer: true });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new Tools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 1;\n    }\n\n    getData() {\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            model.sets.push(temp);\n        }\n        return model;\n    }\n\n    update() {\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 50),\n            new Plane(new Vector3(-1, 0, 0), 50),\n            new Plane(new Vector3(0, 1, 0), 50),\n            new Plane(new Vector3(0, -1, 0), 50),\n            new Plane(new Vector3(0, 0, 1), 50),\n            new Plane(new Vector3(0, 0, -1), 50)\n        ];\n\n        this.clippingHelpers = [\n            new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n            new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)\n        ];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n    }\n\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n            this.camera.zoom = 30;\n            this.camera.updateProjectionMatrix();\n        }\n\n        this.camera.position.z = -30;\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n    }\n    \n    updateCameraPosition(p){\n        let x = p.r * Math.sin(p.psi) * Math.cos(p.theta);\n        let y = p.r * Math.sin(p.psi) * Math.sin(p.theta);\n        let z = p.r * Math.cos(p.psi);\n\n        this.camera.position.set(x, y, z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    toggleCameraRotation() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    updateModel(id, params, f) {\n        console.log(this.sets);\n        console.log(id);\n\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateModel(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateModel(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateModel(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShininess(id, val) {\n        this.updateModel(id, [id, val], (id, val) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shininess = val;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n\n    //used for qmga conversion\n    load(data) {\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        \n\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-50.0}\n                        max={50.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\nimport View from './View';\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.f = props.f;\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    updateDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions);\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.updateDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginLeft: 15 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nconst SamplesDropdown = ({ ...props }) => (\n\n    <Dropdown {...props} onSelect={props.f}>\n\n        <Dropdown.Item eventKey={1}>Sample (Unit Vector Orientations)</Dropdown.Item>\n        <Dropdown.Item eventKey={2}>Sample (Quaternion Orientations)</Dropdown.Item>\n        <Dropdown.Item eventKey={3}>Fig1: Large Conf (Position Error)</Dropdown.Item>\n        <Dropdown.Item eventKey={4}>HBC (Position Error)</Dropdown.Item>\n        <Dropdown.Item panel style={{ padding: 5, width: 120 }}></Dropdown.Item>\n\n\n    </Dropdown>\n);\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Performance\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"dashboard\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Level of Detail</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                    </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\nclass Top extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n\n        this.state = { fps: 50.00, showDrawer: false };\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n    }\n    toggleDrawer() {\n        this.setState({\n          showDrawer: !this.state.showDrawer\n        });\n      }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2)\n        });\n    }\n\n    render() {\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item appearance=\"subtle\" disabled={true} icon={<Icon icon=\"info-circle\" />}>Manual</Nav.Item>\n                                    <PerformanceDropdown model={this.model} />\n                                    <SamplesDropdown title=\"Library\" trigger='click' f={this.functions[3]} placement=\"bottomEnd\" icon={<Icon icon=\"folder-o\" />} />\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"book\" />}>Notes</Nav.Item>\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label for=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav pullLeft>\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'xs'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>Information About System</Drawer.Title>\n                    </Drawer.Header>\n                    <Drawer.Body>\n                    Coarse-grained modeling of molecular fluids is often based on non-spherical convex rigid bodies like ellipsoids or spherocylinders representing rodlike or platelike molecules or groups of atoms, with site-site interaction potentials depending both on the distance among the particles and the relative orientation. In this category of potentials, the Gay-Berne family has been studied most extensively.<br/><br/>\n                     However, conventional molecular graphics programs are not designed to visualize such objects. Usually the basic units are atoms displayed as spheres, or as vertices in a graph. Atomic aggregates can be highlighted through an increasing amount of stylized representations, e.g., Richardson ribbon diagrams for the secondary structure of a protein, Connolly molecular surfaces, density maps, etc., but ellipsoids \n                     and spherocylinders are generally missing, especially as elementary simulation units. <br/><br/> We fill this gap providing and discussing a customized OpenGL-based program for the interactive, rendered representation of large ensembles of convex bodies, useful especially in liquid crystal research. We pay particular attention to the performance issues for typical system sizes in this feld. The code is distributed as open source. \n                    <br/><br/>\n                    <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA Homepage</a>\n                    <br/><br/>\n                    <a href=\"https://pubs.acs.org/doi/10.1021/ct700192z\" target=\"_blank\" rel=\"noopener noreferrer\">DOI 10.1021/ct700192z</a>\n                    </Drawer.Body>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default Top;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateShininess = this.updateShininess.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n    updateShininess(val) {\n        this.setState({\n            shininess: val\n        });\n        View.state.model.configurations[this.state.active].shininess = val;\n        this.model.updateShininess(this.state.active, val)\n    }\n\n    updateUserColour(value, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n    }\n\n    updateParameter(val, index) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[index] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[index] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Shininess </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={configState.shininess} f={this.updateShininess} />\n\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.selectCameraType = this.selectCameraType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updateCameraPosition = this.updateCameraPosition.bind(this);\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        View.state.camera.rotating = !View.state.camera.rotating;\n        this.model.toggleCameraRotation();\n    }\n    selectCameraType(value) {\n        this.setState({\n            type: value\n        });\n        View.state.camera.type = value;\n        this.model.setCamera(value);\n    }\n\n    updateCameraPosition(value, type) {\n        let position = this.state.position;\n\n        if (value != NaN && value != null) {\n        switch (type) {\n            case 0:\n                position.r = parseFloat(value);\n                break;\n            case 1:\n                position.theta = parseFloat(value);\n                break;\n            case 2:\n                position.psi = parseFloat(value);\n                break;\n            default:\n                Alert.error('Error: Unexpected Camera Position Input');\n                return;\n        }\n        }\n\n        this.model.updateCameraPosition(position);\n        View.state.camera.position = position;\n    }\n\n    updateLookat(value, type) {\n        let lookAt = this.state.lookAt;\n\n        if (value != NaN && value != null) {\n            switch (type) {\n                case 0:\n                    lookAt.x = parseFloat(value);\n                    break;\n                case 1:\n                    lookAt.y = parseFloat(value);\n                    break;\n                case 2:\n                    lookAt.z = parseFloat(value);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Look At Input');\n                    return;\n            }\n        }\n\n        this.model.updateLookAt(lookAt);\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const rotating = this.state.rotating;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = [this.state.position.r, this.state.position.theta, this.state.position.psi]\n\n        return (\n            <div >\n\n                <Divider><strong style={dividerStyle}> Camera </strong></Divider>\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectCameraType}>\n                                <p>Type</p>\n                                <Radio defaultChecked value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox checked={rotating} onClick={this.toggleAutorotate}> AutoRotate</Checkbox>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Camera Position</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"r\", \"theta\", \"psi\"]} values={cameraPosition} f={this.updateCameraPosition} step={0.5} styling={submenuParameterSetStyling} />\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing;\n        this.model = props.model;\n\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n    }\n\n    updateSlicer(i, vals) {\n        switch (i) {\n            case 0:\n                View.state.slicing.x = vals;\n                break;\n            case 1:\n                View.state.slicing.y = vals;\n                break;\n            case 2:\n                View.state.slicing.z = vals;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, vals);\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={true} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n\n\n    }\n    updateColour(value, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n    }\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = value;\n                break;\n            case 'y':\n                position.y = value;\n                break;\n            case 'z':\n                position.z = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox disabled={true}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateAmbientLightColour = this.updateAmbientLightColour.bind(this);\n        this.updateBackgroundColour = this.updateBackgroundColour.bind(this);\n    }\n    updateAmbientLightColour(value, type) {\n        let colour = this.state.ambientLightColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBackgroundColour(value, type) {\n        let colour = this.state.backgroundColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateAmbientLightColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateAmbientLightColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateAmbientLightColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateAmbientLightColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBackgroundColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBackgroundColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBackgroundColour} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n\n    }\n    updateColour(value, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = value;\n                break;\n            case 'g':\n                rgb.g = value;\n                break;\n            case 'b':\n                rgb.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(value) {\n        this.model.updateGridSize(value);\n        View.state.reference.size = value;\n    }\n    toggleBoundingShapeEnabled() {\n        let toggle = !View.state.reference.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        View.state.reference.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(this.state.activeShape, toggle);\n    }\n    selectShape(value) {\n        this.setState({\n            activeShape: value\n        });\n        View.state.reference.activeShape = value;\n        this.model.updateBoundingShape(value, this.state.boundingShapeEnabled);\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        const enabled = this.state.boundingShapeEnabled;\n        const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Elements </strong></Divider>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={enabled} onClick={this.toggleBoundingShapeEnabled}> Bounding Shape </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    <Radio disabled={!enabled} value=\"sphere\" >Sphere </Radio>\n                                    {/* TO DO CYLINDER */}\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio>\n\n                                </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={showAxes} onClick={this.toggleAxes}> Show Axes</Checkbox>\n                            <Checkbox checked={showGrid} onClick={this.toggleGrid}> Show Grid</Checkbox>\n                        </Col>\n                    </Row>\n\n                    <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                    <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n\n                </Grid>\n\n                <Divider><strong style={dividerStyle}> Colour </strong></Divider>\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox disabled={true}> Multi-Colour Axes </Checkbox>\n                    </Col>\n                </Row>\n                <br />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\" tooltip eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item eventKey=\"View\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Ambient Light\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Other Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav pullLeft>\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions model={model} />);\n                break;\n            case \"View\":\n                menuContent.push(<CameraOptions model={model} />);\n                break;\n            case \"Ambient Light\":\n                menuContent.push(<AmbientLightOptions model={model} />);\n                break;\n            case \"Other Lighting\":\n                menuContent.push(<AdditionalLightOptions model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions model={model} />);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass Side extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.force = () => {\n            if (this.state.expand){\n                this.handleToggle();\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent active={active} expand={expand} onChange={this.handleToggle} model={this.model} />\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default Side;","import React from \"react\";\nimport Top from './Top';\nimport Side from './Side';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <Top chronometer={chrono} functions={io} model={this.model} />;\n        this.sidebar = <Side model={this.model} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n    updateFPS(fps){\n        this.fps = fps;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateShininess(i, substate.shininess);\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.controls.autoRotate = state.camera.rotating;\n        this.model.setCamera(state.camera.type);\n        this.model.updateLookAt(state.camera.lookAt);\n    }\n\n    setDefaultStates(starting) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        if (!starting) {\n            this.loadLightingAndCamera(View.state);\n            this.loadReferenceAndSlicing(View.state);\n            this.loadModel(View.state);\n            \n        }\n    }\n\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: []\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-50, 50],\n        y: [-50, 50],\n        z: [-50, 50]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.2, 0.4, 0.8]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        shininess: 30,\n        colourFromDirector: true,\n        displayAsWireframe: true\n    }\n\n    CameraDefaultState = {\n        rotating: false,\n        type: 'perspective',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            r: 10,\n            theta: 3.1,\n            psi: 0\n        }\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport sample1 from './Samples/1.json';\nimport sample2 from './Samples/2.json';\nimport sample3 from './Samples/fig1.json';\nimport sample4 from './Samples/hbc.json';\n\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        this.io = [this.save, this.load, this.export, this.loadSample];\n        this.chronometer = new this.Chronometer();\n        this.externalToggle = new this.ExternalToggle();\n        this.model = new Model();\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 6000\n            })\n        );\n    }\n\n    ExternalToggle = class ExternalToggle {\n        force = () => { }\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor() {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = Date.now();\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        begin = () => {\n            this.prevTime = Date.now();\n        }\n\n        click = () => {\n            this.frames++;\n            var time = Date.now();\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n            }\n        }\n    };\n\n    start = () => {\n        this.addListeners();\n        this.generate(sample2, true);\n        this.chronometer.begin();\n        this.render();\n\n        this.notify('info', 'Welcome!',\n            (<p style={{ width: 320 }} >\n                Use your mouse to control the camera. See 'Performance' tab if it's running slowly. Please check out both samples!\n            </p>)\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 30000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            Alert.info(\"Setting default viewing state.\");\n            this.view.setDefaultStates(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n        this.externalToggle.force();\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data, false);\n                Alert.info('File loaded successfully.');\n            } catch (err) {\n                Alert.error(err);\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n\n    }\n\n    loadSample = (id) => {\n        switch (id) {\n            case 1:\n                this.generate(sample1, false);\n                Alert.info('File loaded successfully.');\n                break;\n            case 2:\n                this.generate(sample2, false);\n                Alert.info('File loaded successfully.');\n                break;\n            case 3:\n                this.generate(sample3, false);\n                Alert.info('File loaded successfully.');\n                break;\n            case 4:\n                this.generate(sample4, false);\n                Alert.info('File loaded successfully.');\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n        }\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/png\", 1.0).replace(\"image/png\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.png\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                <a href=\"https://www.ucl.ac.uk/prospective-students/undergraduate/degrees/computer-science-bsc\" target=\"_blank\" rel=\"noopener noreferrer\">Here</a>\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    render = () => {\n        this.model.update();\n        this.chronometer.click();\n        requestAnimationFrame(this.render);\n    }\n\n    addListeners = () => {\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.view.expanded = false;\n                View.state.camera.rotating = !View.state.camera.rotating;\n                this.model.toggleCameraRotation();\n            }\n            // //a\n            // if (key == 65) {\n            //     this.model.toggleAxes();\n            // }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
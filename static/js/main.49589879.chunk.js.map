{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/Tools.js","Model/Model.js","View/Tools.js","View/Top.js","View/SubMenus.js","View/Side.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","args","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","parameters","clear","SphereBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cylinder","Torus","Set","data","cp","ci","positions","orientations","elements","meshes","Element","p","q","position","orientation","quaternionToUnitVector","euler","Euler","setFromQuaternion","colourIndex","w","z","Model","rgbToHex","colour","geoms","geometries","name","orientationType","clippingPlanes","clipIntersection","setDefaults","shapeType","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","lod","constant","toggle","material","m","c","mat","elem","rgb","colourMap","values","MeshPhongMaterial","color","shininess","Mesh","shape","clone","rotate","translate","setGeometries","getRotations","calculateDirector","setColourIndex","calculateColourIndex","SHAPE","generate","pos","console","log","e","rotateZ","rotateY","rotateX","rot","Quaternion","orientationVector","Vector3","setFromUnitVectors","set","setFromAxisAngle","fromArray","setFromEuler","round","_x","_y","_z","n","orderTensor","factor","eigen","eigs","index","reduce","iMax","arr","director","vectors","norm","NaN","element","scalarProduct","abs","hex","val","Light","lightType","setDefaultLights","light","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","helper","DirectionalLightHelper","PointLight","PointLightHelper","AMBIENT","DIRECTIONAL","POINT","Tools","s","axes","size","LineBasicMaterial","linewidth","multicolour","genMulticolourAxes","genSubgrid","R","G","B","boundingShapeType","setsGeometry","sets","boundingShape","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","computeBoundingSphere","sphere","boundingSphere","geom","center","MeshBasicMaterial","genAxes","subGrid","GridHelper","axesSize","Line","setFromPoints","mat1","mat2","mat3","updateColour","chronometer","notify","gridEnabled","axesEnabled","boundingShapeEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","rotating","cameraPostion","lightHelperWarningGiven","selectedSet","initClippers","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","powerPreference","setPixelRatio","window","devicePixelRatio","localClippingEnabled","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","step","updateCameraZoom","updateLightPosition","deleteAllMeshes","testMaterial","MeshLambertMaterial","testShape","testTotal","testLimit","style","width","children","remove","model","render","click","clippingIntersections","Plane","clippingHelpers","PlaneHelper","visible","toggleClipIntersection","updateSlicers","height","innerHeight","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","cameraPosition","controls","OrbitControls","domElement","target","update","aspect","left","right","top","bottom","updateProjectionMatrix","zoom","updateCamera","r","b","enabled","warning","updatePosition","passGrid","passAxes","passShape","toggleGrid","toggleAxes","updateBoundingShape","toggleMulticolour","updateSize","a","autoRotate","genBoundingShape","id","params","f","updateModel","setUserColour","setData","ps","particleSets","split","particleSet","slice","random","componentToHex","ParameterSet","props","titles","title","numerical","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","min","value","InputBox","defaultVal","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","max","nextValue","end","parseFloat","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","export","trigger","placement","icon","Icon","marginRight","Button","appearance","onClick","SamplesDropdown","state","updateKey","setState","Menu","padding","PerformanceDropdown","updateVal","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","Top","continuousRender","requestAnimationFrame","functions","toggler","fps","showDrawer","updateFPS","toggleDrawer","toggleAutorotate","runPerformanceTest","autorotate","closeSidemenu","info","initTesting","testing","toFixed","Header","Navbar","Body","Nav","pullRight","spin","display","className","accept","files","for","pullLeft","Drawer","show","onHide","backdrop","Title","href","rel","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","CameraOptions","selectType","updateLookat","updateZoom","updateCameraPosition","updateLookAt","controlId","RadioGroup","Radio","Grid","fluid","SlicingOptions","slicing","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","helpers","toggleHelper","AdditionalLightsNav","activeKey","margin","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","toggleLightHelper","updateLight","lightState","AmbientLightOptions","ambientLight","updateAmbientLightColour","updateBackgroundColour","ambientLightColour","backgroundColour","updateBg","ReferenceOptions","reference","toggleBoundingShapeEnabled","updateGridSize","gridColour","updateReferenceColour","activeShape","toggleAxesMulticolour","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","tooltip","MenuContent","menuContent","Side","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","chrono","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","JSON","parse","stringify","pointLightColour","starting","Controller","ExternalToggle","Chronometer","externalToggle","logPerformance","rawPerformanceData","counter","tick","avgPerformanceData","mean","stdPerformanceData","std","addRandomParticles","frames","prevTime","Date","now","time","sample2","addListeners","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","body","appendChild","setTimeout","removeChild","revokeObjectURL","save","getData","view","genSets","setDefaultStates","load","fileReader","FileReader","onloadend","result","success","readAsText","loadSample","sample","sample1","sample3","sample4","sample5","sample6","sample7","sample8","sample9","sample10","sample11","sample12","sample13","sample14","convertQMGA","dataURL","toDataURL","replace","link","getHeader","getSidebar","getDomElement","addEventListener","overflow","onkeydown","key","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49589879.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    args;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.args = arguments[0];\n        this.isPreset = false;\n        this.LOD = 2;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, 2*this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.args,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.args[0],\n            length = this.args[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.args[0],\n            radCircle = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.args[0],\n            zCut = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","\nexport var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.2, 0.4, 0.8]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cylinder: {\n        names: ['Top', 'Bottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color\n\n} from 'three';\nimport {eigs} from 'mathjs';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\nimport colourMap from './ColourMap.json';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n    colourMap;\n\n    positions = [];\n    orientations = [];\n    elements = []\n    meshes = [];\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n\n        this.setDefaults();\n\n        if (data.shapeType != null) {\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null) {\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null) {\n            this.name = this.shapeType;\n        }\n\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.lod = 2;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                let rgb = colourMap.values[elem.colourIndex];\n                c = new Color(Model.rgbToHex(...rgb));\n            } else {\n                c = this.userColour;\n            }\n\n            mat = new MeshPhongMaterial({\n                color: c,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: this.clipIntersection,\n                shininess: 40\n            });\n            mat.wireframe = this.wireframe;\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.rotate(elem.euler, geoms);\n            this.translate(elem.position, geoms);\n            \n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        for (let i = 0; i < this.positions.length; i++) {\n            this.elements.push(new this.Element(this.positions[i], this.getRotations(this.orientationType, this.orientations[i])));\n        }\n        this.calculateDirector();\n        for(let elem of this.elements){\n            elem.setColourIndex(this.calculateColourIndex(elem));\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        console.log(pos);\n        for (let g of geoms) {\n            g.translate(2*pos[0], 2*pos[1], 2*pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateZ(e.z);\n            g.rotateY(e.y);\n            g.rotateX(e.x);\n            \n            \n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        switch (type) {\n            case 'v':\n                let orientationVector = new Vector3(rot[0], rot[1], rot[2])\n                orientationVector.normalize();\n                q.setFromUnitVectors(new Vector3(0, 0, 1), orientationVector);\n                break;\n            case 'q':\n                q.set(rot[1], rot[2], rot[3], rot[0]);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                break;\n            case 'e':\n                let e = new Euler();\n                e.fromArray(rot);\n                q.setFromEuler(e)\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        q.normalize();\n\n        return q;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n\n        return colour;\n    }\n\n    calculateDirector() {\n        let n = this.elements.length;\n\n        if (this.elements.length == 0) {\n            Alert.error('Error: No elements in set, director calculation failed.');\n            return;\n        }\n\n        let orderTensor = [[0,0,0],[0,0,0],[0,0,0]];\n        //let eigenvectorsInColumns = new Matrix3();\n\n        let factor = 3 / (2 * n);\n        let constant = 0.5;\n\n        let orientation;\n\n        // loop over all molecules and calculate order tensor\n        for (let i = 0; i < n; ++i) {\n            orientation = this.elements[i].orientation;\n            orderTensor[0][0] += orientation[0]**2;\n            orderTensor[0][1] += orientation[0]*orientation[1];\n            orderTensor[0][2] += orientation[0]*orientation[2];\n            orderTensor[1][1] += orientation[1]**2;\n            orderTensor[1][2] += orientation[1]*orientation[2];\n            orderTensor[2][2] += orientation[2]**2;\n        }\n\n        // multiply each tensor value with \"factor\" and afterwards subtract \"subtract\" from diagonal elements\n        orderTensor[0][0] *= factor; orderTensor[0][0] -= constant;\n        orderTensor[0][1] *= factor;\n        orderTensor[0][2] *= factor;\n        orderTensor[1][1] *= factor; orderTensor[1][1] -= constant;\n        orderTensor[1][2] *= factor;\n        orderTensor[2][2] *= factor; orderTensor[2][2] -= constant;\n\n        // mirror matrix to make it symmetric\n        orderTensor[1][0] = orderTensor[0][1];\n        orderTensor[2][0] = orderTensor[0][2];\n        orderTensor[2][1] = orderTensor[1][2];\n\n        let eigen = eigs(orderTensor);\n        \n        //returns index of max eigenvalue\n        //this line of code is a bit dodgy\n        let index = eigen.values.reduce((iMax, x, i, arr) => x > arr[iMax] ? i : iMax, 0);\n\n        this.director = eigen.vectors[index];\n\n        let norm = Math.sqrt(this.director[0]**2 + this.director[1]**2 + this.director[2]**2);\n\n        if (norm == 0 || norm == NaN || norm == undefined){\n            this.director = [0,0,1];\n        }else{\n            this.director[0] /= norm;\n            this.director[1] /= norm;\n            this.director[2] /= norm;\n        }\n\n        // TEST!\n    }\n\n    calculateColourIndex(element){\n        let n = colourMap.values.length - 1;\n\n        let scalarProduct = Math.abs(element.orientation[0] * this.director[0]\n            + element.orientation[1] * this.director[1]\n            + element.orientation[2] * this.director[2]);\n\n        if (scalarProduct > 1){scalarProduct = 1;}\n\n        return Math.round(Math.acos( scalarProduct )/Math.PI*2*( n ));;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        orientation;\n        position;\n        colourIndex;\n        euler;\n\n        constructor(p, q) {\n            this.position = p;\n            this.orientation = this.quaternionToUnitVector(q);\n\n            this.euler = new Euler();\n            this.euler.setFromQuaternion(q);\n            this.colourIndex = 0;\n        }\n\n        quaternionToUnitVector(q){\n            let a = (2 * (   q.w*q.y + q.x*q.z ));\n            let b = (2 * ( - q.w*q.x + q.y*q.z ));\n            let c = (1 - 2 * ( q.x**2 + q.y**2 ));\n            return [a,b,c];\n        }\n\n        setColourIndex(i){\n            this.colourIndex = i;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight,\n    DirectionalLightHelper,\n    PointLightHelper\n} from 'three';\n\nexport class Light {\n    light;\n    helper;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                this.helper = new DirectionalLightHelper(this.light, 10);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                this.helper = new PointLightHelper(this.light, 10);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    Color,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Tools {\n    subGrid;\n    axes = [];\n    boundingShape;\n    boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n    R;G;B;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.multicolour = true;\n        this.genMulticolourAxes();\n        this.genSubgrid();\n\n        this.R = new Color(\"rgb(255, 0, 0)\");\n        this.G = new Color(\"rgb(0, 255, 0)\");\n        this.B = new Color(\"rgb(0, 0, 255)\");\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n\n        this.boundingShape = null;\n\n        if (this.setsGeometry == null) {\n            let geometries = [];\n            for (let set of sets) {\n                for (let elem of set.elements) {\n                    geometries.push(BufferGeometryUtils.mergeBufferGeometries(elem.geometries));\n                }\n            }\n            this.setsGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n        }\n\n\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                this.setsGeometry.computeBoundingBox()\n                box.copy(this.setsGeometry.boundingBox);\n                this.boundingShape = new Box3Helper(box, this.colour);\n                break;\n            case 'sphere':\n                this.setsGeometry.computeBoundingSphere();\n                let sphere = this.setsGeometry.boundingSphere;\n                let geom = new SphereBufferGeometry(sphere.radius, 10, 10);\n                geom.translate(sphere.center.x, sphere.center.y, sphere.center.z);\n                let material = new MeshBasicMaterial({ color: this.colour });\n                material.wireframe = true;\n                this.boundingShape = new Mesh(geom, material);\n                break;\n            case 'cylinder':\n                // this.boundingShape.copy(this.setsGeometry.computeBoundingBox());\n                 break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n        }\n\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 5\n        });\n        if(!this.multicolour){\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.genAxes();\n        }\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n    genMulticolourAxes(){\n        this.axes = [];\n        let axesSize = this.size / 2;\n        let mat1, mat2, mat3;\n        mat1 = new LineBasicMaterial({\n            color: this.R,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), mat1));\n        mat2 = this.material = new LineBasicMaterial({\n            color: this.G,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), mat2));\n        mat3 = this.material = new LineBasicMaterial({\n            color: this.B,\n            linewidth: 5\n        });\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), mat3));\n    }\n\n    toggleMulticolour(){\n        this.multicolour = !this.multicolour;\n        if(this.multicolour){\n            this.genMulticolourAxes();\n        }else{\n            this.updateColour(this.colour);\n            this.genAxes();\n        }\n    }\n\n}\n\nexport default Tools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane,\n    MeshLambertMaterial,\n    MeshPhongMaterial,\n    MeshStandardMaterial,\n    Mesh\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport Tools from './Tools.js'\nimport { Alert } from 'rsuite'\nimport * as SHAPE from './Shapes.js';\nimport Parameters from './Parameters';\n\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n\n\n    gridEnabled = false;\n    axesEnabled = false;\n    boundingShapeEnabled = false;\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n    cameraPosition;\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n\n    constructor(chronometer, notify) {\n        this.scene = new Scene();\n        this.chronometer = chronometer;\n        this.setDefault();\n        this.notify = notify;\n    }\n\n    setDefault() {\n        this.rotating = false;\n        this.cameraPostion = null;\n        this.lightHelperWarningGiven = false;\n        this.selectedSet = 0;\n        this.initClippers();\n        this.renderer = new WebGLRenderer({ antialias: false, preserveDrawingBuffer: false, powerPreference: \"high-performance\" });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new Tools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 2;\n    }\n\n    initTesting(step) {\n        // set desirable testing view\n        this.setCamera('orthographic');\n        this.updateCameraZoom(8);\n        this.updateLightPosition(2, {x: 50, y: 0, z:50});\n\n        this.deleteAllMeshes();\n\n        this.testMaterial = new MeshLambertMaterial();\n        this.testShape = new SHAPE.Preset('Torus', Parameters.Torus.vals);\n        this.testShape.LOD = 2;\n        this.testShape.generate();\n        this.testTotal = 0;\n        this.testLimit = 3001;\n\n\n        this.notify('info', 'Initialising Performance Test',\n        (<p style={{ width: 320 }} >\n            Test Size: {this.testLimit.toString()} <br/>\n            Step: {step.toString()} <br/>\n            Shape: Ellipsoid (Default Parameters) <br/>\n            Level of Detail: {(this.testShape.LOD + 1).toString()} <br/>\n            Material: MeshLambertMaterial\n        </p>));\n\n        console.log('Material: MeshLambertMaterial')\n        console.log('Shape: Ellipsoid (Default Parameters)')\n        console.log('LOD: ' + (this.testShape.LOD + 1).toString())\n        console.log('Test Size: '+this.testLimit.toString)\n        console.log('Test Step: '+ step.toString());\n    }\n\n    deleteAllMeshes(){\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\n            if(this.scene.children[i].type === \"Mesh\")\n                this.scene.remove(this.scene.children[i]);\n        }\n    }\n\n    getData() {\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            model.sets.push(temp);\n            temp = {};\n        }\n        return model;\n    }\n\n    update() {\n        this.renderer.render(this.scene, this.camera);\n        if (!this.rotating) {\n            this.chronometer.click();\n        }\n    }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 50),\n            new Plane(new Vector3(-1, 0, 0), 50),\n            new Plane(new Vector3(0, 1, 0), 50),\n            new Plane(new Vector3(0, -1, 0), 50),\n            new Plane(new Vector3(0, 0, 1), 50),\n            new Plane(new Vector3(0, 0, -1), 50)\n        ];\n\n        this.clippingHelpers = [\n            new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n            new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)\n        ];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n    }\n\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n        }\n\n        if (this.cameraPosition != null) {\n            this.camera.position.set(...this.cameraPosition);\n        }\n\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n        this.update();\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / - 2;\n        }\n        this.camera.updateProjectionMatrix();\n        this.update();\n    }\n\n    updateCameraZoom(val) {\n        this.camera.zoom = val;\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateCameraPosition(p) {\n        \n        this.cameraPosition = [p.x, p.y, p.z];\n        this.camera.position.set(p.x, p.y, p.z);\n        this.controls.update();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n        this.updateCamera();\n    }\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n        if (type != 0) {\n            this.lighting[type].helper.update();\n        }\n    }\n\n    toggleLightHelper(type, toggle) {\n        if (toggle) {\n            if (this.bgColour == '#ffffff' && !this.lightHelperWarningGiven) {\n                Alert.warning('If the background colour and light colour are the same, the light helper may not be visible.');\n                this.lightHelperWarningGiven = true;\n            }\n            this.lighting[type].helper.update();\n            this.scene.add(this.lighting[type].helper);\n        } else {\n            this.scene.remove(this.lighting[type].helper);\n        }\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n        this.lighting[type].helper.update();\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled && !this.tools.multicolour) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    toggleAxesMulticolour() {\n        let passAxes = false;\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        this.tools.toggleMulticolour();\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n        this.rotating = !this.rotating;\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    updateModel(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateModel(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateModel(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateModel(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n\n    toggleWireframe(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n\n    //used for qmga conversion\n    load(data) {\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n    addRandomParticles(n) {\n\n        this.testTotal += n;\n\n        if(this.testTotal >= this.testLimit){\n            return true;\n        }\n\n        let geoms = [];\n        let m;\n        for (let i = 0; i < n; i++) {\n\n            if (this.testShape.isPreset) {\n                geoms.push(this.testShape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.testShape.stripGeometry.clone());\n                geoms.push(this.testShape.fanGeometries[0].clone());\n                geoms.push(this.testShape.fanGeometries[1].clone());\n            }\n\n\n            this.translate([Math.random() * 100 - 50, Math.random() * 100 - 50, Math.random() * 100 - 50], geoms);\n            for (let g of geoms) {\n                m = new Mesh(g, this.testMaterial);\n                this.scene.add(m);\n            }\n\n            geoms = [];\n        }\n\n\n        return false;\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={10} />\n                    <Col md={14}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-50.0}\n                        max={50.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, Drawer, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip, Divider, Alert } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\nimport View from './View';\nimport { render } from '@testing-library/react';\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.f = props.f;\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    updateDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions);\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n\n                <ParameterSet f={this.updateDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginRight: 25 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nclass SamplesDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { active: 2 };\n        this.f = props.f;\n\n        this.updateKey = this.updateKey.bind(this);\n    }\n\n    updateKey(val) {\n        this.setState({\n            active: val\n        });\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <Dropdown \n            title=\"Library\"\n            trigger='click'\n            placement=\"bottomEnd\"\n            icon={<Icon icon=\"database\" />}\n            appearance='subtle'\n            onSelect={(eventKey) => {\n                this.f(eventKey);\n\n            }}>\n                <Dropdown.Item eventKey={14}>Single Molecule</Dropdown.Item>\n                <Dropdown.Menu title=\"Samples\">\n                    <Dropdown.Item eventKey={1}>Unit Vector Orientations</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>Quaternion Orientations</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Spherocylinders\">\n                    <Dropdown.Item eventKey={3}>SC4 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>SC4 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>SC4 Smectic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Prolate and Oblate Ellipsoids\">\n                    <Dropdown.Item eventKey={6}>E5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>E5 Nematic</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>O5 Isotropic</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>O5 Nematic</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Dense Crystal Packings\">\n                    <Dropdown.Item eventKey={10}>Box Crystal (Small)</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>Box Crystal (Large)</Dropdown.Item>\n                </Dropdown.Menu>\n                <Dropdown.Menu title=\"Other\">\n                    <Dropdown.Item eventKey={12}>Fig1</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>HBC</Dropdown.Item>\n                </Dropdown.Menu>\n                \n                <Dropdown.Item panel style={{ padding: 5, width: 120 }}></Dropdown.Item>\n\n\n            </Dropdown>\n        );\n\n    }\n}\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = { val: props.model.lod + 1 };\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Level of Detail\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"sliders\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Adjust LOD</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                            </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                        this.model.update();\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\nclass Top extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.functions = props.functions;\n        this.toggler = props.toggler;\n        this.state = { fps: 0, showDrawer: false, rotating: false };\n        this.updateFPS = this.updateFPS.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.runPerformanceTest = this.runPerformanceTest.bind(this);\n\n        this.chronometer = props.chronometer;\n        this.chronometer.f = this.updateFPS;\n\n        this.toggler.autorotate = () => {\n            this.toggleAutorotate();\n        }\n\n\n    }\n\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        this.model.toggleAutorotate();\n        if (this.model.rotating) {\n            this.toggler.closeSidemenu();\n        }\n        this.continuousRender();\n    }\n\n    runPerformanceTest(){\n        Alert.info(\"To modify testing parameters, see 'initTesting()' in Model class.\");\n\n        this.model.initTesting(this.chronometer.step);\n\n        if(!this.state.rotating){\n            this.toggleAutorotate();\n        }\n\n        this.chronometer.testing = true;\n    }\n\n    continuousRender = () => {\n        this.model.update();\n        this.chronometer.click();\n        this.model.controls.update();\n        if (this.model.rotating) {\n            requestAnimationFrame(this.continuousRender);\n        }\n    }\n\n    toggleDrawer() {\n        this.setState({\n            showDrawer: !this.state.showDrawer\n        });\n    }\n\n    updateFPS(fps) {\n        this.setState({\n            fps: fps.toFixed(2)\n        });\n    }\n\n    render() {\n        const fps = this.state.fps;\n        const showDrawer = this.state.showDrawer;\n        const rotating = this.state.rotating;\n        return (\n            <div>\n                <Header style={{ height: 56 }}>\n                    <Navbar>\n                        <Navbar.Body>\n                            <Nav pullRight >\n                                <ButtonToolbar>\n                                    <Nav.Item active>fps: {fps}</Nav.Item>\n                                    <Nav.Item active={rotating} onClick={this.toggleAutorotate} appearance=\"subtle\" icon={<Icon icon=\"refresh\" spin={rotating} />}>Autorotate</Nav.Item>\n                                    <Nav.Item onClick={this.runPerformanceTest} appearance=\"subtle\" icon={<Icon icon=\"dashboard\" />}>Run Performance Test</Nav.Item>\n                                    <PerformanceDropdown model={this.model} />\n                                    <Nav.Item appearance=\"subtle\" disabled={true} icon={<Icon icon=\"info-circle\" />}>Manual</Nav.Item>\n                                    <Nav.Item onClick={this.toggleDrawer} appearance=\"subtle\" icon={<Icon icon=\"book\" />}>Notes</Nav.Item>\n                                    \n                                    <SamplesDropdown f={this.functions[3]} />\n\n                                    <ExportDropdown f={this.functions[2]} />\n                                    <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={this.functions[0]}>Save</Nav.Item>\n                                    <input type=\"file\"\n                                        id=\"upload-btn\"\n                                        style={{ display: 'none' }}\n                                        className='input-file'\n                                        accept='.json,.webmga'\n                                        onChange={e => this.functions[1](e.target.files[0])} />\n                                    <label for=\"upload-btn\">\n                                        <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                    </label>\n\n                                </ButtonToolbar>\n\n                            </Nav>\n                            <Nav pullLeft>\n                                <h6 style={{ padding: 20 }}> WebMGA</h6>\n                            </Nav>\n                        </Navbar.Body>\n                    </Navbar>\n                </Header>\n                <Drawer\n                    size={'xs'}\n                    placement={'right'}\n                    show={showDrawer}\n                    onHide={this.toggleDrawer}\n                    backdrop={false}\n                >\n                    <Drawer.Header>\n                        <Drawer.Title>Information About System</Drawer.Title>\n                    </Drawer.Header>\n                    <Drawer.Body>\n                        Coarse-grained modeling of molecular fluids is often based on non-spherical convex rigid bodies like ellipsoids or spherocylinders representing rodlike or platelike molecules or groups of atoms, with site-site interaction potentials depending both on the distance among the particles and the relative orientation. In this category of potentials, the Gay-Berne family has been studied most extensively.<br /><br />\n                     However, conventional molecular graphics programs are not designed to visualize such objects. Usually the basic units are atoms displayed as spheres, or as vertices in a graph. Atomic aggregates can be highlighted through an increasing amount of stylized representations, e.g., Richardson ribbon diagrams for the secondary structure of a protein, Connolly molecular surfaces, density maps, etc., but ellipsoids\n                     and spherocylinders are generally missing, especially as elementary simulation units. <br /><br /> We fill this gap providing and discussing a customized OpenGL-based program for the interactive, rendered representation of large ensembles of convex bodies, useful especially in liquid crystal research. We pay particular attention to the performance issues for typical system sizes in this feld. The code is distributed as open source.\n                    <br /><br />\n                        <a href=\"http://qmga.sourceforge.net/\" target=\"_blank\" rel=\"noopener noreferrer\">QMGA Homepage</a>\n                        <br /><br />\n                        <a href=\"https://pubs.acs.org/doi/10.1021/ct700192z\" target=\"_blank\" rel=\"noopener noreferrer\">DOI 10.1021/ct700192z</a>\n                    </Drawer.Body>\n                </Drawer>\n            </div>\n        );\n    }\n};\n\nexport default Top;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert, Whisper, Tooltip, Icon } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n\n    updateUserColour(value, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        this.model.update();\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n        this.model.update();\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n        this.model.update();\n    }\n\n    updateParameter(val, index) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[index] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[index] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.model.update();\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n        this.model.update();\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling} />\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.selectType = this.selectType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.updateZoom = this.updateZoom.bind(this);\n    }\n\n    updateZoom(value) {\n        this.setState({\n            zoom: value\n        });\n        this.model.updateCameraZoom(value);\n        this.model.update();\n        View.state.camera.zoom = value;\n    }\n    selectType(value) {\n        this.setState({\n            type: value\n        });\n        View.state.camera.type = value;\n        this.model.setCamera(value);\n        if (value == \"orthographic\") {\n            this.updateZoom(50);\n\n        } else {\n            this.updateZoom(1);\n        }\n\n    }\n\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        console.log(value);\n        console.log(type);\n\n\n        if (value != NaN && value != null) {\n            switch (type) {\n                case 'x':\n                    position.x = value;\n                    break;\n                case 'y':\n                    position.y = value;\n                    break;\n                case 'z':\n                    position.z = value;\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Camera Position Input');\n                    return;\n            }\n        }\n\n        this.model.updateCameraPosition(position);\n        this.model.update();\n        View.state.camera.position = position;\n    }\n\n    updateLookat(value, type) {\n        let lookAt = this.state.lookAt;\n\n        if (value != NaN && value != null) {\n            switch (type) {\n                case 0:\n                    lookAt.x = parseFloat(value);\n                    break;\n                case 1:\n                    lookAt.y = parseFloat(value);\n                    break;\n                case 2:\n                    lookAt.z = parseFloat(value);\n                    break;\n                default:\n                    Alert.error('Error: Unexpected Look At Input');\n                    return;\n            }\n        }\n\n        this.model.updateLookAt(lookAt);\n        this.model.update();\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const zoom = this.state.zoom;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n        const cameraPosition = this.state.position;\n\n\n        return (\n            <div>\n                <br />\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectType}>\n                                <p><b>Type</b></p>\n                                <Radio value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Position</b></p>\n                        </Col>\n                    </Row>\n\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.x} f={this.updatePosition} type={'x'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.y} f={this.updatePosition} type={'y'} />\n                    <CustomSlider boundaries={[-50, 50]} val={cameraPosition.z} f={this.updatePosition} type={'z'} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Zoom </b></p>\n                        </Col>\n                    </Row>\n                    <CustomSlider key={cameraType} boundaries={[1, 100]} val={zoom} f={this.updateZoom} />\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Look at</b></p>\n                        </Col>\n                    </Row>\n                    <ParameterSet titles={[\"x\", \"y\", \"z\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling} />\n\n                </Grid>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing;\n        this.model = props.model;\n\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n        this.model.update();\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n        this.model.update();\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n        this.model.update();\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n        this.model.update();\n    }\n\n    updateSlicer(i, vals) {\n        switch (i) {\n            case 0:\n                View.state.slicing.x = vals;\n                break;\n            case 1:\n                View.state.slicing.y = vals;\n                break;\n            case 2:\n                View.state.slicing.z = vals;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, vals);\n        this.model.update();\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={true} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n        this.toggleHelper = this.toggleHelper.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n\n    toggleHelper() {\n        let helper = !this.state.helper;\n        this.setState({\n            helper: helper\n        });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.helper = helper;\n            this.model.toggleLightHelper(2, helper);\n            this.model.update();\n        } else {\n            View.state.directionalLight.helper = helper;\n            this.model.toggleLightHelper(1, helper);\n            this.model.update();\n        }\n    }\n\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n    }\n\n    updateColour(value, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n        this.model.update();\n    }\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = value;\n                break;\n            case 'y':\n                position.y = value;\n                break;\n            case 'z':\n                position.z = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n        this.model.update();\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox checked={lightState.helper} onClick={this.toggleHelper}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateAmbientLightColour = this.updateAmbientLightColour.bind(this);\n        this.updateBackgroundColour = this.updateBackgroundColour.bind(this);\n    }\n    updateAmbientLightColour(value, type) {\n        let colour = this.state.ambientLightColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        this.model.update();\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBackgroundColour(value, type) {\n        let colour = this.state.backgroundColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        this.model.update();\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateAmbientLightColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateAmbientLightColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateAmbientLightColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateAmbientLightColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBackgroundColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBackgroundColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBackgroundColour} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n        this.toggleMulticolour = this.toggleMulticolour.bind(this);\n\n    }\n    updateColour(value, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = value;\n                break;\n            case 'g':\n                rgb.g = value;\n                break;\n            case 'b':\n                rgb.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        this.model.update();\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(value) {\n        this.model.updateGridSize(value);\n        this.model.update();\n        View.state.reference.size = value;\n    }\n    toggleBoundingShapeEnabled() {\n        let toggle = !View.state.reference.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        View.state.reference.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(this.state.activeShape, toggle);\n        this.model.update();\n    }\n    selectShape(value) {\n        this.setState({\n            activeShape: value\n        });\n        View.state.reference.activeShape = value;\n        this.model.updateBoundingShape(value, this.state.boundingShapeEnabled);\n        this.model.update();\n    }\n    toggleMulticolour() {\n        this.setState({\n            multicolour: !this.state.multicolour\n        });\n        this.model.toggleAxesMulticolour();\n        this.model.update();\n        View.state.reference.multicolour = !View.state.reference.multicolour;\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        this.model.update();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        this.model.update();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        const enabled = this.state.boundingShapeEnabled;\n        const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        const multicolour = this.state.multicolour;\n        return (\n            <div>\n\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Bounding Shape </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={enabled} onClick={this.toggleBoundingShapeEnabled}>  Show </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    <Radio disabled={true} value=\"sphere\" >Sphere </Radio>\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio>\n\n                                </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Axes </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showAxes} onClick={this.toggleAxes}> Show</Checkbox>\n\n                        </Col>\n                    </Row>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox style={{ marginLeft: 12 }} checked={multicolour} onClick={this.toggleMulticolour}> Multi-Colour</Checkbox>\n\n\n                        </Col>\n                        <Col xs={4}>\n                            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                                <Tooltip>\n                                    X : RED <br /> Y : GREEN <br /> Z : BLUE\n                            </Tooltip>\n                            }>\n                                <Icon style={{ marginTop: 8 }} icon=\"question-circle\" size=\"lg\" />\n                            </Whisper>\n                        </Col>\n                    </Row>\n\n\n\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p><b> Grid </b></p>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox style={{ marginLeft: 12 }} checked={showGrid} onClick={this.toggleGrid}> Show</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <br />\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56;\n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n            <Nav {...props} activeKey={active} onSelect={onSelect} style={{ backgroundColor: '#101010', height: sidebarHeight }}>\n                <Nav.Item title=\"Models\" tooltip eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n                </Nav.Item>\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Camera\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Ambient Light\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Other Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n                {/* </Whisper> */}\n                {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n                <Nav.Item eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n                {/* </Whisper> */}\n\n            </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div style={{ backgroundColor: '#0F131B' }}>\n                <Nav>\n                    <Navbar appearance=\"subtle\">\n                        <Nav pullLeft>\n                            <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                        </Nav>\n                        <Nav pullRight>\n                            <NavToggle expand={expand} onChange={onChange} />\n                        </Nav>\n                    </Navbar>\n\n                </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions model={model} />);\n                break;\n            case \"Camera\":\n                menuContent.push(<CameraOptions model={model} />);\n                break;\n            case \"Ambient Light\":\n                menuContent.push(<AmbientLightOptions model={model} />);\n                break;\n            case \"Other Lighting\":\n                menuContent.push(<AdditionalLightOptions model={model} />);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions model={model} />);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass Side extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.toggler = props.toggler;\n        \n        this.toggler.closeSidemenu = () => {\n            if (this.state.expand){\n                this.handleToggle();\n            }\n        }\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\"\n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent active={active} expand={expand} onChange={this.handleToggle} model={this.model} />\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default Side;","import React from \"react\";\nimport Top from './Top';\nimport Side from './Side';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io, chrono, toggler) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <Top chronometer={chrono} functions={io} model={this.model} toggler ={toggler}/>;\n        this.sidebar = <Side model={this.model} sidebarExpanded={this.expanded} toggler={toggler}/>;\n    }\n\n    updateFPS(fps){\n        this.fps = fps;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.toggleLightHelper(1, state.directionalLight.helper);\n        this.model.toggleLightHelper(2, state.pointLight.helper);\n        this.model.setCamera(state.camera.type);\n\n        this.model.updateCameraPosition(state.camera.position);\n        this.model.updateLookAt(state.camera.lookAt);\n        \n        this.model.updateCameraZoom(state.camera.zoom);\n    }\n\n    setDefaultStates(starting) {\n        View.state = {};\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n        View.state.model.configurations = [];\n        View.state.model.sets = [];\n\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        this.loadLightingAndCamera(View.state);\n        this.loadReferenceAndSlicing(View.state);\n\n        if (!starting) {\n            this.loadModel(View.state);\n        }\n    }\n\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: []\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-50, 50],\n        y: [-50, 50],\n        z: [-50, 50]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.2, 0.4, 0.8]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        colourFromDirector: true,\n        displayAsWireframe: true\n    }\n\n    CameraDefaultState = {\n        type: 'orthographic',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        },\n        position: {\n            x: 0,\n            y: 0,\n            z: -15\n        },\n        zoom: 50\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        helper: false,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        multicolour: true,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { std, mean } from 'mathjs';\n\nimport sample1 from './Samples/dummy-vector.json';\nimport sample2 from './Samples/dummy-quaternion.json';\nimport sample3 from './Samples/sc4-isotropic.json';\nimport sample4 from './Samples/sc4-nematic.json';\nimport sample5 from './Samples/sc4-smectic.json';\nimport sample6 from './Samples/e5-isotropic.json';\nimport sample7 from './Samples/e5-nematic.json';\nimport sample8 from './Samples/o5-isotropic.json';\nimport sample9 from './Samples/o5-nematic.json';\nimport sample10 from './Samples/bx-crystal.json';\nimport sample11 from './Samples/bx-crystal-2.json';\nimport sample12 from './Samples/fig1.json';\nimport sample13 from './Samples/hbc.json';\nimport sample14 from './Samples/single.json'\n\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        this.io = [this.save, this.load, this.export, this.loadSample, this.toggleAutorotate];\n        this.externalToggle = new this.ExternalToggle();\n        this.chronometer = new this.Chronometer(this.notify, this.externalToggle);\n\n        this.model = new Model(this.chronometer, this.notify);\n        this.view = new View(this.model, this.io, this.chronometer, this.externalToggle);\n\n        Alert.config(\n            ({\n                top: 70,\n                duration: 8000\n            })\n        );\n    }\n\n    ExternalToggle = class ExternalToggle {\n        closeSidemenu = () => { }\n        autorotate = () => { }\n    }\n\n    Chronometer = class Chronometer {\n\n        constructor(notify, externalToggle) {\n            this.fps = 0;\n            this.frames = 0;\n            this.prevTime = null;\n            this.model = null;\n\n            this.notify = notify;\n            this.externalToggle = externalToggle;\n\n            this.step = 200;\n            this.tick = 12;\n            this.testing = false;\n            this.counter = 0;\n            this.rawPerformanceData = [];\n            this.avgPerformanceData = [];\n            this.stdPerformanceData = [];\n        }\n\n        f = (n) => {\n            //is initialised in Header React Component\n        }\n\n        fps = () => {\n            return this.fps;\n        }\n\n        logPerformance = () => {\n            this.rawPerformanceData.push(this.fps);\n            if (this.counter == this.tick) {\n\n                this.avgPerformanceData.push(mean(this.rawPerformanceData));\n                this.stdPerformanceData.push(std(this.rawPerformanceData));\n                this.rawPerformanceData = [];\n                this.counter = 0;\n\n                this.notify('info', ' Test Update ('+this.model.testTotal.toString()+' Molecules)',\n                    (<p style={{ width: 320 }} >\n                        <b>FPS</b> <br/>\n                        Average: {this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()} <br />\n                        Standard Deviation: {this.stdPerformanceData[this.stdPerformanceData.length - 1].toString()} <br/>\n                    </p>));\n\n                console.log('# of Molecules: ' + this.model.testTotal.toString() + ' FPS - Avg:  ' + this.avgPerformanceData[this.avgPerformanceData.length - 1].toString()\n                    + 'Std: ' + this.stdPerformanceData[this.stdPerformanceData.length - 1].toString())\n\n                if (this.model.addRandomParticles(this.step)) {\n                    this.testing = false;\n                    this.model.deleteAllMeshes();\n                    \n                    console.log('Average FPS');\n                    console.log(this.avgPerformanceData);\n                    console.log('Std FPS');\n                    console.log(this.stdPerformanceData);\n\n                    this.externalToggle.autorotate();\n\n                    this.notify('success', 'Test Completed Succesfully',\n                    (<p style={{ width: 320 }} >\n                        All molecules deleted. Please see console output for a list of average FPS and standard deviations.\n                    </p>));\n\n                }\n            }\n            this.counter++;\n        }\n\n\n        click = () => {\n            this.frames++;\n\n            if (this.prevTime == null) {\n                this.prevTime = Date.now();\n            }\n\n            var time = Date.now();\n\n\n            if (time > this.prevTime + 1000) {\n                this.fps = (this.frames * 1000) / (time - this.prevTime);\n\n                if (this.testing) {\n                    this.logPerformance();\n                }\n\n                this.prevTime = time;\n                this.frames = 0;\n                this.f(this.fps);\n\n\n            }\n        }\n    };\n\n\n    start = () => {\n        this.chronometer.model = this.model;\n\n        this.generate(sample2, true);\n        this.addListeners();\n        this.render();\n        this.notify('info', 'Welcome!',\n            (<p style={{ width: 320 }} >\n                This application works best on the Chrome browser. Check out Liquid Crystal configurations in the Library!\n            </p>)\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 15000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.model.genSets(data.model.sets);\n        if (data.state == null) {\n            Alert.info(\"Setting default viewing state.\");\n            this.view.setDefaultStates(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n        this.model.update();\n        this.externalToggle.closeSidemenu();\n\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.model = new Model(this.chronometer, this.notify);\n                this.generate(data, false);\n                Alert.success('File loaded successfully.');\n            } catch {\n                Alert.error('Error: Please review uploaded file. See manual for help.');\n                return;\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n\n    }\n\n    loadSample = (id) => {\n        let sample;\n\n        switch (id) {\n            case 1:\n                sample = sample1;\n                break;\n            case 2:\n                sample = sample2;\n                break;\n            case 3:\n                sample = sample3;\n                break;\n            case 4:\n                sample = sample4;\n                break;\n            case 5:\n                sample = sample5;\n                break;\n            case 6:\n                sample = sample6;\n                break;\n            case 7:\n                sample = sample7;\n                break;\n            case 8:\n                sample = sample8;\n                break;\n            case 9:\n                sample = sample9;\n                break;\n            case 10:\n                sample = sample10;\n                break;\n            case 11:\n                sample = sample11;\n                break;\n            case 12:\n                sample = sample12;\n                break;\n            case 13:\n                sample = sample13;\n                break;\n            case 14:\n                sample = sample14;\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n                return;\n        }\n\n        this.generate(sample, false);\n        Alert.success('File loaded successfully.');\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/png\", 1.0).replace(\"image/png\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.png\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                Image exported successfully.\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSidebar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    render = () => {\n        this.model.update();\n    }\n\n    addListeners = () => {\n\n        this.model.controls.addEventListener('change', this.render);\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.externalToggle.autorotate();\n\n                if (this.chronometer.testing) {\n                    this.chronometer.testing = false;\n                }\n            }\n            // //a\n            if (key == 65) {\n                console.log(this.model.camera.position);\n            }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSidebar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
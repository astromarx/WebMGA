{"version":3,"sources":["Model/Shapes.js","Model/Parameters.js","Model/Set.js","Model/Light.js","Model/Tools.js","Model/Model.js","View/Tools.js","View/Top.js","View/SubMenus.js","View/Side.js","View/View.js","Controller.js","App.js","index.js"],"names":["Shape","levels","stripGeometries","fanGeometries","this","args","arguments","isPreset","LOD","complexity","presetGeometry","vertices","normals","type","g","BufferGeometry","setAttribute","BufferAttribute","Float32Array","from","localeCompare","BufferGeometryUtils","toTrianglesDrawMode","TriangleStripDrawMode","push","TriangleFanDrawMode","stripGeometry","mergeBufferGeometries","vec","scale","undefined","Math","pow","length","sqrt","map","x","Preset","parameters","clear","SphereBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","TorusBufferGeometry","Alert","error","Ellipsoid","genGeometries","mergeGeometries","actComplexity","piece","temp","currLevel","PI","i","j","sin","cos","normalize","addGeometry","Spherocylinder","radius","y","Spheroplatelet","radSphere","radCircle","plusZ","minusZ","projectionUp","projectionDown","CutSphere","zCut","angle","acos","radiusFan","Parameters","names","vals","Sphere","Cone","Cylinder","Torus","Set","data","cp","ci","positions","orientations","elements","meshes","Element","c","p","e","colour","position","euler","Model","rgbToHex","geoms","geometries","name","orientationType","clippingPlanes","clipIntersection","setDefaults","shapeType","validateData","genElements","setElements","genMeshes","toString","defaultParameters","getParameters","userColour","Color","colourByDirector","wireframe","shininess","lod","constant","toggle","material","m","mat","elem","getColour","MeshPhongMaterial","color","side","DoubleSide","Mesh","shape","clone","translate","rotate","setGeometries","getRotations","colourFromOrientation","orientation","attributes","nP","console","log","split","a","parseFloat","slice","SHAPE","generate","pos","rotateX","rotateY","rotateZ","z","rot","q","Quaternion","Euler","defaultVector","Vector3","setFromUnitVectors","setFromQuaternion","fromArray","setFromAxisAngle","round","_x","_y","_z","hex","val","Light","lightType","setDefaultLights","light","set","setHex","parseInt","substring","intensity","AmbientLight","DirectionalLight","PointLight","AMBIENT","DIRECTIONAL","POINT","Tools","s","axes","size","LineBasicMaterial","linewidth","genAxes","genSubgrid","boundingShapeType","setsGeometry","sets","boundingShape","box","Box3","computeBoundingBox","copy","boundingBox","Box3Helper","computeBoundingSphere","sphere","boundingSphere","geom","center","MeshBasicMaterial","subGrid","GridHelper","axesSize","Line","setFromPoints","gridEnabled","axesEnabled","boundingShapeEnabled","sidebarExpanded","cameraType","scene","Scene","setDefault","selectedSet","initClippers","renderer","WebGLRenderer","antialias","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","localClippingEnabled","lookAt","updateDimensions","setCamera","lighting","tools","bgColour","setClearColor","l","add","camera","model","controls","update","render","clippingIntersections","Plane","clippingHelpers","PlaneHelper","helper","visible","toggleClipIntersection","updateSlicers","height","innerHeight","width","innerWidth","setSize","PerspectiveCamera","OrthographicCamera","zoom","updateProjectionMatrix","OrbitControls","domElement","target","aspect","left","right","top","bottom","r","b","enabled","updateColour","updatePosition","rgb","passGrid","passAxes","passShape","toggleGrid","toggleAxes","updateBoundingShape","updateSize","remove","autoRotate","genBoundingShape","id","params","f","updateModel","setUserColour","setData","ps","particleSets","particleSet","componentToHex","ParameterSet","props","titles","title","values","numerical","index","step","positive","styling","ParameterInput","active","selectingSet","changeValue","bind","min","value","InputBox","defaultVal","style","InputNumber","defaultValue","onChange","act","listItems","Dropdown","Item","eventKey","onSelect","panel","ButtonToolbar","marginLeft","Row","marginTop","Col","md","React","Component","SliceSlider","useState","setValue","InputGroup","max","nextValue","end","Addon","start","RangeSlider","progress","CustomSlider","disabled","boundaries","Slider","marginBottom","ExportDropdown","dimensions","export","trigger","placement","icon","Icon","Button","marginRight","appearance","onClick","SamplesDropdown","padding","PerformanceDropdown","state","updateVal","setState","Form","layout","FormGroup","ControlLabel","Whisper","speaker","Tooltip","graduated","updateLOD","Top","Header","Navbar","Body","Nav","pullRight","fps","functions","display","className","accept","files","for","pullLeft","TITLE_LEFT_MARGIN","dividerStyle","submenuParameterSetStyling","ModelsOptions","View","selectShape","selectSet","updateParameter","toggleWireframe","toggleColour","updateShininess","updateUserColour","configurations","colourFromDirector","toggleUserColour","displayAsWireframe","parameter","globalState","configs","updateShape","reset","configState","Divider","xs","Checkbox","checked","CameraOptions","toggleAutorotate","selectCameraType","updateLookat","rotating","toggleCameraRotation","updateLookAt","controlId","RadioGroup","Radio","defaultChecked","Grid","fluid","SlicingOptions","slicing","toggleIntersection","toggleHelperX","toggleHelperY","toggleHelperZ","updateHelpers","updateSlicer","helpers","toggleHelper","AdditionalLightsNav","activeKey","margin","justified","AdditionalLightOptions","pointLight","handleSelect","toggleLightEnabled","directionalLight","updateLight","updateLightPosition","lightState","AmbientLightOptions","ambientLight","updateAmbientLightColour","updateBackgroundColour","ambientLightColour","backgroundColour","updateBg","ReferenceOptions","reference","toggleBoundingShapeEnabled","updateGridSize","gridColour","updateReferenceColour","activeShape","showAxes","showGrid","NavToggle","expand","IconButton","circle","textAlign","navItemStyle","sidebarHeight","CustomNav","backgroundColor","tooltip","MenuContent","menuContent","Side","handleToggle","toggleSidebar","Sidebar","flexDirection","collapsible","Container","vertical","Content","io","ModelDefaultState","SlicingDefaultState","ConfigurationDefaultState","CameraDefaultState","PointLightDefaultState","DirectionalLightDefaultState","ReferenceDefaultState","AmbientLightDefaultState","expanded","header","sidebar","loadLightingAndCamera","loadReferenceAndSlicing","loadModel","substate","xor","directionalLightColour","JSON","parse","stringify","pointLightColour","starting","Controller","addListeners","sample2","notify","download","filename","file","Blob","navigator","msSaveOrOpenBlob","document","createElement","url","URL","createObjectURL","href","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","save","getData","view","genSets","info","setDefaultStates","load","fileReader","FileReader","onloadend","result","err","readAsText","loadSample","sample1","convertQMGA","updateCamera","dataURL","toDataURL","replace","link","rel","getHeader","getSiderbar","getDomElement","requestAnimationFrame","overflow","addEventListener","onkeydown","keyCode","config","duration","description","Notification","App","controller","mount","ref","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7a78f91.chunk.js","sourcesContent":["import {\n    BufferGeometry,\n    BufferAttribute,\n    TriangleFanDrawMode,\n    TriangleStripDrawMode,\n    SphereBufferGeometry,\n    ConeBufferGeometry,\n    CylinderBufferGeometry,\n    TorusBufferGeometry\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Shape {\n\n    //complexity attributes\n    levels = 2;\n    LOD;\n    complexity;\n\n    //shape model attributes\n    args;\n\n    //graphics components\n    stripGeometries = [];\n    fanGeometries = [];\n    stripGeometry;\n    presetGeometry;\n\n    isPreset;\n\n    constructor() {\n        this.args = arguments[0];\n        this.isPreset = false;\n        this.LOD = 1;\n        this.complexity = [6,10,14,20,26];\n    }\n\n    clear(){\n        this.presetGeometry = [];\n        this.stripGeometries = [];\n        this.fanGeometries = [];\n    }\n\n    static normalize(vec, scale) {\n\n        if (scale !== undefined) {\n            vec[0] /= Math.pow(scale[0], 2.0);\n            vec[1] /= Math.pow(scale[1], 2.0);\n            vec[2] /= Math.pow(scale[2], 2.0);\n        }\n\n        let length = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2]);\n        vec = vec.map(x => x / length);\n\n        return vec;\n    }\n\n\n    addGeometry(vertices, normals, type) {\n        let g = new BufferGeometry();\n\n        g.setAttribute('position', new BufferAttribute(Float32Array.from(vertices), 3));\n        g.setAttribute('normal', new BufferAttribute(Float32Array.from(normals), 3));\n\n\n        if (type.localeCompare('strip') === 0) {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleStripDrawMode);\n            this.stripGeometries.push(g);\n        } else {\n            g = BufferGeometryUtils.toTrianglesDrawMode(g, TriangleFanDrawMode);\n            this.fanGeometries.push(g);\n        }\n\n    }\n\n    mergeGeometries() {\n        this.stripGeometry = BufferGeometryUtils.mergeBufferGeometries(this.stripGeometries);\n    }\n\n}\n\nexport class Preset extends Shape {\n\n    constructor(type, parameters) {\n        super();\n        this.isPreset = true;\n        this.type = type;\n        this.parameters = parameters;\n    }\n\n    generate(){\n        this.clear();\n\n        switch (this.type) {\n            case 'Sphere':\n                this.presetGeometry = new SphereBufferGeometry(this.parameters, this.complexity[this.LOD], this.complexity[this.LOD]);\n                break;\n            case 'Cone':\n                this.presetGeometry = new ConeBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Cylinder':\n                this.presetGeometry = new CylinderBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            case 'Torus':\n                this.presetGeometry = new TorusBufferGeometry(...this.parameters, this.complexity[this.LOD]);\n                break;\n            default:\n                Alert.error('Error: Unknown shape identifier');\n        }\n    }\n}\n\nexport class Ellipsoid extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            scale = this.args,\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        //renders ellipsoid body vertices and normals\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / ((actComplexity[1] + 1) * 2));\n\n            for (var i = 0; i < actComplexity[1] * 2; ++i) {\n                for (var j = 0; j < actComplexity[0] + 1; ++j) {\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 1) * piece[1]));\n                    }\n\n                    temp.push(Math.cos((i + 1) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(0.0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin((i + 2) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin((i + 2) * piece[1]));\n\n                    }\n                    temp.push(Math.cos((i + 2) * piece[1]) * scale[2]);\n\n                    vertices.push(...temp);\n                    normals.push(...Shape.normalize(temp, scale))\n                    temp = []\n\n                }\n\n            }\n\n        }\n        this.addGeometry(vertices, normals, 'strip');\n\n        vertices = [];\n        normals = [];\n\n        // renders ellipsoid top vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale));\n        temp = [];\n\n        for (j = 0; j < actComplexity[0] + 1; ++j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n        }\n\n        this.addGeometry(vertices, normals, 'fan');\n        vertices = [];\n        normals = []\n\n        // renders ellipsoid bottom vertices and normals\n        temp.push(0.0);\n        temp.push(0.0);\n        temp.push(-scale[2]);\n\n        vertices.push(...temp);\n        normals.push(...Shape.normalize(temp, scale))\n        temp = []\n\n        for (j = actComplexity[0]; j >= 0; --j) {\n            if (j === 0 || j === actComplexity[0]) {\n                temp.push(-scale[0] * Math.sin(piece[1]));\n                temp.push(0.0);\n            }\n            else {\n                temp.push(-Math.cos(j * piece[0]) * scale[0] * Math.sin(piece[1]));\n                temp.push(-Math.sin(j * piece[0]) * scale[1] * Math.sin(piece[1]));\n            }\n            temp.push(-Math.cos(piece[1]) * scale[2]);\n\n            vertices.push(...temp);\n            normals.push(...Shape.normalize(temp, scale))\n            temp = []\n\n        }\n        this.addGeometry(vertices, normals, 'fan');\n    }\n\n}\n\nexport class Spherocylinder extends Shape {\n\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let actComplexity = [],\n            piece = [],\n            radius = this.args[0],\n            length = this.args[1],\n            vertices,\n            normals,\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (- this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(actComplexity[0] / 4);\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(2 * Math.PI / (actComplexity[1] * 4));\n\n            for (let y = 0; y < (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] += length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            for (let y = actComplexity[1] - 1; y < 2 * (actComplexity[1] - 1); ++y) {\n\n                vertices = [];\n                normals = [];\n\n                for (let x = 0; x <= actComplexity[0]; ++x) {\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 1) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n\n                    if (x === 0 || x === actComplexity[0]) {\n                        temp.push(-1 * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                        temp.push(-Math.sin(x * piece[0]) * Math.sin((y + 2) * piece[1]) * radius);\n                    }\n                    temp.push(Math.cos((y + 2) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp))\n                    temp[2] -= length / 2;\n                    vertices.push(...temp);\n                    temp = [];\n                }\n\n                this.addGeometry(vertices, normals, 'strip');\n            }\n\n            normals = [];\n            vertices = [];\n\n            for (let x = 0; x <= actComplexity[0]; ++x) {\n\n                if (x === 0 || x === actComplexity[0]) {\n                    temp.push(-radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(x * piece[0]) * radius);\n                    temp.push(-Math.sin(x * piece[0]) * radius);\n                }\n                temp.push(0);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp[2] = 0;\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n\n            }\n\n            this.addGeometry(vertices, normals, 'strip');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] += length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j <= actComplexity[0]; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] += length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n            normals = [];\n            vertices = [];\n            temp[0] = 0;\n            temp[1] = 0;\n            temp[2] = -radius;\n\n            normals.push(...Shape.normalize(temp))\n            temp[2] -= length / 2;\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-Math.sin(piece[1]) * radius);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * Math.sin(piece[1]) * radius);\n                    temp.push(-Math.sin(j * piece[0]) * Math.sin(piece[1]) * radius);\n                }\n                temp.push(-Math.cos(piece[1]) * radius);\n\n                normals.push(...Shape.normalize(temp))\n                temp[2] -= length / 2;\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n}\n\nexport class Spheroplatelet extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radSphere = this.args[0],\n            radCircle = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            projectionUp = 0,\n            projectionDown = 0,\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push(Math.PI / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                projectionUp = radSphere * Math.sin(i * piece[1]);\n                projectionDown = radSphere * Math.sin((i + 1) * piece[1]);\n\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionUp);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionUp * Math.cos(j * piece[0]));\n                        temp.push(-projectionUp * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos(i * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-projectionDown);\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-projectionDown * Math.cos(j * piece[0]));\n                        temp.push(-projectionDown * Math.sin(j * piece[0]));\n                    }\n                    temp.push(Math.cos((i + 1) * piece[1]) * radSphere);\n\n                    normals.push(...Shape.normalize(temp));\n\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp[0] -= radCircle;\n                    }\n                    else {\n                        temp[0] -= radCircle * Math.cos(j * piece[0]);\n                        temp[1] -= radCircle * Math.sin(j * piece[0]);\n                    }\n\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(radSphere);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-radSphere);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radCircle);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radCircle);\n                    temp.push(-Math.sin(j * piece[0]) * radCircle);\n                }\n\n                temp.push(-radSphere);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n}\n\nexport class CutSphere extends Shape {\n\n    constructor() {\n        super(arguments);\n    }\n\n    generate(){\n        this.clear();\n        this.genGeometries();\n        this.mergeGeometries();\n    }\n\n    genGeometries() {\n        let radius = this.args[0],\n            zCut = this.args[1],\n            plusZ = [0, 0, 1],\n            minusZ = [0, 0, -1],\n            angle = Math.acos(zCut / radius),\n            radiusFan = radius * Math.sin(angle),\n            actComplexity = [],\n            piece = [],\n            vertices = [],\n            normals = [],\n            temp = [];\n\n        for (let currLevel = 0; currLevel < this.levels; ++currLevel) {\n            //calculates complexity of current render\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n            actComplexity.push(this.complexity[this.LOD] + currLevel * (-this.complexity[this.LOD]) / (this.levels - 1.0));\n\n            piece.push(2 * Math.PI / actComplexity[0]);\n            piece.push((Math.PI - 2 * angle) / (actComplexity[1] * 2));\n\n            for (let i = 0; i < actComplexity[1] * 2; ++i) {\n                for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                    // Upper part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + i * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + i * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + i * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n\n                    // Lower part of triangle strip\n                    if (j === 0 || j === actComplexity[0]) {\n                        temp.push(-radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(0);\n                    }\n                    else {\n                        temp.push(-Math.cos(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                        temp.push(-Math.sin(j * piece[0]) * radius * Math.sin(angle + (i + 1) * piece[1]));\n                    }\n                    temp.push(Math.cos(angle + (i + 1) * piece[1]) * radius);\n\n                    normals.push(...Shape.normalize(temp));\n                    vertices.push(...temp);\n                    temp = [];\n                }\n            }\n\n\n            this.addGeometry(vertices, normals, 'strip');\n            vertices = [];\n            normals = [];\n\n\n            // upper plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = 0; j < actComplexity[0] + 1; ++j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(zCut);\n                normals.push(...plusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n            vertices = [];\n            normals = [];\n\n\n\n            // lower plane\n            temp.push(0);\n            temp.push(0);\n            temp.push(-zCut);\n\n            normals.push(...Shape.normalize(temp));\n            vertices.push(...temp);\n            temp = [];\n\n            for (let j = actComplexity[0]; j >= 0; --j) {\n                if (j === 0 || j === actComplexity[0]) {\n                    temp.push(-radiusFan);\n                    temp.push(0);\n                }\n                else {\n                    temp.push(-Math.cos(j * piece[0]) * radiusFan);\n                    temp.push(-Math.sin(j * piece[0]) * radiusFan);\n                }\n\n                temp.push(-zCut);\n                normals.push(...minusZ);\n                vertices.push(...temp);\n                temp = [];\n            }\n\n            this.addGeometry(vertices, normals, 'fan');\n\n        }\n\n    }\n\n\n}\n","\nexport var Parameters = {\n    Ellipsoid: {\n        names: ['X', 'Y', 'Z'],\n        vals: [0.5, 0.2, 0.2]\n    },\n    Spherocylinder:{\n        names: ['Radius', 'Length'],\n        vals: [0.5, 0.7]\n    },\n    Spheroplatelet:{\n        names: ['RadSphere','RadCircle'],\n        vals:[0.3,0.2]\n    },\n    CutSphere: {\n        names: ['Radius','zCut'],\n        vals: [0.8, 0.2]\n    },\n    Sphere: {\n        names: ['Radius'],\n        vals: [0.6]\n    },\n    Cone: {\n        names: ['Radius','Height'],\n        vals: [0.8, 1.2]\n    },\n    Cylinder: {\n        names: ['RadiusTop', 'RadiusBottom', 'Height'],\n        vals: [0.5,0.5,2.0]\n    },\n    Torus:{\n        names:['Radius','Tube','Arc'],\n        vals:[1.0,0.3,6.3]\n    }\n}\n\nexport default Parameters;","import {\n    Mesh,\n    MeshPhongMaterial,\n    Vector3,\n    Quaternion,\n    Euler,\n    Color,\n    DoubleSide\n} from 'three';\nimport * as SHAPE from './Shapes.js';\nimport Model from './Model';\nimport Parameters from './Parameters';\nimport { Alert } from 'rsuite';\n\nexport class Set {\n    name;\n    shapeType;\n    parameters;\n    shape;\n    orientationType;\n    wireframe;\n    shininess;\n    userColour;\n    colourByDirector;\n    lod;\n    clippingPlanes;\n    clipIntersection;\n\n    positions = [];\n    orientations = [];\n    elements = []\n    meshes = [];\n\n    constructor(data, cp, ci) {\n        this.name = data.name;\n        this.orientationType = data.orientationType;\n        this.positions = data.positions;\n        this.orientations = data.orientations;\n        this.clippingPlanes = cp;\n        this.clipIntersection = ci;\n\n        this.setDefaults();\n\n        if (data.shapeType != null){\n            this.shapeType = data.shapeType;\n        }\n        if (data.parameters != null){\n            this.shapeType = data.parameters;\n        }\n        if (this.name == null){\n            this.name = this.shapeType;\n        }\n\n        this.validateData();\n        this.genGeometries();\n        this.genElements();\n        this.setElements();\n        this.genMeshes();\n    }\n\n\n    //deprecated\n    // constructor(name, orientationType, data, cp, ci) {\n    //     this.name = name;\n    //     this.orientationType = orientationType;\n\n    //     this.clippingPlanes = cp;\n    //     this.clipIntersection = ci;\n\n    //     this.setDefaults();\n    //     this.genGeometries();\n    //     this.genElementsDeprecated(data);\n    //     this.setElements();\n    //     this.genMeshes();\n\n    // }\n\n    validateData() {\n        if (this.positions.length !== this.orientations.length) {\n            throw 'Error: Position data does not correspond to orientation data. \\n Total positions: ' + this.positions.length + '\\n Total rotations: ' + this.orientations.length;\n        }\n\n        for (let p in this.parameters) {\n            if (p < 0) {\n                throw 'Error: Invalid parameter ' + p.toString() + ' for ' + this.name + '\\n Must be positive.';\n            }\n        }\n\n        let defaultParameters = Set.getParameters(this.shapeType);\n        if (this.parameters.length != defaultParameters.vals.length) {\n            throw 'Error: Wrong number of parameters specified for ' + this.name + '. \\n Required: ' + defaultParameters.names;\n        }\n    }\n\n    setDefaults() {\n        this.userColour = new Color(\"#FFFFFF\");\n        this.colourByDirector = true;\n        this.wireframe = true;\n        this.shininess = 30;\n        this.lod = 1;\n        this.shapeType = 'Ellipsoid';\n        this.parameters = Parameters.Ellipsoid.vals;\n    }\n\n    updateSlicers(i, vals) {\n        this.clippingPlanes[2 * i + 1].constant = vals[1];\n        this.clippingPlanes[2 * i].constant = -vals[0];\n    }\n\n    toggleClipIntersection(toggle) {\n        this.clipIntersection = toggle;\n        for (let mesh of this.meshes) {\n            mesh.material.clipIntersection = toggle;\n        }\n    }\n\n    genMeshes() {\n        let m;\n        let c;\n        let mat;\n\n        for (let elem of this.elements) {\n            if (this.colourByDirector) {\n                c = new Color(elem.getColour());\n            } else {\n                c = this.userColour;\n            }\n\n            mat = new MeshPhongMaterial({\n                color: c,\n                side: DoubleSide,\n                clippingPlanes: this.clippingPlanes,\n                clipIntersection: this.clipIntersection\n            });\n            mat.wireframe = this.wireframe;\n            mat.shininess = this.shininess;\n\n            for (let g of elem.geometries) {\n                m = new Mesh(g, mat);\n                this.meshes.push(m);\n            }\n        }\n    }\n\n    setElements() {\n        let geoms = [];\n\n        for (let elem of this.elements) {\n            if (this.shape.isPreset) {\n                geoms.push(this.shape.presetGeometry.clone());\n            }\n            else {\n                geoms.push(this.shape.stripGeometry.clone());\n                geoms.push(this.shape.fanGeometries[0].clone());\n                geoms.push(this.shape.fanGeometries[1].clone());\n            }\n\n            this.translate(elem.position, geoms);\n            this.rotate(elem.euler, geoms);\n            elem.setGeometries(geoms);\n\n            geoms = [];\n        }\n    }\n\n    genElements() {\n        let colour, euler;\n        for (let i = 0; i < this.positions.length; i++) {\n            euler = this.getRotations(this.orientationType, this.orientations[i]);\n            colour = this.colourFromOrientation(euler);\n            this.elements.push(new this.Element(colour, this.positions[i], euler));\n        }\n    }\n\n    genElementsDeprecated(elements) {\n        let position, orientation, attributes, euler, nP;\n        let temp = [], colour = [];\n\n        console.log(elements);\n\n        for (let elem of elements) {\n\n            if(elem === \"\"){\n                return;\n            }\n\n            attributes = elem.split(\" \");\n\n            for (let a of attributes) {\n                temp.push(parseFloat(a));\n            }\n\n            attributes = temp;\n            temp = [];\n\n            console.log(attributes);\n            if (attributes.length !== 6) { break; }\n\n\n\n            position = attributes.slice(0, 3);\n            orientation = attributes.slice(3);\n\n            console.log(position);\n            console.log(orientation);\n\n            this.positions.push(position);\n            this.orientations.push(orientation);\n\n            euler = this.getRotations(this.orientationType, orientation);\n            colour = this.colourFromOrientation(euler);\n\n            nP = new this.Element(colour, position, euler);\n            this.elements.push(nP);\n        }\n    }\n\n    genGeometries() {\n        switch (this.shapeType) {\n            case 'Ellipsoid':\n                this.shape = new SHAPE.Ellipsoid(...this.parameters);\n                break;\n            case 'Spherocylinder':\n                this.shape = new SHAPE.Spherocylinder(...this.parameters);\n                break;\n            case 'Spheroplatelet':\n                this.shape = new SHAPE.Spheroplatelet(...this.parameters);\n                break;\n            case 'Cut Sphere':\n                this.shape = new SHAPE.CutSphere(...this.parameters);\n                break;\n            case 'Sphere':\n                this.shape = new SHAPE.Preset('Sphere', this.parameters);\n                break;\n            case 'Cone':\n                this.shape = new SHAPE.Preset('Cone', this.parameters);\n                break;\n            case 'Cylinder':\n                this.shape = new SHAPE.Preset('Cylinder', this.parameters);\n                break;\n            case 'Torus':\n                this.shape = new SHAPE.Preset('Torus', this.parameters);\n                break;\n            default:\n                throw 'Error: unexpected shape identifier. \\n Found: ' + this.shapeType;\n        }\n\n        this.shape.LOD = this.lod;\n        this.shape.generate();\n    }\n\n    translate(pos, geoms) {\n        for (let g of geoms) {\n            g.translate(pos[0], pos[1], pos[2]);\n        }\n    }\n\n    rotate(e, geoms) {\n        for (let g of geoms) {\n            g.rotateX(e.x);\n            g.rotateY(e.y);\n            g.rotateZ(e.z);\n        }\n    }\n\n    getRotations(type, rot) {\n        let q = new Quaternion();\n        let e = new Euler();\n\n        switch (type) {\n            case 'v':\n                let defaultVector = new Vector3(0, 0, 1);\n                q.setFromUnitVectors(defaultVector, new Vector3(rot[0], rot[1], rot[2]));\n                e.setFromQuaternion(q);\n                break;\n            case 'q':\n                q.fromArray(rot);\n                e.setFromQuaternion(q);\n                break;\n            case 'a':\n                q.setFromAxisAngle(new Vector3(rot[0], rot[1], rot[2]), rot[3]);\n                e.setFromQuaternion(q);\n                break;\n            case 'e':\n                e.fromArray(rot);\n                break;\n            default:\n                throw 'Error: Unexpected rotation type value. \\n Found: ' + type + '\\n Expected: v | q | a | e';\n        }\n\n        return e;\n\n    }\n\n    colourFromOrientation(euler) {\n        let colour = [];\n\n        colour.push(Math.round((euler._x + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._y + Math.PI) / (2 * Math.PI) * (255)));\n        colour.push(Math.round((euler._z + Math.PI) / (2 * Math.PI) * (255)));\n        return colour;\n    }\n\n    setUserColour(hex) {\n        this.userColour = new Color(hex);\n    }\n\n    static getParameters(val) {\n        let parameters;\n\n        switch (val) {\n            case 'Ellipsoid':\n                parameters = Parameters.Ellipsoid;\n                break;\n            case 'Spherocylinder':\n                parameters = Parameters.Spherocylinder;\n                break;\n            case 'Spheroplatelet':\n                parameters = Parameters.Spheroplatelet;\n                break;\n            case 'Cut Sphere':\n                parameters = Parameters.CutSphere;\n                break;\n            case 'Sphere':\n                parameters = Parameters.Sphere;\n                break;\n            case 'Cone':\n                parameters = Parameters.Cone;\n                break;\n            case 'Cylinder':\n                parameters = Parameters.Cylinder;\n                break;\n            case 'Torus':\n                parameters = Parameters.Torus;\n                break;\n            default:\n                Alert.error('Error: Unexpected shape identifier');\n        }\n\n        return parameters;\n    }\n\n    Element = class Element {\n        geometries;\n        colour;\n        position;\n        euler;\n\n        constructor(c, p, e) {\n            this.colour = c;\n            this.position = p;\n            this.euler = e;\n        }\n\n        getColour() {\n            return Model.rgbToHex(this.colour[0], this.colour[1], this.colour[2]);\n        }\n\n        setGeometries(geoms) {\n            this.geometries = geoms;\n        }\n\n    }\n}\n\nexport default Set;","import { Alert } from 'rsuite';\nimport {\n    AmbientLight,\n    DirectionalLight,\n    PointLight\n} from 'three';\n\nexport class Light {\n    light;\n\n    static AMBIENT = 0;\n    static DIRECTIONAL = 1;\n    static POINT = 2;\n\n    constructor(lightType) {\n        this.setDefaultLights(lightType);\n    }\n\n    updatePosition(x, y, z){\n        this.light.position.set(x, y, z);\n    }\n\n    updateColour(c, i){\n        this.light.color.setHex(parseInt(c.substring(1), 16));\n        this.light.intensity = i * 0.01;\n    }\n\n    setDefaultLights(lightType) {\n        switch (lightType) {\n            case 'ambient':\n                this.light = new AmbientLight(\"#ffffff\", 0.4);\n                break;\n            case 'directional':\n                this.light = new DirectionalLight(\"#ffffff\", 0.5);\n                this.light.position.set(-5, 0, -5);\n                break;\n            case 'point':\n                this.light = new PointLight(\"#ffffff\", 0.6);\n                this.light.position.set(5, 0, 5);\n                break;\n            default:\n                Alert.error(\"Error: null light type selected\");\n                break;\n        }\n    }\n}\n\nexport default Light;","import {\n    GridHelper,\n    LineBasicMaterial,\n    Vector3,\n    BufferGeometry,\n    Line,\n    Box3Helper,\n    Box3,\n    SphereBufferGeometry,\n    MeshBasicMaterial,\n    Mesh\n} from 'three';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport {Alert} from 'rsuite';\n\nexport class Tools {\n    subGrid;\n    axes = [];\n    boundingShape;\n    boundingShapeType;\n    setsGeometry;\n    size;\n    colour;\n    material;\n\n    constructor(s, c) {\n        this.size = s;\n        this.colour = c;\n\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n\n        this.genAxes();\n        this.genSubgrid();\n\n        this.boundingShapeType = 'box';\n        this.setsGeometry = null;\n    }\n\n    genBoundingShape(type, sets) {\n        this.boundingShapeType = type;\n\n        this.boundingShape = null;\n\n        if (this.setsGeometry == null) {\n            let geometries = [];\n            for (let set of sets) {\n                for (let elem of set.elements) {\n                    geometries.push(BufferGeometryUtils.mergeBufferGeometries(elem.geometries));\n                }\n            }\n            this.setsGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n        }\n\n\n\n        switch (type) {\n            case 'box':\n                let box = new Box3();\n                this.setsGeometry.computeBoundingBox()\n                box.copy(this.setsGeometry.boundingBox);\n                this.boundingShape = new Box3Helper(box, this.colour);\n                break;\n            case 'sphere':\n                this.setsGeometry.computeBoundingSphere();\n                let sphere = this.setsGeometry.boundingSphere;\n                let geom = new SphereBufferGeometry(sphere.radius, 10, 10);\n                geom.translate(sphere.center.x, sphere.center.y, sphere.center.z);\n                let material = new MeshBasicMaterial({ color: this.colour });\n                material.wireframe = true;\n                this.boundingShape = new Mesh(geom, material);\n                break;\n            case 'cylinder':\n                // this.boundingShape.copy(this.setsGeometry.computeBoundingBox());\n                 break;\n            default:\n            Alert.error('Error: Unknown bounding shape identifier');\n        }\n\n\n\n        return this.boundingShape;\n\n    }\n\n\n    updateColour(colour) {\n        this.colour = colour;\n        this.material = new LineBasicMaterial({\n            color: this.colour,\n            linewidth: 3\n        });\n        this.genAxes();\n        this.genSubgrid();\n    }\n\n    updateSize(size) {\n        this.size = size;\n        this.genAxes();\n        this.genSubgrid();\n    }\n\n    genSubgrid() {\n        this.subGrid = new GridHelper(this.size, this.size, this.colour, this.colour);\n    }\n\n    genAxes() {\n        this.axes = [];\n        let axesSize = this.size / 2;\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(-axesSize, 0, 0), new Vector3(axesSize, 0, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, -axesSize, 0), new Vector3(0, axesSize, 0)]), this.material));\n        this.axes.push(new Line(new BufferGeometry().setFromPoints([new Vector3(0, 0, -axesSize), new Vector3(0, 0, axesSize)]), this.material));\n    }\n\n}\n\nexport default Tools;","import {\n    Scene,\n    WebGLRenderer,\n    PerspectiveCamera,\n    OrthographicCamera,\n    Vector3,\n    PlaneHelper,\n    Plane\n} from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Set from './Set.js'\nimport Light from './Light.js'\nimport Tools from './Tools.js'\n\nexport class Model {\n    sets = [];\n\n    scene;\n    camera;\n    lighting;\n    bgColour;\n    controls;\n    lookAt;\n    tools;\n    renderer;\n\n    height;\n    width;\n\n    gridEnabled = false;\n    axesEnabled = false;\n    boundingShapeEnabled = false;\n    sidebarExpanded = false;\n\n    cameraType = 'perspective';\n\n    selectedSet;\n\n    planeConstants;\n    clippingPlanes;\n    clippingHelpers;\n    clipIntersections;\n\n    constructor() {\n        this.scene = new Scene();\n        this.setDefault();\n    }\n\n    setDefault() {\n        this.selectedSet = 0;\n        this.initClippers();\n\n        this.renderer = new WebGLRenderer({ antialias: true, preserveDrawingBuffer: true });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.localClippingEnabled = true;\n\n        this.lookAt = new Vector3(0, 0, 0);\n\n        this.updateDimensions();\n        this.setCamera(this.cameraType);\n\n        this.lighting = [\n            new Light('ambient'),\n            new Light('directional'),\n            new Light('point')];\n\n        this.tools = new Tools(50, 0xffffff);\n        this.bgColour = \"#000000\";\n        this.renderer.setClearColor(this.bgColour);\n\n        for (let l of this.lighting) {\n            this.scene.add(l.light);\n        }\n        this.scene.add(this.camera);\n        this.lod = 1;\n    }\n\n    getData() {\n        let model = {};\n        let temp = {};\n        model.sets = [];\n        for (let set of this.sets) {\n            temp.name = set.name;\n            temp.orientationType = set.orientationType;\n            temp.positions = set.positions;\n            temp.orientations = set.orientations;\n            model.sets.push(temp);\n        }\n        return model;\n    }\n\n    update() {\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    initClippers() {\n        this.clippingIntersections = false;\n\n        this.clippingPlanes = [\n            new Plane(new Vector3(1, 0, 0), 50),\n            new Plane(new Vector3(-1, 0, 0), 50),\n            new Plane(new Vector3(0, 1, 0), 50),\n            new Plane(new Vector3(0, -1, 0), 50),\n            new Plane(new Vector3(0, 0, 1), 50),\n            new Plane(new Vector3(0, 0, -1), 50)\n        ];\n\n        this.clippingHelpers = [\n            new PlaneHelper(this.clippingPlanes[0], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[1], 100, 0xff0000),\n            new PlaneHelper(this.clippingPlanes[2], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[3], 100, 0x00ff00),\n            new PlaneHelper(this.clippingPlanes[4], 100, 0x0000ff),\n            new PlaneHelper(this.clippingPlanes[5], 100, 0x0000ff)\n        ];\n\n        for (let helper of this.clippingHelpers) {\n            helper.visible = false;\n            this.scene.add(helper);\n        }\n    }\n\n    toggleClipIntersection(toggle) {\n        for (let set of this.sets) {\n            set.toggleClipIntersection(toggle);\n        }\n    }\n\n    toggleHelper(i, toggle) {\n        this.clippingHelpers[2 * i].visible = toggle;\n        this.clippingHelpers[2 * i + 1].visible = toggle;\n    }\n\n    updateSlicer(i, vals) {\n        for (let set of this.sets) {\n            set.updateSlicers(i, vals);\n        }\n    }\n\n    updateDimensions() {\n        this.height = (window.innerHeight - 56);\n\n        if (this.sidebarExpanded) {\n            this.width = window.innerWidth - 356;\n        } else {\n            this.width = window.innerWidth - 56;\n        }\n\n        this.renderer.setSize(this.width, this.height);\n    }\n\n    setCamera(type) {\n        this.cameraType = type;\n\n        if (type === 'perspective') {\n            this.camera = new PerspectiveCamera(50, this.width / this.height, 0.1, 1000);\n        } else {\n            this.camera = new OrthographicCamera(this.width / -2, this.width / 2, this.height / 2, this.height / -2, -100, 5000);\n            this.camera.zoom = 30;\n            this.camera.updateProjectionMatrix();\n        }\n\n        this.camera.position.z = -30;\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.target = this.lookAt;\n    }\n\n    updateCamera() {\n        if (this.cameraType === 'perspective') {\n            this.camera.aspect = this.width / this.height;\n        } else {\n            this.camera.left = this.width / - 2;\n            this.camera.right = this.width / 2;\n            this.camera.top = this.height / 2;\n            this.camera.bottom = this.height / 2;\n        }\n        this.camera.updateProjectionMatrix();\n    }\n\n    updateLookAt(l) {\n        this.lookAt = new Vector3(l.x, l.y, l.z);\n        this.controls.target = this.lookAt;\n        this.controls.update();\n\n    }\n\n    toggleSidebar() {\n        this.sidebarExpanded = !this.sidebarExpanded;\n        this.updateDimensions();\n    }\n\n    updateBg(colour) {\n        this.bgColour = Model.rgbToHex(colour.r, colour.g, colour.b);\n        this.renderer.setClearColor(this.bgColour);\n    }\n\n    toggleLight(type, enabled) {\n        this.lighting[type].visible = enabled;\n    }\n\n    updateLight(type, colour) {\n        this.lighting[type].updateColour(Model.rgbToHex(colour.r, colour.g, colour.b), colour.i);\n    }\n\n    updateLightPosition(type, pos) {\n        this.lighting[type].updatePosition(pos.x, pos.y, pos.z);\n    }\n\n    updateReferenceColour(rgb) {\n        let passGrid = false;\n        let passAxes = false;\n        let passShape = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n        if (this.boundingShapeEnabled) {\n            this.updateBoundingShape('', false);\n            passShape = true;\n        }\n        this.tools.updateColour(Model.rgbToHex(rgb.r, rgb.g, rgb.b));\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n        if (passShape) {\n            this.updateBoundingShape(this.tools.boundingShapeType, true);\n            passShape = true;\n        }\n    }\n\n    updateGridSize(size) {\n        let passGrid = false;\n        let passAxes = false;\n        if (this.gridEnabled) {\n            this.toggleGrid();\n            passGrid = true;\n        }\n        if (this.axesEnabled) {\n            this.toggleAxes();\n            passAxes = true;\n        }\n\n        this.tools.updateSize(size);\n\n        if (passGrid) {\n            this.toggleGrid();\n        }\n        if (passAxes) {\n            this.toggleAxes();\n        }\n    }\n\n\n    toggleGrid() {\n        this.gridEnabled = !this.gridEnabled;\n\n        if (this.gridEnabled) {\n            this.scene.add(this.tools.subGrid);\n        } else {\n            this.scene.remove(this.tools.subGrid);\n        }\n    }\n\n    toggleAxes() {\n        this.axesEnabled = !this.axesEnabled;\n\n        if (this.axesEnabled) {\n            for (let a of this.tools.axes) {\n                this.scene.add(a);\n            }\n        } else {\n            for (let a of this.tools.axes) {\n                this.scene.remove(a);\n            }\n        }\n\n\n    }\n\n    toggleCameraRotation() {\n        this.controls.autoRotate = !this.controls.autoRotate;\n    }\n\n    static rgbToHex(r, g, b) {\n        function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length === 1 ? \"0\" + hex : hex;\n        }\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n    }\n\n    updateBoundingShape(type, enabled) {\n        this.boundingShapeEnabled = enabled;\n        this.scene.remove(this.tools.boundingShape);\n        if (enabled) {\n            this.scene.add(this.tools.genBoundingShape(type, this.sets));\n        }\n    }\n\n\n    getParameters(val) {\n        return Set.getParameters(val);\n    }\n\n    updateModel(id, params, f) {\n        for (const m of this.sets[id].meshes) {\n            this.scene.remove(m);\n        }\n        f(...params);\n        for (const m of this.sets[id].meshes) {\n            this.scene.add(m);\n        }\n    }\n\n    getLOD() {\n        return this.lod;\n    }\n\n    updateLOD(val) {\n        this.lod = val;\n        for (let i = 0; i < this.sets.length; i++) {\n            this.updateModel(i, [i, val], (i, val) => {\n                this.sets[i].lod = val;\n                this.sets[i].meshes = [];\n                this.sets[i].genGeometries();\n                this.sets[i].setElements();\n                this.sets[i].genMeshes();\n            });\n        }\n    }\n\n    updateUserColour(id, colour) {\n        this.updateModel(id, [id, colour], (id, colour) => {\n            this.sets[id].meshes = [];\n            this.sets[id].setUserColour(Model.rgbToHex(colour.r, colour.g, colour.b));\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShape(id, shape, parameters) {\n        this.updateModel(id, [id, shape, parameters], (id, shape, parameters) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shapeType = shape;\n            this.sets[id].parameters = parameters.vals;\n            this.sets[id].genGeometries();\n            this.sets[id].setElements();\n            this.sets[id].genMeshes();\n        });\n    }\n\n    updateShininess(id, val) {\n        this.updateModel(id, [id, val], (id, val) => {\n            this.sets[id].meshes = [];\n            this.sets[id].shininess = val;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleWireframe(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].wireframe = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    toggleUserColour(id, toggle) {\n        this.updateModel(id, [id, toggle], (id, toggle) => {\n            this.sets[id].meshes = [];\n            this.sets[id].colourByDirector = toggle;\n            this.sets[id].genMeshes();\n        });\n    }\n\n    genSets(sets) {\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.remove(m);\n            }\n        }\n        this.sets = [];\n        for (let setData of sets) {\n            this.sets.push(new Set(setData, this.clippingPlanes, this.clippingIntersections));\n        }\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n\n    //used for qmga conversion\n    load(data) {\n        let particleSets = data.split(\"$\");\n        let setData, ps;\n        for (let particleSet of particleSets) {\n            if (particleSet == \"\") {\n                return;\n            }\n            else {\n                setData = particleSet.split(\"\\n\");\n                ps = new Set(setData[0], setData[1], setData.slice(2), this.clippingPlanes, this.clippingIntersections);\n                this.sets.push(ps);\n            }\n        }\n        \n\n        for (let set of this.sets) {\n            for (const m of set.meshes) {\n                this.scene.add(m);\n            }\n        }\n    }\n\n}\n\nexport default Model;\n","\n\nimport { Dropdown, RangeSlider, InputGroup, InputNumber, Row, Col, Slider, ButtonToolbar} from 'rsuite';\nimport React, { useState } from \"react\";\n\n\nexport const ParameterSet = (props) => {\n    var set = [];\n\n    for (let i = 0; i < props.titles.length; i++) {\n\n        set.push(\n            <ParameterInput title={props.titles[i]} values={props.values[i]} numerical f={props.f} index={i} step={props.step} positive={props.positive} styling={props.styling}/>\n        );\n    }\n\n    return set;\n}\n\nexport class ParameterInput extends React.Component {\n\n\n    constructor(props) {\n        super();\n        this.styling = props.styling;\n        this.active = props.active;\n        this.f = props.f;\n        this.step = props.step;\n        this.title = props.title;\n        this.values = props.values;\n        this.numerical = props.numerical;\n        this.index = props.index;\n        this.selectingSet = props.selectingSet;\n        this.changeValue = this.changeValue.bind(this);\n\n        if (props.positive){\n            this.min = 0;\n        }\n    }\n\n    changeValue(value) {\n        this.active = value;\n        this.f(value, this.index);\n    }\n\n    render() {\n        var InputBox;\n\n        if (this.numerical) {\n            const defaultVal = this.values;\n            InputBox =\n                (<div style={this.styling[0]}>\n                    <InputNumber defaultValue={defaultVal} step={this.step} onChange={this.changeValue} min={this.min} />\n                </div>);\n        } else {\n\n            var vals = this.values;\n            var active = this.active;\n            var listItems = [];\n            let act;\n\n            for (let val of vals) {\n                (active.localeCompare(val)) ? act = false : act = true;\n                listItems.push(<Dropdown.Item eventKey={val} active={act} onSelect={this.changeValue}>{val}</Dropdown.Item>);\n            }\n\n            listItems.push(<Dropdown.Item eventKey={'panel'} panel style={{ width: 150 }}></Dropdown.Item>);\n\n            InputBox = (\n                <ButtonToolbar style={{ width: 10, marginLeft: 0 }}>\n                    <Dropdown style={{ width: 200 }} title={this.active}>\n                        {listItems}\n                    </Dropdown>\n                </ButtonToolbar>\n            );\n\n        }\n\n        return (\n            <div >\n                <Row style={{ marginTop: 15 }}>\n                    <Col md={10}><p style={this.styling[1]}>{this.title}</p></Col>\n                    <Col md={14} />\n                    <Col md={10}>{InputBox}</Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport const SliceSlider = (props) => {\n    const [value, setValue] = React.useState(props.vals);\n    let f = props.f;\n    let i = props.index;\n\n    return (\n        <div>\n            <br/>\n            <Row>\n                <Col md={5}>\n                    <p style={{ marginTop: 10, marginLeft: 30 }}>{props.title}</p>\n                </Col>\n                <Col md={1} />\n                <Col md={16}>\n                    <InputGroup>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[0]}\n                            step={0.1}\n                            onChange={nextValue => {\n                                const end = value[1];\n                                if (parseFloat(nextValue) > end) {\n                                    return;\n                                }\n                                setValue([parseFloat(nextValue), end]);\n                                f(i, [parseFloat(nextValue),end]);\n                            }}\n                        />\n                        <InputGroup.Addon>to</InputGroup.Addon>\n                        <InputNumber\n                            min={-50.0}\n                            max={50.0}\n                            value={value[1]}\n                            step={0.1}\n                            onChange={(nextValue) => {\n                                const start = value[0];\n                                if (start > parseFloat(nextValue)) {\n                                    return;\n                                }\n                                setValue([start, parseFloat(nextValue)]);\n                                f(i, [start, parseFloat(nextValue)]);\n                            }}\n                        />\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={21}>\n                    <RangeSlider\n                        min={-50.0}\n                        max={50.0}\n                        progress\n                        style={{ marginLeft: 35, marginTop: 30 }}\n                        value={value}\n                        onChange={value => {\n                            setValue(value);\n\n                            f(i, value);\n                        }}\n                    />\n                </Col>\n\n            </Row>\n        </div>\n    );\n}\n\nexport const CustomSlider = (props) => {\n\n    var f = props.f;\n    var [value, setValue] = useState(props.val);\n    var type;\n\n\n    let disabled = props.disabled;\n    const [min, max] = props.boundaries;\n\n\n    if (props.type == null) {\n        type = null;\n    } else {\n        type = props.type;\n    }\n\n\n    return (\n\n        <Row>\n            <Col md={10}>\n                <Slider\n                    style={{ marginLeft: 25, marginTop: 16, width: 170 }}\n                    value={value}\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, type);\n                    }}\n                />\n            </Col>\n            <Col md={4}>\n                <InputNumber\n                    style={{ marginLeft: 80, marginTop: 3, marginBottom: 3, width: 70, height: 35 }}\n                    min={min}\n                    max={max}\n                    value={value}\n                    disabled={disabled}\n                    onChange={value => {\n                        setValue(value);\n                        f(value, props.type)\n                    }}\n                />\n            </Col>\n        </Row>\n    );\n\n}","\nimport { Header, Dropdown, FormGroup, FlexboxGrid, Nav, Navbar, Icon, Button, ButtonToolbar, Slider, Form, ControlLabel, Whisper, Tooltip } from 'rsuite';\nimport { ParameterSet } from './Tools';\nimport React from \"react\";\nimport View from './View';\n\nclass ExportDropdown extends React.Component {\n\n    constructor(props) {\n        super();\n        this.dimensions = [1000, 1000];\n        this.f = props.f;\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.export = this.export.bind(this);\n    }\n\n    updateDimensions(val, index) {\n        this.dimensions[index] = parseInt(val);\n    }\n\n    export() {\n        this.f(...this.dimensions);\n    }\n\n    render() {\n        return (\n            <Dropdown title=\"Export\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"export\" />} >\n             \n                <ParameterSet f={this.updateDimensions} titles={['Height', 'Width']} values={this.dimensions} step={5} positive\n                    styling={[\n                        { marginLeft: 15 },\n                        { marginTop: 18, marginLeft: 35 }\n                    ]} />\n\n                <Button style={{ width: 180, marginLeft: 25, marginRight: 25, marginTop: 15, marginBottom: 15 }} appearance='primary' onClick={this.export}> Export </Button>\n            </Dropdown>);\n    }\n\n};\n\nconst SamplesDropdown = ({ ...props }) => (\n\n    <Dropdown {...props} onSelect={props.f}>\n        \n        <Dropdown.Item eventKey={1}>Sample 1</Dropdown.Item>\n        <Dropdown.Item eventKey={2}>Sample 2</Dropdown.Item>\n        <Dropdown.Item panel style={{ padding: 5, width: 120 }}></Dropdown.Item>\n\n        \n    </Dropdown>\n);\n\nclass PerformanceDropdown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.model = props.model;\n        this.state = {val: props.model.lod + 1};\n\n        this.updateVal = this.updateVal.bind(this);\n    }\n\n    updateVal(val) {\n        this.setState({\n            val: val\n        });\n    }\n\n    render() {\n        const lod = this.state.val;\n        return (\n            <Dropdown title=\"Performance\" trigger='click' placement=\"bottomEnd\" icon={<Icon icon=\"dashboard\" />}>\n                <Form style={{ marginLeft: 20, marginTop: 20 }} layout=\"inline\">\n                    <FormGroup>\n                        <ControlLabel>Level of Detail</ControlLabel>\n                        <Whisper placement=\"bottom\" trigger=\"hover\" speaker={\n                            <Tooltip>\n                                Decreasing LOD will increase rendering speed.\n                    </Tooltip>\n                        }>\n                            <Icon icon=\"question-circle\" size=\"lg\" />\n                        </Whisper>\n                    </FormGroup>\n                </Form>\n\n                <Slider\n                    min={1}\n                    step={1}\n                    max={5}\n                    value={lod}\n                    graduated\n                    progress\n                    style={{ width: 200, marginLeft: 30, marginRight: 30, marginBottom: 20 }}\n                    onChange={(value) => {\n                        this.model.updateLOD(value - 1);\n                        this.updateVal(value);\n                    }}\n\n                />\n                <br />\n            </Dropdown>\n        );\n    }\n\n}\n\n\nconst Top = ({ ...props }) => {\n\n    return (\n        <div>\n            <Header style={{ height: 56 }}>\n                <Navbar>\n                    <Navbar.Body>\n                        <Nav pullRight >\n                            <ButtonToolbar>\n                                <Nav.Item active>fps {props.fps}</Nav.Item>\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"info-circle\" />}>Manual</Nav.Item>\n                                <PerformanceDropdown model={props.model} />\n                                <SamplesDropdown title=\"Samples\" trigger='click' f={props.functions[3]} placement=\"bottomEnd\" icon={<Icon icon=\"folder-o\" />} />\n                                <ExportDropdown f={props.functions[2]} />\n                                <Nav.Item appearance=\"subtle\" icon={<Icon icon=\"file-download\" />} onSelect={props.functions[0]}>Save</Nav.Item>\n                                <input type=\"file\"\n                                    id=\"upload-btn\"\n                                    style={{ display: 'none' }}\n                                    className='input-file'\n                                    accept='.json,.webmga'\n                                    onChange={e => props.functions[1](e.target.files[0])} />\n                                <label for=\"upload-btn\">\n                                    <Nav.Item icon={<Icon icon=\"file-upload\" />}>Upload</Nav.Item>\n                                </label>\n\n                            </ButtonToolbar>\n\n                        </Nav>\n                        <Nav pullLeft>\n                            <h6 style={{ padding: 20 }}> WebMGA</h6>\n                        </Nav>\n                    </Navbar.Body>\n                </Navbar>\n            </Header>\n        </div>\n    );\n};\n\nexport default Top;","\nimport { Nav, Divider, Checkbox, FormGroup, RadioGroup, Radio, Grid, Row, Col, Alert } from 'rsuite';\nimport React from \"react\";\nimport { SliceSlider, ParameterInput, ParameterSet, CustomSlider } from './Tools'\nimport View from './View'\n\nconst TITLE_LEFT_MARGIN = 30;\nconst dividerStyle = {\n    color: '#A4A9A3'\n}\nconst submenuParameterSetStyling = [\n    { width: 130, marginLeft: 10 },\n    { marginTop: 10, marginLeft: 30 }\n];\nexport class ModelsOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.model;\n        this.model = props.model;\n\n        this.selectShape = this.selectShape.bind(this);\n        this.selectSet = this.selectSet.bind(this);\n        this.updateParameter = this.updateParameter.bind(this);\n        this.toggleWireframe = this.toggleWireframe.bind(this);\n        this.toggleColour = this.toggleColour.bind(this);\n        this.updateShininess = this.updateShininess.bind(this);\n        this.updateUserColour = this.updateUserColour.bind(this);\n    }\n\n    updateShininess(val) {\n        this.setState({\n            shininess: val\n        });\n        View.state.model.configurations[this.state.active].shininess = val;\n        this.model.updateShininess(this.state.active, val)\n    }\n\n    updateUserColour(value, type) {\n        let colour = this.state.configurations[this.state.active].colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateUserColour(this.state.active, colour);\n        View.state.model.configurations[this.state.active].colour = colour;\n    }\n\n    toggleColour() {\n        let toggle = !this.state.configurations[this.state.active].colourFromDirector;\n        this.setState({\n            colourFromDirector: toggle\n        });\n        View.state.model.configurations[this.state.active].colourFromDirector = toggle;\n        this.model.toggleUserColour(this.state.active, toggle);\n    }\n\n    toggleWireframe() {\n        let toggle = !this.state.configurations[this.state.active].displayAsWireframe;\n        this.setState({\n            displayAsWireframe: toggle\n        });\n        View.state.model.configurations[this.state.active].displayAsWireframe = toggle;\n        this.model.toggleWireframe(this.state.active, toggle);\n    }\n\n    updateParameter(val, index) {\n        let parameter = parseFloat(val);\n\n        let globalState = View.state.model.configurations[this.state.active];\n        globalState.parameters.vals[index] = parameter;\n\n        let configs = this.state.configurations;\n        configs[this.state.active].parameters.vals[index] = parameter;\n\n        this.setState({\n            configurations: configs\n        });\n\n        this.model.updateShape(this.state.active, globalState.shape, globalState.parameters);\n        this.reset();\n    }\n\n    reset() {\n        let i;\n        if (this.state.reset > 50) {\n            i = 0;\n        } else {\n            i = this.state.reset;\n        }\n        this.setState(\n            {\n                reset: ++i\n            }\n        );\n    }\n\n    selectSet(val) {\n        for (let i = 0; i < this.state.sets.length; i++) {\n            if (this.state.sets[i].localeCompare(val) === 0) {\n                this.setState({\n                    active: i\n                })\n                View.state.model.active = i;\n                break;\n            }\n        }\n        this.reset();\n    }\n\n    selectShape(val) {\n        let parameters = this.model.getParameters(val);\n        this.setState(\n            {\n                shape: val,\n                parameters: parameters\n            }\n        );\n        this.reset();\n        View.state.model.configurations[this.state.active].shape = val;\n        View.state.model.configurations[this.state.active].parameters = parameters;\n        this.model.updateShape(this.state.active, val, parameters);\n    }\n\n    render() {\n        const configState = this.state.configurations[this.state.active];\n        const reset = this.state.reset;\n        const title = configState.title;\n        const shapes = [\"Ellipsoid\", \"Sphere\", \"Spherocylinder\", \"Spheroplatelet\", \"Cut Sphere\", \"Cone\", \"Cylinder\", \"Torus\"];\n        const sets = this.state.sets;\n\n        return (\n            <div key={reset}>\n\n\n                <Divider><strong style={dividerStyle}> Configuration</strong></Divider>\n                <ParameterInput f={this.selectSet} selectingSet title=\"Set\" values={sets} active={title} styling={submenuParameterSetStyling} />\n                <ParameterInput f={this.selectShape} title=\"Shape\" values={shapes} active={configState.shape} styling={submenuParameterSetStyling} />\n                <ParameterSet f={this.updateParameter} titles={configState.parameters.names} values={configState.parameters.vals} step={0.1} positive styling={submenuParameterSetStyling}/>\n                <br />\n                <Divider><strong style={dividerStyle}>  Material </strong></Divider>\n\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox checked={configState.displayAsWireframe} onClick={this.toggleWireframe}> Display as Wireframe </Checkbox>\n                        <Checkbox checked={configState.colourFromDirector} onClick={this.toggleColour}> Colour from Director </Checkbox>\n                        <br />\n                    </Col>\n                </Row>\n\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.r} type={'r'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.g} type={'g'} />\n                <CustomSlider f={this.updateUserColour} disabled={configState.colourFromDirector} boundaries={[0, 255]} val={configState.colour.b} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Shininess </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={configState.shininess} f={this.updateShininess} />\n\n            </div>\n        );\n    }\n}\n\nexport class CameraOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.camera;\n        this.model = props.model;\n        this.toggleAutorotate = this.toggleAutorotate.bind(this);\n        this.selectCameraType = this.selectCameraType.bind(this);\n        this.updateLookat = this.updateLookat.bind(this);\n\n    }\n    toggleAutorotate() {\n        this.setState({\n            rotating: !this.state.rotating\n        });\n        View.state.camera.rotating = !View.state.camera.rotating;\n        this.model.toggleCameraRotation();\n    }\n    selectCameraType(value) {\n        this.setState({\n            type: value\n        });\n        View.state.camera.type = value;\n        this.model.setCamera(value);\n    }\n\n    updateLookat(value, type) {\n        let lookAt = this.state.lookAt;\n\n        switch (type) {\n            case 0:\n                lookAt.x = parseFloat(value);\n                break;\n            case 1:\n                lookAt.y = parseFloat(value);\n                break;\n            case 2:\n                lookAt.z = parseFloat(value);\n                break;\n            default:\n                Alert.error('Error: Unexpected LookAt Identifier');\n        }\n\n        this.model.updateLookAt(lookAt);\n        View.state.camera.lookAt = lookAt;\n    }\n\n\n    render() {\n        const cameraType = this.state.type;\n        const rotating = this.state.rotating;\n        const lookAt = [this.state.lookAt.x, this.state.lookAt.y, this.state.lookAt.z];\n\n        return (\n            <div >\n\n                <Divider><strong style={dividerStyle}> Camera </strong></Divider>\n                <Row className=\"show-grid\">\n                    <Col xs={2} />\n                    <Col xs={12}>\n\n                        <FormGroup controlId=\"radioList\">\n                            <RadioGroup name=\"radioList\" value={cameraType} onChange={this.selectCameraType}>\n                                <p>Type</p>\n                                <Radio defaultChecked value=\"perspective\">Perspective </Radio>\n                                <Radio value=\"orthographic\">Orthographic </Radio>\n                            </RadioGroup>\n                        </FormGroup>\n\n                    </Col>\n                </Row>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n\n                            <Checkbox checked={rotating} onClick={this.toggleAutorotate}> AutoRotate</Checkbox>\n                        </Col>\n                    </Row>\n                    <br />\n                    <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Rotation Speed </p>\n\n                    <CustomSlider disabled={true} boundaries={[0, 100]} />\n\n                    <Row className=\"show-grid\">\n                        <Col xs={2} />\n                        <Col xs={12}>\n                            <br />\n                            <p> Look at</p>\n                        </Col>\n                    </Row>\n                </Grid>\n\n                <ParameterSet titles={[\"X position\", \"Y position\", \"Z position\"]} values={lookAt} f={this.updateLookat} step={0.5} styling={submenuParameterSetStyling}/>\n                <br />\n\n\n\n            </div>);\n    }\n}\n\nexport class SlicingOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.slicing;\n        this.model = props.model;\n\n        this.toggleIntersection = this.toggleIntersection.bind(this);\n        this.toggleHelperX = this.toggleHelperX.bind(this);\n        this.toggleHelperY = this.toggleHelperY.bind(this);\n        this.toggleHelperZ = this.toggleHelperZ.bind(this);\n        this.updateHelpers = this.updateHelpers.bind(this);\n        this.updateSlicer = this.updateSlicer.bind(this);\n    }\n\n    toggleIntersection() {\n        let toggle = !this.state.clipIntersection;\n        this.setState(\n            {\n                clipIntersection: toggle\n            }\n        );\n        View.state.slicing.clipIntersection = toggle;\n        this.model.toggleClipIntersection(toggle);\n    }\n\n    updateHelpers(helpers) {\n        this.setState(\n            {\n                helpers: helpers\n            }\n        );\n        View.state.slicing.helpers = helpers;\n    }\n\n    toggleHelperX() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[0];\n        helpers[0] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(0, toggle);\n    }\n\n    toggleHelperY() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[1];\n        helpers[1] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(1, toggle);\n    }\n\n    toggleHelperZ() {\n        let helpers = this.state.helpers;\n        let toggle = !helpers[2];\n        helpers[2] = toggle;\n        this.updateHelpers(helpers);\n        this.model.toggleHelper(2, toggle);\n    }\n\n    updateSlicer(i, vals) {\n        switch (i) {\n            case 0:\n                View.state.slicing.x = vals;\n                break;\n            case 1:\n                View.state.slicing.y = vals;\n                break;\n            case 2:\n                View.state.slicing.z = vals;\n                break;\n            default:\n                Alert.error('Error: Unexpected Slicing Identifier');\n        }\n\n        this.model.updateSlicer(i, vals);\n    }\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={20}>\n                            <Checkbox disabled={true} checked={state.clipIntersection} onClick={this.toggleIntersection}> Slice Intersection</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                {/* TO DO */}\n                <SliceSlider title=\"X : \" f={this.updateSlicer} index={0} vals={state.x} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[0]} onClick={this.toggleHelperX}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Y : \" f={this.updateSlicer} index={1} vals={state.y} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[1]} onClick={this.toggleHelperY}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n                <SliceSlider title=\"Z : \" f={this.updateSlicer} index={2} vals={state.z} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={state.helpers[2]} onClick={this.toggleHelperZ}> Show Helper</Checkbox>\n                        </Col>\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport const AdditionalLightsNav = ({ active, onSelect }) => {\n    return (\n        <Nav activeKey={active} onSelect={onSelect} style={{ margin: 10, width: 280 }} justified appearance=\"tabs\">\n            <Nav.Item eventKey=\"point\">Point</Nav.Item>\n            <Nav.Item eventKey=\"directional\">Directional</Nav.Item>\n        </Nav>\n    );\n};\n\nexport class AdditionalLightOptions extends React.Component {\n\n    constructor(props) {\n        super();\n        this.state = View.state.pointLight;\n        this.model = props.model;\n        this.reset = 0;\n        this.handleSelect = this.handleSelect.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updatePosition = this.updatePosition.bind(this);\n        this.toggleLightEnabled = this.toggleLightEnabled.bind(this);\n\n    }\n    handleSelect() {\n        if (this.state.active.localeCompare('point') === 0) {\n            this.setState(View.state.directionalLight);\n        } else {\n            this.setState(View.state.pointLight);\n        }\n        if (this.reset > 5) {\n            this.reset = 0;\n        }\n\n        this.setState({ reset: ++this.reset });\n    }\n    toggleLightEnabled() {\n        let enabled = !this.state.enabled;\n        this.setState({\n            enabled: enabled\n        });\n        let intensity;\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.enabled = enabled;\n            intensity = View.state.pointLight.colour.i;\n        } else {\n            View.state.directionalLight.enabled = enabled;\n            intensity = View.state.directionalLight.colour.i;\n        }\n\n        if (enabled) {\n            this.updateColour(intensity, 'i');\n        } else {\n            this.updateColour(0, 'i');\n        }\n        this.setState({ reset: ++this.reset });\n\n        if (this.state.active.localeCompare('point') === 0) {\n            View.state.pointLight.colour.i = intensity;\n        } else {\n            View.state.directionalLight.colour.i = intensity;\n        }\n\n\n    }\n    updateColour(value, type) {\n        let colour = this.state.colour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLight(2, colour);\n            View.state.pointLight.colour = colour;\n        } else {\n            this.model.updateLight(1, colour);\n            View.state.directionalLight.colour = colour;\n        }\n    }\n    updatePosition(value, type) {\n        let position = this.state.position;\n\n        switch (type) {\n            case 'x':\n                position.x = value;\n                break;\n            case 'y':\n                position.y = value;\n                break;\n            case 'z':\n                position.z = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected Position Identifier');\n        }\n\n        if (this.state.active.localeCompare('point') === 0) {\n            this.model.updateLightPosition(2, position);\n            View.state.pointLight.position = position;\n        } else {\n            this.model.updateLightPosition(1, position);\n            View.state.directionalLight.position = position;\n        }\n    }\n\n    render() {\n        const active = this.state.active;\n        const lightState = this.state;\n\n        return (\n            <div key={lightState.reset}>\n                <br />\n                <AdditionalLightsNav active={active} onSelect={this.handleSelect} />\n                <br />\n                <Grid fluid>\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={lightState.enabled} onClick={this.toggleLightEnabled}> <strong>Enabled </strong> </Checkbox>\n                            <Checkbox disabled={true}> <strong>Show Helper </strong> </Checkbox>\n                            <br />\n                        </Col>\n                    </Row>\n                </Grid>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 255]} val={lightState.colour.b} f={this.updateColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[0, 100]} val={lightState.colour.i} f={this.updateColour} type={'i'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Position XYZ </p>\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.x} f={this.updatePosition} type={'x'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.y} f={this.updatePosition} type={'y'} />\n                <CustomSlider disabled={!lightState.enabled} boundaries={[-50, 50]} val={lightState.position.z} f={this.updatePosition} type={'z'} />\n            </div>\n        );\n    }\n}\n\nexport class AmbientLightOptions extends React.Component {\n    constructor(props) {\n        super();\n\n        this.state = View.state.ambientLight;\n\n        this.model = props.model;\n\n        this.updateAmbientLightColour = this.updateAmbientLightColour.bind(this);\n        this.updateBackgroundColour = this.updateBackgroundColour.bind(this);\n    }\n    updateAmbientLightColour(value, type) {\n        let colour = this.state.ambientLightColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            case 'i':\n                colour.i = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateLight(0, colour);\n        View.state.ambientLight.ambientLightColour = colour;\n    }\n    updateBackgroundColour(value, type) {\n        let colour = this.state.backgroundColour;\n\n        switch (type) {\n            case 'r':\n                colour.r = value;\n                break;\n            case 'g':\n                colour.g = value;\n                break;\n            case 'b':\n                colour.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateBg(colour);\n        View.state.ambientLight.backgroundColour = colour;\n    }\n    render() {\n        const ambientLightColour = this.state.ambientLightColour;\n        const backgroundColour = this.state.backgroundColour;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Ambient Light </strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.r} f={this.updateAmbientLightColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.g} f={this.updateAmbientLightColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={ambientLightColour.b} f={this.updateAmbientLightColour} type={'b'} />\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Intensity </p>\n                <CustomSlider disabled={false} boundaries={[0, 100]} val={ambientLightColour.i} f={this.updateAmbientLightColour} type={'i'} />\n                <Divider><strong style={dividerStyle}> Background Colour</strong></Divider>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.r} f={this.updateBackgroundColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.g} f={this.updateBackgroundColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={backgroundColour.b} f={this.updateBackgroundColour} type={'b'} />\n            </div>\n        );\n    }\n}\n\nexport class ReferenceOptions extends React.Component {\n    constructor(props) {\n        super();\n        this.state = View.state.reference;\n\n        this.model = props.model;\n        this.toggleBoundingShapeEnabled = this.toggleBoundingShapeEnabled.bind(this);\n        this.selectShape = this.selectShape.bind(this);\n        this.toggleAxes = this.toggleAxes.bind(this);\n        this.toggleGrid = this.toggleGrid.bind(this);\n        this.updateColour = this.updateColour.bind(this);\n        this.updateGridSize = this.updateGridSize.bind(this);\n\n    }\n    updateColour(value, type) {\n        let rgb = this.state.gridColour;\n\n        switch (type) {\n            case 'r':\n                rgb.r = value;\n                break;\n            case 'g':\n                rgb.g = value;\n                break;\n            case 'b':\n                rgb.b = value;\n                break;\n            default:\n                Alert.error('Error: Unexpected RGB Identifier');\n        }\n        this.model.updateReferenceColour(rgb);\n        View.state.reference.gridColour = rgb;\n    }\n    updateGridSize(value) {\n        this.model.updateGridSize(value);\n        View.state.reference.size = value;\n    }\n    toggleBoundingShapeEnabled() {\n        let toggle = !View.state.reference.boundingShapeEnabled;\n        this.setState({\n            boundingShapeEnabled: toggle\n        });\n        View.state.reference.boundingShapeEnabled = toggle;\n        this.model.updateBoundingShape(this.state.activeShape, toggle);\n    }\n    selectShape(value) {\n        this.setState({\n            activeShape: value\n        });\n        View.state.reference.activeShape = value;\n        this.model.updateBoundingShape(value, this.state.boundingShapeEnabled);\n    }\n    toggleAxes() {\n        this.setState({\n            showAxes: !this.state.showAxes\n        });\n        this.model.toggleAxes();\n        View.state.reference.showAxes = !View.state.reference.showAxes;\n    }\n    toggleGrid() {\n        this.setState({\n            showGrid: !this.state.showGrid\n        });\n        this.model.toggleGrid();\n        View.state.reference.showGrid = !View.state.reference.showGrid;\n    }\n\n    render() {\n        const enabled = this.state.boundingShapeEnabled;\n        const activeShape = this.state.activeShape;\n        const showAxes = this.state.showAxes;\n        const showGrid = this.state.showGrid;\n        const colour = this.state.gridColour;\n        const size = this.state.size;\n        return (\n            <div>\n                <Divider><strong style={dividerStyle}> Elements </strong></Divider>\n\n                <Grid fluid>\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={enabled} onClick={this.toggleBoundingShapeEnabled}> Bounding Shape </Checkbox>\n                        </Col>\n                    </Row>\n                    <Row className=\"show-grid\">\n                        <Col xs={3} />\n                        <Col xs={12}>\n                            <FormGroup controlId=\"radioList\">\n                                <RadioGroup name=\"radioList\" value={activeShape} onChange={this.selectShape}>\n                                    <Radio disabled={!enabled} value=\"box\"  >Box </Radio>\n                                    <Radio disabled={!enabled} value=\"sphere\" >Sphere </Radio>\n                                    {/* TO DO CYLINDER */}\n                                    <Radio disabled={true} value=\"cylinder\" >Cylinder </Radio>\n\n                                </RadioGroup>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <br />\n\n                    <Row className=\"show-grid\">\n                        <Col xs={1} />\n                        <Col xs={12}>\n                            <Checkbox checked={showAxes} onClick={this.toggleAxes}> Show Axes</Checkbox>\n                            <Checkbox checked={showGrid} onClick={this.toggleGrid}> Show Grid</Checkbox>\n                        </Col>\n                    </Row>\n\n                    <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> Size </p>\n                    <CustomSlider disabled={false} boundaries={[0, 100]} val={size} f={this.updateGridSize} />\n\n                </Grid>\n\n                <Divider><strong style={dividerStyle}> Colour </strong></Divider>\n                <Row className=\"show-grid\">\n                    <Col xs={1} />\n                    <Col xs={20}>\n                        <Checkbox disabled={true}> Multi-Colour Axes </Checkbox>\n                    </Col>\n                </Row>\n                <br/>\n                <p style={{ marginLeft: TITLE_LEFT_MARGIN }}> RGB </p>\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.r} f={this.updateColour} type={'r'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.g} f={this.updateColour} type={'g'} />\n                <CustomSlider disabled={false} boundaries={[0, 255]} val={colour.b} f={this.updateColour} type={'b'} />\n\n\n                <br />\n            </div>\n        );\n    }\n}","\nimport { Sidebar, Nav, Icon, Navbar, Container, Content, IconButton, Alert } from 'rsuite';\nimport React, { Component } from \"react\";\nimport { CameraOptions, AdditionalLightOptions, AmbientLightOptions, ReferenceOptions, SlicingOptions, ModelsOptions } from './SubMenus'\n\n\nconst NavToggle = ({ expand, onChange }) => {\n    return (\n        <Navbar appearance=\"subtle\" className=\"nav-toggle\">\n            <Navbar.Body>\n                <Nav pullRight>\n                    <IconButton\n                        circle\n                        style={{ textAlign: 'center', margin: 10 }}\n                        onClick={onChange}\n                        appearance=\"default\"\n                        icon={<Icon icon={expand ? 'angle-left' : 'angle-right'} />} />\n                </Nav>\n            </Navbar.Body>\n        </Navbar>\n    );\n};\n\nconst navItemStyle = { margin: 6.5 };\n\nvar sidebarHeight = window.innerHeight - 56; \n\nconst CustomNav = ({ active, onSelect, ...props }) => {\n    return (\n        <div>\n        <Nav {...props} activeKey={active} onSelect={onSelect} style={{  backgroundColor: '#101010', height: sidebarHeight }}>\n            <Nav.Item title=\"Models\" tooltip eventKey=\"Models\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"shapes\" />}>\n            </Nav.Item>\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>View</Tooltip>)}> */}\n            <Nav.Item eventKey=\"View\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"eye\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Ambient Light</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Ambient Light\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"sun-o\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Other Lighting</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Other Lighting\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"creative\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Slicing</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Slicing\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cut\" />} />\n            {/* </Whisper> */}\n            {/* <Whisper placement=\"right\" trigger=\"hover\" speaker={(<Tooltip>Reference Frame Frame</Tooltip>)}> */}\n            <Nav.Item eventKey=\"Reference\" icon={<Icon style={navItemStyle} size=\"lg\" icon=\"cube\" />} />\n            {/* </Whisper> */}\n            \n        </Nav>\n        </div>\n    );\n};\n\nconst MenuContent = ({ active, expand, onChange, model }) => {\n\n    var menuContent = [];\n\n    if (!expand) {\n        menuContent.push(<NavToggle expand={expand} onChange={onChange} />);\n    } else {\n        menuContent.push(\n            <div  style={{backgroundColor: '#0F131B'}}>\n            <Nav>\n                <Navbar appearance=\"subtle\">\n                    <Nav pullLeft>\n                        <h3 style={{ marginTop: 15, marginLeft: 30 }}>{active}</h3>\n                    </Nav>\n                    <Nav pullRight>\n                        <NavToggle expand={expand} onChange={onChange} />\n                    </Nav>\n                </Navbar>\n\n            </Nav>\n            </div>\n        );\n    }\n\n    if (expand) {\n        switch (active) {\n            case \"Models\":\n                menuContent.push(<ModelsOptions model={model}/>);\n                break;\n            case \"View\":\n                menuContent.push(<CameraOptions model={model}/>);\n                break;\n            case \"Ambient Light\":\n                menuContent.push(<AmbientLightOptions model={model}/>);\n                break;\n            case \"Other Lighting\":\n                menuContent.push(<AdditionalLightOptions model={model}/>);\n                break;\n            case \"Slicing\":\n                menuContent.push(<SlicingOptions model={model} />);\n                break;\n            case \"Reference\":\n                menuContent.push(<ReferenceOptions model={model}/>);\n                break;\n            default:\n                Alert.error('Error: Unknown Submenu Identifier');\n        }\n    }\n\n    return menuContent;\n\n}\n\nclass Side extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: props.sidebarExpanded,\n            active: 'Models'\n        };\n        this.model = props.model;\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n    }\n    handleToggle() {\n        this.setState({\n            expand: !this.state.expand\n        });\n        this.model.toggleSidebar();\n\n    }\n    handleSelect(activeKey) {\n        this.setState({\n            active: activeKey\n        });\n\n        if (!this.state.expand) {\n            this.handleToggle();\n        }\n\n    }\n    render() {\n        const { expand } = this.state;\n        const { active } = this.state;\n        return (\n            <div>\n                <Sidebar\n                    style={{ display: 'flex', flexDirection: 'column' }}\n                    width={expand ? 356 : 56}\n                    collapsible\n                    appearance=\"default\" \n                >\n                    <Container>\n                        <Sidebar width={56} >\n                            <CustomNav vertical appearance=\"subtle\" active={active} onSelect={this.handleSelect} />\n                        </Sidebar>\n                        <Content >\n                            <MenuContent active={active} expand={expand} onChange={this.handleToggle} model={this.model}/>\n                        </Content>\n\n                    </Container>\n\n                </Sidebar>\n            </div>\n\n        );\n    }\n}\n\n\nexport default Side;","import React from \"react\";\nimport Top from './Top';\nimport Side from './Side';\n\nexport class View {\n    header;\n    sidebar;\n    model;\n    expanded;\n\n    static state;\n\n    constructor(m, io) {\n        View.state = {}\n        this.expanded = false;\n        this.model = m;\n        this.header = <Top fps={60} functions={io} model={this.model} />;\n        this.sidebar = <Side model={this.model} sidebarExpanded={this.expanded} />;\n    }\n\n    getData() {\n        return View.state;\n    }\n\n    setState(state) {\n        View.state = state;\n        this.loadLightingAndCamera(state);\n        this.loadReferenceAndSlicing(state);\n        this.loadModel(state);\n    }\n\n    loadModel(state) {\n        let substate;\n        for (let i in state.model.configurations) {\n            substate = state.model.configurations[i];\n            this.model.updateShininess(i, substate.shininess);\n            this.model.updateUserColour(i, substate.colour);\n            this.model.toggleUserColour(i, substate.colourFromDirector);\n            this.model.toggleWireframe(i, substate.displayAsWireframe);\n            this.model.updateShape(i, substate.shape, substate.parameters);\n        }\n    }\n\n    xor(a, b) {\n        return (a && !b) || (!a && b);\n    }\n\n\n    loadReferenceAndSlicing(state) {\n\n        if (this.xor(this.model.gridEnabled, state.reference.showGrid)) {\n            this.model.toggleGrid();\n        }\n\n        if (this.xor(this.model.axesEnabled, state.reference.showAxes)) {\n            this.model.toggleAxes();\n        }\n        this.model.updateReferenceColour(state.reference.gridColour);\n        this.model.updateGridSize(state.reference.size);\n        this.model.updateBoundingShape(state.reference.activeShape, state.reference.boundingShapeEnabled);\n        this.model.toggleClipIntersection(state.slicing.clipIntersection);\n        this.model.toggleHelper(0, state.slicing.helpers[0]);\n        this.model.toggleHelper(1, state.slicing.helpers[1]);\n        this.model.toggleHelper(2, state.slicing.helpers[2]);\n        this.model.updateSlicer(0, state.slicing.x);\n        this.model.updateSlicer(1, state.slicing.y);\n        this.model.updateSlicer(2, state.slicing.z);\n    }\n\n    loadLightingAndCamera(state) {\n        let directionalLightColour = JSON.parse(JSON.stringify(state.directionalLight.colour));\n        let pointLightColour = JSON.parse(JSON.stringify(state.pointLight.colour));\n\n        if (!state.directionalLight.enabled) {\n            directionalLightColour.i = 0;\n        }\n        if (!state.pointLight.enabled) {\n            pointLightColour.i = 0;\n        }\n\n        this.model.updateBg(state.ambientLight.backgroundColour);\n        this.model.updateLight(0, state.ambientLight.ambientLightColour);\n        this.model.updateLight(1, directionalLightColour);\n        this.model.updateLight(2, pointLightColour);\n        this.model.updateLightPosition(1, state.directionalLight.position);\n        this.model.updateLightPosition(2, state.pointLight.position);\n        this.model.controls.autoRotate = state.camera.rotating;\n        this.model.setCamera(state.camera.type);\n        this.model.updateLookAt(state.camera.lookAt);\n    }\n\n    setDefaultStates(starting) {\n        View.state.reference = this.ReferenceDefaultState;\n        View.state.ambientLight = this.AmbientLightDefaultState;\n        View.state.pointLight = this.PointLightDefaultState;\n        View.state.directionalLight = this.DirectionalLightDefaultState;\n        View.state.camera = this.CameraDefaultState;\n        View.state.slicing = this.SlicingDefaultState;\n        View.state.model = this.ModelDefaultState;\n\n        for (let i in this.model.sets) {\n            let set = JSON.parse(JSON.stringify(this.ConfigurationDefaultState));\n            set.title = this.model.sets[i].name;\n            View.state.model.sets.push(set.title);\n            View.state.model.configurations.push(set);\n        }\n\n        if (!starting) {\n            this.loadLightingAndCamera(View.state);\n            this.loadReferenceAndSlicing(View.state);\n            this.loadModel(View.state);\n        }\n    }\n\n\n    ModelDefaultState = {\n        active: 0,\n        reset: 0,\n        sets: [],\n        configurations: []\n    }\n\n    SlicingDefaultState = {\n        clipIntersection: false,\n        helpers: [false, false, false],\n        x: [-50, 50],\n        y: [-50, 50],\n        z: [-50, 50]\n    }\n\n    ConfigurationDefaultState = {\n        title: '',\n        shape: 'Ellipsoid',\n        parameters: {\n            names: ['X', 'Y', 'Z'],\n            vals: [0.5, 0.2, 0.2]\n        },\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255\n        },\n        shininess: 30,\n        colourFromDirector: true,\n        displayAsWireframe: true\n    }\n\n    CameraDefaultState = {\n        rotating: false,\n        type: 'perspective',\n        lookAt: {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    }\n\n    PointLightDefaultState = {\n        reset: 0,\n        active: 'point',\n        enabled: true,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 60\n        },\n        position: {\n            x: 5,\n            y: 0,\n            z: 5\n        }\n    }\n\n    DirectionalLightDefaultState = {\n        reset: 0,\n        active: 'directional',\n        enabled: true,\n        colour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 50\n        },\n        position: {\n            x: -5,\n            y: 0,\n            z: -5\n        }\n\n    }\n\n    ReferenceDefaultState = {\n        boundingShapeEnabled: false,\n        activeShape: 'box',\n        showAxes: false,\n        showGrid: false,\n        gridColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n        },\n        size: 50,\n\n    }\n\n    AmbientLightDefaultState = {\n        ambientLightColour: {\n            r: 255,\n            g: 255,\n            b: 255,\n            i: 40\n        },\n        backgroundColour: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    }\n\n}\n\nexport default View;","import Model from \"./Model/Model\";\nimport View from \"./View/View\"\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport sample1 from './Samples/1.json';\nimport sample2 from './Samples/2.json';\nimport { Alert, Notification } from 'rsuite'\n\nclass Controller {\n    model;\n    view;\n    io;\n\n    constructor() {\n        this.io = [this.save, this.load, this.export, this.loadSample];\n        this.model = new Model();\n        this.view = new View(this.model, this.io);\n        Alert.config(\n            ({\n                top: 70,\n                duration: 6000\n            })\n        );\n    }\n\n    start = () => {\n        this.addListeners();\n        this.generate(sample2, true);\n        this.render();\n\n\n        this.notify('info', 'Welcome!',\n            (<p style={{ width: 320 }} >\n                Use your mouse to control the camera. See 'Performance' tab if it's running slowly. Please check out both samples!\n            </p>)\n        );\n    }\n\n    notify(type, title, description) {\n        Notification[type]({\n            title: title,\n            placement: 'bottomEnd',\n            duration: 30000,\n            description: description\n        });\n    }\n\n    //from stackoverflow\n    download = (data, filename, type) => {\n        var file = new Blob([data], { type: type });\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        }\n    }\n\n    save = () => {\n        let data = {};\n        data.model = this.model.getData();\n        data.state = this.view.getData();\n        this.download(JSON.stringify(data), 'visualisation.webmga', 'application/json');\n    }\n\n    generate = (data, starting) => {\n        this.view.expanded = false;\n\n        this.model.genSets(data.model.sets);\n\n        if (data.state == null) {\n            Alert.info(\"Set default viewing state.\");\n            this.view.setDefaultStates(starting);\n        } else {\n            this.view.setState(data.state);\n        }\n    }\n\n    load = (file) => {\n        let fileReader = new FileReader();\n        const read = () => {\n            var data = JSON.parse(fileReader.result);\n            try {\n                this.generate(data, false);\n                Alert.info('File loaded successfully.');\n            } catch (err) {\n                Alert.error(err);\n            }\n        }\n        fileReader.onloadend = read;\n        fileReader.readAsText(file);\n\n    }\n\n    loadSample = (id) => {\n        switch (id) {\n            case 1:\n                this.generate(sample1, false);\n                Alert.info('File loaded successfully.');\n                break;\n            case 2:\n                this.generate(sample2, false);\n                Alert.info('File loaded successfully.');\n                break;\n            default:\n                Alert.error('Error: File does not exist');\n        }\n    }\n\n    convertQMGA = () => {\n        // fetch(sample2)\n        //     .then(res => res.text())\n        //     .then(configData => {\n        //         this.model.load(configData);\n        //         this.view.setDefaultStates();\n        //         console.log(this.model.sets);\n        //     });\n    }\n\n    export = (height, width) => {\n        // fix orthographic projection\n\n        this.model.height = height;\n        this.model.width = width;\n        this.model.updateCamera();\n\n        this.model.renderer.setSize(width, height);\n        this.model.renderer.render(this.model.scene, this.model.camera);\n        const dataURL = this.model.renderer.domElement.toDataURL(\"image/png\", 1.0).replace(\"image/png\", \"image/octet-stream\");\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n        \n        var link = document.createElement('a');\n        link.download = \"WebMGA Visualisation.png\";\n        link.href = dataURL;\n        link.click();\n\n        this.model.updateDimensions();\n        this.model.updateCamera();\n\n\n        this.notify('success', 'Thank you!', (\n            <div>\n                <p style={{ width: 320 }} >\n                    Please cite us!\n                </p>\n                <a href=\"https://www.ucl.ac.uk/prospective-students/undergraduate/degrees/computer-science-bsc\" target=\"_blank\" rel=\"noopener noreferrer\">Here</a>\n            </div>\n        ));\n    }\n\n    getHeader = () => {\n        return this.view.header;\n    }\n\n    getSiderbar = () => {\n        return this.view.sidebar;\n    }\n\n    getDomElement = () => {\n        return this.model.renderer.domElement;\n    }\n\n    render = () => {\n        //this.stats.begin();\n        this.model.update();\n        //this.stats.end();\n        //this.updateFPS();\n        requestAnimationFrame(this.render);\n    }\n\n    addListeners = () => {\n\n        document.body.style.overflow = \"hidden\";\n\n        window.addEventListener('resize', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n        document.addEventListener('fullscreenchange', () => {\n            this.model.updateDimensions();\n            this.model.updateCamera();\n        });\n\n\n        document.body.onkeydown = (e) => {\n            var key = e.keyCode;\n            //TODO\n            //spacebar\n            if (key == 32) {\n                this.view.expanded = false;\n                View.state.camera.rotating = !View.state.camera.rotating;\n                this.model.toggleCameraRotation();\n            }\n            // //a\n            // if (key == 65) {\n            //     this.model.toggleAxes();\n            // }\n            // //g\n            // if (key == 71) {\n            //     this.model.toggleGrid();\n            // }\n            // if (key == 69) {\n            //     this.view.toggleSidebar();\n            // }\n        }\n    }\n\n\n}\n\n\n\nexport default Controller;\n\n\nvar Stats = function () {\n\n    var fps = 10;\n    var frames = 0;\n    var prevTime;\n\n    return {\n        getFPS: function () {\n            return fps;\n        },\n        begin: function () {\n            prevTime = Date.now();\n        },\n        end: function () {\n            frames++;\n            var time = Date.now();\n\n            if (time > prevTime + 1000) {\n                fps = (frames * 1000) / (time - prevTime);\n                prevTime = time;\n                frames = 0;\n                console.log(fps);\n            }\n        },\n\n    };\n\n};\n\n","import React, { Component } from \"react\";\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport { Container, Content } from 'rsuite';\nimport Controller from \"./Controller\";\n\nclass App extends Component {\n  controller;\n\n  constructor(props) {\n    super(props);\n    this.controller = new Controller();\n\n    this.state = {\n      header: this.controller.getHeader(),\n      sidebar: this.controller.getSiderbar()\n    };\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(this.controller.getDomElement());\n    this.controller.start();\n  }\n\n  render() {\n    const header = this.state.header;\n    const sidebar = this.state.sidebar;\n\n    return (\n      <div >\n        <Container>\n          {header}\n          <Container>\n            {sidebar}\n            <Content>\n              <div ref={ref => (this.mount = ref)} />\n            </Content>\n          </Container>\n\n        </Container>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}